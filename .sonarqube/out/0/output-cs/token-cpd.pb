∞F
4D:\Daniel\PMII\RpgApi\Controllers\ArmasController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ArmasController  
:! "
ControllerBase# 1
{ 
private 
readonly 
DataContext $
_context% -
;- .
public 
ArmasController 
( 
DataContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
	GetSingle) 2
(2 3
int3 6
id7 9
)9 :
{ 	
try 
{ 
Arma 
a 
= 
await 
_context '
.' (
Armas( -
. 
FirstOrDefaultAsync +
(+ ,
aBusca, 2
=>3 5
aBusca6 <
.< =
Id= ?
==@ B
idC E
)E F
;F G
return   
Ok   
(   
a   
)   
;   
}!! 
catch"" 
("" 
System"" 
."" 
	Exception"" #
ex""$ &
)""& '
{## 
return$$ 

BadRequest$$ !
($$! "
ex$$" $
.$$$ %
Message$$% ,
)$$, -
;$$- .
}%% 
}&& 	
[(( 	
HttpGet((	 
((( 
$str(( 
)(( 
](( 
public)) 
async)) 
Task)) 
<)) 
IActionResult)) '
>))' (
Get))) ,
()), -
)))- .
{** 	
try++ 
{,, 
List.. 
<.. 
Arma.. 
>.. 
lista..  
=..! "
await..# (
_context..) 1
...1 2
Armas..2 7
.// 
ToListAsync//  
(//  !
)//! "
;//" #
return00 
Ok00 
(00 
lista00 
)00  
;00  !
}11 
catch22 
(22 
System22 
.22 
	Exception22 #
ex22$ &
)22& '
{33 
return44 

BadRequest44 !
(44! "
ex44" $
.44$ %
Message44% ,
)44, -
;44- .
}55 
}66 	
[88 	
HttpPost88	 
]88 
public99 
async99 
Task99 
<99 
IActionResult99 '
>99' (
Add99) ,
(99, -
Arma99- 1
novaArma992 :
)99: ;
{:: 	
try;; 
{<< 
if== 
(== 
novaArma== 
.== 
Dano== !
====" $
$num==% &
)==& '
{>> 
throw?? 
new?? 
System?? $
.??$ %
	Exception??% .
(??. /
$str??/ N
)??N O
;??O P
}@@ 

PersonagemBB 
pBB 
=BB 
awaitBB $
_contextBB% -
.BB- .
PersonagensBB. 9
.CC 
FirstOrDefaultAsyncCC (
(CC( )
pCC) *
=>CC+ -
pCC. /
.CC/ 0
IdCC0 2
==CC3 5
novaArmaCC6 >
.CC> ?
PersonagemIdCC? K
)CCK L
;CCL M
ifEE 
(EE 
pEE 
==EE 
nullEE 
)EE 
throwFF 
newFF 
	ExceptionFF '
(FF' (
$strFF( Q
)FFQ R
;FFR S
ArmaHH 
	buscaArmaHH 
=HH  
awaitHH! &
_contextHH' /
.HH/ 0
ArmasHH0 5
.HH5 6
FirstOrDefaultAsyncHH6 I
(HHI J
aHHJ K
=>HHL N
aHHO P
.HHP Q
PersonagemIdHHQ ]
==HH^ `
novaArmaHHa i
.HHi j
PersonagemIdHHj v
)HHv w
;HHw x
ifJJ 
(JJ 
	buscaArmaJJ 
!=JJ  
nullJJ! %
)JJ% &
throwKK 
newKK 
	ExceptionKK '
(KK' (
$strKK( d
)KKd e
;KKe f
awaitMM 
_contextMM 
.MM 
ArmasMM $
.MM$ %
AddAsyncMM% -
(MM- .
novaArmaMM. 6
)MM6 7
;MM7 8
awaitNN 
_contextNN 
.NN 
SaveChangesAsyncNN /
(NN/ 0
)NN0 1
;NN1 2
returnPP 
OkPP 
(PP 
novaArmaPP "
.PP" #
IdPP# %
)PP% &
;PP& '
}QQ 
catchRR 
(RR 
SystemRR 
.RR 
	ExceptionRR #
exRR$ &
)RR& '
{SS 
returnTT 

BadRequestTT !
(TT! "
exTT" $
.TT$ %
MessageTT% ,
)TT, -
;TT- .
}UU 
}VV 	
[XX 	
HttpPutXX	 
]XX 
publicYY 
asyncYY 
TaskYY 
<YY 
IActionResultYY '
>YY' (
UpdateYY) /
(YY/ 0
ArmaYY0 4
novaArmaYY5 =
)YY= >
{ZZ 	
try[[ 
{\\ 
if]] 
(]] 
novaArma]] 
.]] 
Dano]] !
==]]" $
$num]]% &
)]]& '
{^^ 
throw__ 
new__ 
System__ $
.__$ %
	Exception__% .
(__. /
$str__/ N
)__N O
;__O P
}`` 

Personagembb 

personagembb %
=bb& '
awaitbb( -
_contextbb. 6
.bb6 7
Personagensbb7 B
.cc 
FirstOrDefaultAsynccc '
(cc' (
pcc( )
=>cc* ,
pcc- .
.cc. /
Idcc/ 1
==cc2 4
novaArmacc5 =
.cc= >
PersonagemIdcc> J
)ccJ K
;ccK L
ifee 
(ee 

personagemee 
==ee !
nullee" &
)ee& '
throwff 
newff 
	Exceptionff '
(ff' (
$strff( Q
)ffQ R
;ffR S
_contexthh 
.hh 
Armashh 
.hh 
Updatehh %
(hh% &
novaArmahh& .
)hh. /
;hh/ 0
intii 
linhaAfetadasii !
=ii" #
awaitii$ )
_contextii* 2
.ii2 3
SaveChangesAsyncii3 C
(iiC D
)iiD E
;iiE F
returnkk 
Okkk 
(kk 
linhaAfetadaskk '
)kk' (
;kk( )
}ll 
catchmm 
(mm 
Systemmm 
.mm 
	Exceptionmm #
exmm$ &
)mm& '
{nn 
returnoo 

BadRequestoo !
(oo! "
exoo" $
.oo$ %
Messageoo% ,
)oo, -
;oo- .
}pp 
}qq 	
[ss 	

HttpDeletess	 
(ss 
$strss 
)ss 
]ss 
publictt 
asynctt 
Tasktt 
<tt 
IActionResulttt '
>tt' (
Deletett) /
(tt/ 0
inttt0 3
idtt4 6
)tt6 7
{uu 	
tryvv 
{ww 
Armaxx 
aRemoverxx 
=xx 
awaitxx  %
_contextxx& .
.xx. /
Armasxx/ 4
.yy 
FirstOrDefaultAsyncyy '
(yy' (
pyy( )
=>yy* ,
pyy- .
.yy. /
Idyy/ 1
==yy2 4
idyy5 7
)yy7 8
;yy8 9
_context{{ 
.{{ 
Armas{{ 
.{{ 
Remove{{ %
({{% &
aRemover{{& .
){{. /
;{{/ 0
int|| 
linhaAfetadas|| !
=||" #
await||$ )
_context||* 2
.||2 3
SaveChangesAsync||3 C
(||C D
)||D E
;||E F
return~~ 
Ok~~ 
(~~ 
linhaAfetadas~~ '
)~~' (
;~~( )
} 
catch
ÄÄ 
(
ÄÄ 
System
ÄÄ 
.
ÄÄ 
	Exception
ÄÄ #
ex
ÄÄ$ &
)
ÄÄ& '
{
ÅÅ 
return
ÇÇ 

BadRequest
ÇÇ !
(
ÇÇ! "
ex
ÇÇ" $
.
ÇÇ$ %
Message
ÇÇ% ,
)
ÇÇ, -
;
ÇÇ- .
}
ÉÉ 
}
ÑÑ 	
}
ÜÜ 
}áá ‘Ë
7D:\Daniel\PMII\RpgApi\Controllers\DisputasController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
DisputasController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
DataContext $
_context% -
;- .
public 
DisputasController !
(! "
DataContext" -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
[ 
HttpPost 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
AtaqueComArmaAsync) ;
(; <
Disputa< C
dD E
)E F
{ 	
try 
{ 

Personagem 
atacante #
=$ %
await& +
_context, 4
.4 5
Personagens5 @
.   
Include   
(   
p   
=>    
p  ! "
.  " #
Arma  # '
)  ' (
.!! 
FirstOrDefaultAsync!! '
(!!' (
p!!( )
=>!!* ,
p!!- .
.!!. /
Id!!/ 1
==!!2 4
d!!5 6
.!!6 7

AtacanteId!!7 A
)!!A B
;!!B C

Personagem## 
oponente## #
=##$ %
await##& +
_context##, 4
.##4 5
Personagens##5 @
.$$ 
FirstOrDefaultAsync$$ (
($$( )
p$$) *
=>$$+ -
p$$. /
.$$/ 0
Id$$0 2
==$$3 5
d$$6 7
.$$7 8

OponenteId$$8 B
)$$B C
;$$C D
int'' 
dano'' 
='' 
atacante'' #
.''# $
Arma''$ (
.''( )
Dano'') -
+''. /
(''0 1
new''1 4
Random''5 ;
(''; <
)''< =
.''= >
Next''> B
(''B C
atacante''C K
.''K L
Forca''L Q
)''Q R
)''R S
;''S T
dano(( 
=(( 
dano(( 
-(( 
new(( !
Random((" (
(((( )
)(() *
.((* +
Next((+ /
(((/ 0
oponente((0 8
.((8 9
Defesa((9 ?
)((? @
;((@ A
if** 
(** 
dano** 
>** 
$num** 
)** 
{++ 
oponente,, 
.,, 

PontosVida,, '
=,,( )
oponente,,* 2
.,,2 3

PontosVida,,3 =
-,,> ?
dano,,@ D
;,,D E
}-- 
if.. 
(.. 
oponente.. 
... 

PontosVida.. '
<=..( *
$num..+ ,
).., -
{// 
d00 
.00 
Narracao00 
=00  
$"00! #
{00# $
oponente00$ ,
.00, -
Nome00- 1
}001 2
$str002 A
"00A B
;00B C
}11 
_context33 
.33 
Personagens33 $
.33$ %
Update33% +
(33+ ,
oponente33, 4
)334 5
;335 6
await44 
_context44 
.44 
SaveChangesAsync44 /
(44/ 0
)440 1
;441 2
StringBuilder66 
dados66 #
=66$ %
new66& )
StringBuilder66* 7
(667 8
)668 9
;669 :
dados77 
.77 
AppendFormat77 "
(77" #
$str77# 5
,775 6
atacante777 ?
.77? @
Nome77@ D
)77D E
;77E F
dados88 
.88 
AppendFormat88 "
(88" #
$str88# 5
,885 6
oponente887 ?
.88? @
Nome88@ D
)88D E
;88E F
dados99 
.99 
AppendFormat99 "
(99" #
$str99# G
,99G H
atacante99I Q
.99Q R

PontosVida99R \
)99\ ]
;99] ^
dados:: 
.:: 
AppendFormat:: "
(::" #
$str::# G
,::G H
oponente::I Q
.::Q R

PontosVida::R \
)::\ ]
;::] ^
dados;; 
.;; 
AppendFormat;; "
(;;" #
$str;;# ;
,;;; <
atacante;;= E
.;;E F
Arma;;F J
.;;J K
Nome;;K O
);;O P
;;;P Q
dados<< 
.<< 
AppendFormat<< "
(<<" #
$str<<# 1
,<<1 2
dano<<3 7
)<<7 8
;<<8 9
d>> 
.>> 
Narracao>> 
+=>> 
dados>> #
.>># $
ToString>>$ ,
(>>, -
)>>- .
;>>. /
d?? 
.?? 
DataDisputa?? 
=?? 
DateTime??  (
.??( )
Now??) ,
;??, -
_context@@ 
.@@ 
Disputas@@ !
.@@! "
Add@@" %
(@@% &
d@@& '
)@@' (
;@@( )
_contextAA 
.AA 
SaveChangesAA $
(AA$ %
)AA% &
;AA& '
returnCC 
OkCC 
(CC 
dCC 
)CC 
;CC 
}DD 
catchEE 
(EE 
SystemEE 
.EE 
	ExceptionEE #
exEE$ &
)EE& '
{FF 
returnGG 

BadRequestGG !
(GG! "
exGG" $
.GG$ %
MessageGG% ,
+GG- .
$strGG/ 4
+GG5 6
exGG7 9
.GG9 :
InnerExceptionGG: H
)GGH I
;GGI J
}HH 
}II 	
[LL 	
HttpPostLL	 
(LL 
$strLL 
)LL 
]LL  
publicMM 
asyncMM 
TaskMM 
<MM 
IActionResultMM '
>MM' ($
AtaqueComHabilidadeAsyncMM) A
(MMA B
DisputaMMB I
dMMJ K
)MMK L
{NN 	
tryOO 
{PP 

PersonagemQQ 
atacanteQQ #
=QQ$ %
awaitQQ& +
_contextQQ, 4
.QQ4 5
PersonagensQQ5 @
.RR 
IncludeRR 
(RR 
pRR 
=>RR !
pRR" #
.RR# $!
PersonagemHabilidadesRR$ 9
)RR9 :
.SS 
ThenIncludeSS  
(SS  !
phSS! #
=>SS$ &
phSS' )
.SS) *

HabilidadeSS* 4
)SS4 5
.TT 
FirstOrDefaultAsyncTT (
(TT( )
pTT) *
=>TT+ -
pTT. /
.TT/ 0
IdTT0 2
==TT3 5
dTT6 7
.TT7 8

AtacanteIdTT8 B
)TTB C
;TTC D

PersonagemVV 
oponenteVV #
=VV$ %
awaitVV& +
_contextVV, 4
.VV4 5
PersonagensVV5 @
.WW 
FirstOrDefaultAsyncWW (
(WW( )
pWW) *
=>WW+ -
pWW. /
.WW/ 0
IdWW0 2
==WW3 5
dWW6 7
.WW7 8

OponenteIdWW8 B
)WWB C
;WWC D 
PersonagemHabilidadeYY $
phYY% '
=YY( )
awaitYY* /
_contextYY0 8
.YY8 9!
PersonagemHabilidadesYY9 N
.ZZ 
IncludeZZ 
(ZZ 
pZZ 
=>ZZ !
pZZ" #
.ZZ# $

HabilidadeZZ$ .
)ZZ. /
.[[ 
FirstOrDefaultAsync[[ (
([[( )
phBusca[[) 0
=>[[1 3
phBusca[[4 ;
.[[; <
HabilidadeId[[< H
==[[I K
d[[L M
.[[M N
HabilidadeId[[N Z
)]] 
;]] 
if__ 
(__ 
ph__ 
==__ 
null__ 
)__ 
d`` 
.`` 
Narracao`` 
=``  
$"``! #
{``# $
atacante``$ ,
.``, -
Nome``- 1
}``1 2
$str``2 M
"``M N
;``N O
elseaa 
{bb 
intcc 
danocc 
=cc 
phcc !
.cc! "

Habilidadecc" ,
.cc, -
Danocc- 1
+cc2 3
(cc4 5
newcc5 8
Randomcc9 ?
(cc? @
)cc@ A
.ccA B
NextccB F
(ccF G
atacanteccG O
.ccO P
InteligenciaccP \
)cc\ ]
)cc] ^
;cc^ _
danodd 
=dd 
danodd 
-dd  !
newdd" %
Randomdd& ,
(dd, -
)dd- .
.dd. /
Nextdd/ 3
(dd3 4
oponentedd4 <
.dd< =
Defesadd= C
)ddC D
;ddD E
ifff 
(ff 
danoff 
>ff 
$numff  
)ff  !
{gg 
oponenteii  
.ii  !

PontosVidaii! +
-=ii, .
danoii/ 3
;ii3 4
}jj 
ifkk 
(kk 
oponentekk  
.kk  !

PontosVidakk! +
<=kk, .
$numkk/ 0
)kk0 1
{ll 
dmm 
.mm 
Narracaomm "
+=mm# %
$"mm& (
{mm( )
oponentemm) 1
.mm1 2
Nomemm2 6
}mm6 7
$strmm7 F
"mmF G
;mmG H
}nn 
_contextpp 
.pp 
Personagenspp (
.pp( )
Updatepp) /
(pp/ 0
oponentepp0 8
)pp8 9
;pp9 :
awaitqq 
_contextqq "
.qq" #
SaveChangesAsyncqq# 3
(qq3 4
)qq4 5
;qq5 6
StringBuilderss !
dadosss" '
=ss( )
newss* -
StringBuilderss. ;
(ss; <
)ss< =
;ss= >
dadostt 
.tt 
AppendFormattt &
(tt& '
$strtt' 9
,tt9 :
atacantett; C
.ttC D
NomettD H
)ttH I
;ttI J
dadosuu 
.uu 
AppendFormatuu &
(uu& '
$struu' 9
,uu9 :
oponenteuu; C
.uuC D
NomeuuD H
)uuH I
;uuI J
dadosvv 
.vv 
AppendFormatvv &
(vv& '
$strvv' K
,vvK L
atacantevvM U
.vvU V

PontosVidavvV `
)vv` a
;vva b
dadosww 
.ww 
AppendFormatww &
(ww& '
$strww' K
,wwK L
oponentewwM U
.wwU V

PontosVidawwV `
)ww` a
;wwa b
dadosxx 
.xx 
AppendFormatxx &
(xx& '
$strxx' E
,xxE F
phxxG I
.xxI J

HabilidadexxJ T
.xxT U
NomexxU Y
)xxY Z
;xxZ [
dadosyy 
.yy 
AppendFormatyy &
(yy& '
$stryy' 5
,yy5 6
danoyy7 ;
)yy; <
;yy< =
d{{ 
.{{ 
Narracao{{ 
+={{ !
dados{{" '
.{{' (
ToString{{( 0
({{0 1
){{1 2
;{{2 3
d|| 
.|| 
DataDisputa|| !
=||" #
DateTime||$ ,
.||, -
Now||- 0
;||0 1
_context}} 
.}} 
Disputas}} %
.}}% &
Add}}& )
(}}) *
d}}* +
)}}+ ,
;}}, -
_context~~ 
.~~ 
SaveChanges~~ (
(~~( )
)~~) *
;~~* +
} 
return
ÄÄ 
Ok
ÄÄ 
(
ÄÄ 
d
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
System
ÇÇ 
.
ÇÇ 
	Exception
ÇÇ #
ex
ÇÇ$ &
)
ÇÇ& '
{
ÉÉ 
return
ÑÑ 

BadRequest
ÑÑ !
(
ÑÑ! "
ex
ÑÑ" $
.
ÑÑ$ %
Message
ÑÑ% ,
)
ÑÑ, -
;
ÑÑ- .
}
ÖÖ 
}
ÜÜ 	
[
àà 	
HttpGet
àà	 
(
àà 
$str
àà #
)
àà# $
]
àà$ %
public
ââ 
async
ââ 
Task
ââ 
<
ââ 
IActionResult
ââ '
>
ââ' (
Sorteio
ââ) 0
(
ââ0 1
)
ââ1 2
{
ää 	
List
ãã 
<
ãã 

Personagem
ãã 
>
ãã 
personagens
ãã (
=
ãã) *
await
åå 
_context
åå 
.
åå  
Personagens
åå  +
.
åå+ ,
ToListAsync
åå, 7
(
åå7 8
)
åå8 9
;
åå9 :
int
èè 
sorteio
èè 
=
èè 
new
èè 
Random
èè $
(
èè$ %
)
èè% &
.
èè& '
Next
èè' +
(
èè+ ,
personagens
èè, 7
.
èè7 8
Count
èè8 =
)
èè= >
;
èè> ?

Personagem
íí 
p
íí 
=
íí 
personagens
íí &
[
íí& '
sorteio
íí' .
]
íí. /
;
íí/ 0
string
îî 
msg
îî 
=
îî 
string
ïï 
.
ïï 
Format
ïï 
(
ïï 
$str
ïï @
,
ïï@ A
sorteio
ïïB I
,
ïïI J
p
ïïK L
.
ïïL M
Nome
ïïM Q
)
ïïQ R
;
ïïR S
return
óó 
Ok
óó 
(
óó 
msg
óó 
)
óó 
;
óó 
}
òò 	
[
öö 	
HttpPost
öö	 
(
öö 
$str
öö "
)
öö" #
]
öö# $
public
õõ 
async
õõ 
Task
õõ 
<
õõ 
IActionResult
õõ '
>
õõ' (!
DisputaEmGrupoAsync
õõ) <
(
õõ< =
Disputa
õõ= D
d
õõE F
)
õõF G
{
úú 	
try
ùù 
{
ûû 
d
üü 
.
üü 

Resultados
üü 
=
üü 
new
üü "
List
üü# '
<
üü' (
string
üü( .
>
üü. /
(
üü/ 0
)
üü0 1
;
üü1 2
List
¢¢ 
<
¢¢ 

Personagem
¢¢ 
>
¢¢  
personagens
¢¢! ,
=
¢¢- .
await
¢¢/ 4
_context
¢¢5 =
.
¢¢= >
Personagens
¢¢> I
.
££ 
Include
££ 
(
££ 
p
££ 
=>
££ !
p
££" #
.
££# $
Arma
££$ (
)
££( )
.
§§ 
Include
§§ 
(
§§ 
p
§§ 
=>
§§ !
p
§§" #
.
§§# $#
PersonagemHabilidades
§§$ 9
)
§§9 :
.
§§: ;
ThenInclude
§§; F
(
§§F G
ph
§§G I
=>
§§J L
ph
§§M O
.
§§O P

Habilidade
§§P Z
)
§§Z [
.
•• 
Where
•• 
(
•• 
p
•• 
=>
•• 
d
••  !
.
••! " 
ListaIdPersonagens
••" 4
.
••4 5
Contains
••5 =
(
••= >
p
••> ?
.
••? @
Id
••@ B
)
••B C
)
••C D
.
••D E
ToListAsync
••E P
(
••P Q
)
••Q R
;
••R S
int
®® !
qtdPersonagensVivos
®® '
=
®®( )
personagens
®®* 5
.
®®5 6
FindAll
®®6 =
(
®®= >
p
®®> ?
=>
®®@ B
p
®®C D
.
®®D E

PontosVida
®®E O
>
®®P Q
$num
®®R S
)
®®S T
.
®®T U
Count
®®U Z
;
®®Z [
while
´´ 
(
´´ !
qtdPersonagensVivos
´´ *
>
´´+ ,
$num
´´- .
)
´´. /
{
¨¨ 
List
ÆÆ 
<
ÆÆ 

Personagem
ÆÆ #
>
ÆÆ# $
	atacantes
ÆÆ% .
=
ÆÆ/ 0
personagens
ÆÆ1 <
.
ÆÆ< =
Where
ÆÆ= B
(
ÆÆB C
p
ÆÆC D
=>
ÆÆE G
p
ÆÆH I
.
ÆÆI J

PontosVida
ÆÆJ T
>
ÆÆU V
$num
ÆÆW X
)
ÆÆX Y
.
ÆÆY Z
ToList
ÆÆZ `
(
ÆÆ` a
)
ÆÆa b
;
ÆÆb c

Personagem
ØØ 
atacante
ØØ '
=
ØØ( )
	atacantes
ØØ* 3
[
ØØ3 4
new
ØØ4 7
Random
ØØ8 >
(
ØØ> ?
)
ØØ? @
.
ØØ@ A
Next
ØØA E
(
ØØE F
	atacantes
ØØF O
.
ØØO P
Count
ØØP U
)
ØØU V
]
ØØV W
;
ØØW X
d
∞∞ 
.
∞∞ 

AtacanteId
∞∞  
=
∞∞! "
atacante
∞∞# +
.
∞∞+ ,
Id
∞∞, .
;
∞∞. /
List
≥≥ 
<
≥≥ 

Personagem
≥≥ #
>
≥≥# $
	oponentes
≥≥% .
=
≥≥/ 0
personagens
≥≥1 <
.
≥≥< =
Where
≥≥= B
(
≥≥B C
p
≥≥C D
=>
≥≥E G
p
≥≥H I
.
≥≥I J
Id
≥≥J L
!=
≥≥M O
atacante
≥≥P X
.
≥≥X Y
Id
≥≥Y [
&&
≥≥\ ^
p
≥≥_ `
.
≥≥` a

PontosVida
≥≥a k
>
≥≥l m
$num
≥≥n o
)
≥≥o p
.
≥≥p q
ToList
≥≥q w
(
≥≥w x
)
≥≥x y
;
≥≥y z

Personagem
¥¥ 
oponente
¥¥ '
=
¥¥( )
	oponentes
¥¥* 3
[
¥¥3 4
new
¥¥4 7
Random
¥¥8 >
(
¥¥> ?
)
¥¥? @
.
¥¥@ A
Next
¥¥A E
(
¥¥E F
	oponentes
¥¥F O
.
¥¥O P
Count
¥¥P U
)
¥¥U V
]
¥¥V W
;
¥¥W X
d
µµ 
.
µµ 

OponenteId
µµ  
=
µµ! "
oponente
µµ# +
.
µµ+ ,
Id
µµ, .
;
µµ. /
int
∏∏ 
dano
∏∏ 
=
∏∏ 
$num
∏∏  
;
∏∏  !
string
ππ 
ataqueUsado
ππ &
=
ππ' (
string
ππ) /
.
ππ/ 0
Empty
ππ0 5
;
ππ5 6
string
∫∫ 
	resultado
∫∫ $
=
∫∫% &
string
∫∫' -
.
∫∫- .
Empty
∫∫. 3
;
∫∫3 4
bool
ΩΩ 
ataqueUsaArma
ΩΩ &
=
ΩΩ' (
(
ΩΩ) *
new
ΩΩ* -
Random
ΩΩ. 4
(
ΩΩ4 5
)
ΩΩ5 6
.
ΩΩ6 7
Next
ΩΩ7 ;
(
ΩΩ; <
$num
ΩΩ< =
)
ΩΩ= >
==
ΩΩ? A
$num
ΩΩB C
)
ΩΩC D
;
ΩΩD E
if
øø 
(
øø 
ataqueUsaArma
øø %
&&
øø& (
atacante
øø) 1
.
øø1 2
Arma
øø2 6
!=
øø7 9
null
øø: >
)
øø> ?
{
¿¿ 
dano
ƒƒ 
=
ƒƒ 
atacante
ƒƒ '
.
ƒƒ' (
Arma
ƒƒ( ,
.
ƒƒ, -
Dano
ƒƒ- 1
+
ƒƒ2 3
(
ƒƒ4 5
new
ƒƒ5 8
Random
ƒƒ9 ?
(
ƒƒ? @
)
ƒƒ@ A
.
ƒƒA B
Next
ƒƒB F
(
ƒƒF G
atacante
ƒƒG O
.
ƒƒO P
Forca
ƒƒP U
)
ƒƒU V
)
ƒƒV W
;
ƒƒW X
dano
≈≈ 
=
≈≈ 
dano
≈≈ #
-
≈≈$ %
new
≈≈& )
Random
≈≈* 0
(
≈≈0 1
)
≈≈1 2
.
≈≈2 3
Next
≈≈3 7
(
≈≈7 8
oponente
≈≈8 @
.
≈≈@ A
Defesa
≈≈A G
)
≈≈G H
;
≈≈H I
ataqueUsado
∆∆ #
=
∆∆$ %
atacante
∆∆& .
.
∆∆. /
Arma
∆∆/ 3
.
∆∆3 4
Nome
∆∆4 8
;
∆∆8 9
if
»» 
(
»» 
dano
»»  
>
»»! "
$num
»»# $
)
»»$ %
oponente
…… $
.
……$ %

PontosVida
……% /
=
……0 1
oponente
……2 :
.
……: ;

PontosVida
……; E
-
……F G
(
……H I
int
……I L
)
……L M
dano
……M Q
;
……Q R
	resultado
ÃÃ !
=
ÃÃ" #
string
ÕÕ "
.
ÕÕ" #
Format
ÕÕ# )
(
ÕÕ) *
$str
ÕÕ* U
,
ÕÕU V
atacante
ÕÕW _
.
ÕÕ_ `
Nome
ÕÕ` d
,
ÕÕd e
oponente
ÕÕf n
.
ÕÕn o
Nome
ÕÕo s
,
ÕÕs t
ataqueUsadoÕÕu Ä
,ÕÕÄ Å
danoÕÕÇ Ü
)ÕÕÜ á
;ÕÕá à
d
ŒŒ 
.
ŒŒ 
Narracao
ŒŒ "
+=
ŒŒ# %
	resultado
ŒŒ& /
;
ŒŒ/ 0
d
œœ 
.
œœ 

Resultados
œœ $
.
œœ$ %
Add
œœ% (
(
œœ( )
	resultado
œœ) 2
)
œœ2 3
;
œœ3 4
}
–– 
else
—— 
if
—— 
(
—— 
atacante
—— %
.
——% &#
PersonagemHabilidades
——& ;
.
——; <
Count
——< A
!=
——B D
$num
——E F
)
——F G
{
““ 
int
÷÷ !
sorteioHabilidadeId
÷÷ /
=
÷÷0 1
new
÷÷2 5
Random
÷÷6 <
(
÷÷< =
)
÷÷= >
.
÷÷> ?
Next
÷÷? C
(
÷÷C D
atacante
÷÷D L
.
÷÷L M#
PersonagemHabilidades
÷÷M b
.
÷÷b c
Count
÷÷c h
)
÷÷h i
;
÷÷i j

Habilidade
◊◊ "!
habilidadeEscolhida
◊◊# 6
=
◊◊7 8
atacante
◊◊9 A
.
◊◊A B#
PersonagemHabilidades
◊◊B W
[
◊◊W X!
sorteioHabilidadeId
◊◊X k
]
◊◊k l
.
◊◊l m

Habilidade
◊◊m w
;
◊◊w x
ataqueUsado
ÿÿ #
=
ÿÿ$ %!
habilidadeEscolhida
ÿÿ& 9
.
ÿÿ9 :
Nome
ÿÿ: >
;
ÿÿ> ?
dano
€€ 
=
€€ !
habilidadeEscolhida
€€ 2
.
€€2 3
Dano
€€3 7
+
€€8 9
(
€€: ;
new
€€; >
Random
€€? E
(
€€E F
)
€€F G
.
€€G H
Next
€€H L
(
€€L M
atacante
€€M U
.
€€U V
Inteligencia
€€V b
)
€€b c
)
€€c d
;
€€d e
dano
‹‹ 
=
‹‹ 
dano
‹‹ #
-
‹‹$ %
new
‹‹& )
Random
‹‹* 0
(
‹‹0 1
)
‹‹1 2
.
‹‹2 3
Next
‹‹3 7
(
‹‹7 8
oponente
‹‹8 @
.
‹‹@ A
Defesa
‹‹A G
)
‹‹G H
;
‹‹H I
if
ﬁﬁ 
(
ﬁﬁ 
dano
ﬁﬁ  
>
ﬁﬁ! "
$num
ﬁﬁ# $
)
ﬁﬁ$ %
oponente
ﬂﬂ $
.
ﬂﬂ$ %

PontosVida
ﬂﬂ% /
=
ﬂﬂ0 1
oponente
ﬂﬂ2 :
.
ﬂﬂ: ;

PontosVida
ﬂﬂ; E
-
ﬂﬂF G
(
ﬂﬂH I
int
ﬂﬂI L
)
ﬂﬂL M
dano
ﬂﬂM Q
;
ﬂﬂQ R
	resultado
·· !
=
··" #
string
‚‚ "
.
‚‚" #
Format
‚‚# )
(
‚‚) *
$str
‚‚* U
,
‚‚U V
atacante
‚‚W _
.
‚‚_ `
Nome
‚‚` d
,
‚‚d e
oponente
‚‚f n
.
‚‚n o
Nome
‚‚o s
,
‚‚s t
ataqueUsado‚‚u Ä
,‚‚Ä Å
dano‚‚Ç Ü
)‚‚Ü á
;‚‚á à
d
„„ 
.
„„ 
Narracao
„„ "
+=
„„# %
	resultado
„„& /
;
„„/ 0
d
‰‰ 
.
‰‰ 

Resultados
‰‰ $
.
‰‰$ %
Add
‰‰% (
(
‰‰( )
	resultado
‰‰) 2
)
‰‰2 3
;
‰‰3 4
}
ÂÂ 
if
ËË 
(
ËË 
!
ËË 
string
ËË 
.
ËË  
IsNullOrEmpty
ËË  -
(
ËË- .
ataqueUsado
ËË. 9
)
ËË9 :
)
ËË: ;
{
ÈÈ 
atacante
ÎÎ  
.
ÎÎ  !
Vitorias
ÎÎ! )
++
ÎÎ) +
;
ÎÎ+ ,
oponente
ÏÏ  
.
ÏÏ  !
Derrotas
ÏÏ! )
++
ÏÏ) +
;
ÏÏ+ ,
atacante
ÌÌ  
.
ÌÌ  !
Disputas
ÌÌ! )
++
ÌÌ) +
;
ÌÌ+ ,
oponente
ÓÓ  
.
ÓÓ  !
Disputas
ÓÓ! )
++
ÓÓ) +
;
ÓÓ+ ,
d
 
.
 
Id
 
=
 
$num
  
;
  !
d
ÒÒ 
.
ÒÒ 
DataDisputa
ÒÒ %
=
ÒÒ& '
DateTime
ÒÒ( 0
.
ÒÒ0 1
Now
ÒÒ1 4
;
ÒÒ4 5
_context
ÚÚ  
.
ÚÚ  !
Disputas
ÚÚ! )
.
ÚÚ) *
Add
ÚÚ* -
(
ÚÚ- .
d
ÚÚ. /
)
ÚÚ/ 0
;
ÚÚ0 1
await
ÛÛ 
_context
ÛÛ &
.
ÛÛ& '
SaveChangesAsync
ÛÛ' 7
(
ÛÛ7 8
)
ÛÛ8 9
;
ÛÛ9 :
}
ÙÙ !
qtdPersonagensVivos
ˆˆ '
=
ˆˆ( )
personagens
ˆˆ* 5
.
ˆˆ5 6
FindAll
ˆˆ6 =
(
ˆˆ= >
p
ˆˆ> ?
=>
ˆˆ@ B
p
ˆˆC D
.
ˆˆD E

PontosVida
ˆˆE O
>
ˆˆP Q
$num
ˆˆR S
)
ˆˆS T
.
ˆˆT U
Count
ˆˆU Z
;
ˆˆZ [
if
¯¯ 
(
¯¯ !
qtdPersonagensVivos
¯¯ +
==
¯¯, .
$num
¯¯/ 0
)
¯¯0 1
{
˘˘ 
string
˙˙ 
resultadoFinal
˙˙ -
=
˙˙. /
$"
˚˚ 
{
˚˚ 
atacante
˚˚ '
.
˚˚' (
Nome
˚˚( ,
.
˚˚, -
ToUpper
˚˚- 4
(
˚˚4 5
)
˚˚5 6
}
˚˚6 7
$str
˚˚7 F
{
˚˚F G
atacante
˚˚G O
.
˚˚O P

PontosVida
˚˚P Z
}
˚˚Z [
$str
˚˚[ u
"
˚˚u v
;
˚˚v w
d
˝˝ 
.
˝˝ 
Narracao
˝˝ "
+=
˝˝# %
resultadoFinal
˝˝& 4
;
˝˝4 5
d
˛˛ 
.
˛˛ 

Resultados
˛˛ $
.
˛˛$ %
Add
˛˛% (
(
˛˛( )
resultadoFinal
˛˛) 7
)
˛˛7 8
;
˛˛8 9
break
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÇÇ 
_context
ÖÖ 
.
ÖÖ 
Personagens
ÖÖ $
.
ÖÖ$ %
UpdateRange
ÖÖ% 0
(
ÖÖ0 1
personagens
ÖÖ1 <
)
ÖÖ< =
;
ÖÖ= >
await
ÜÜ 
_context
ÜÜ 
.
ÜÜ 
SaveChangesAsync
ÜÜ /
(
ÜÜ/ 0
)
ÜÜ0 1
;
ÜÜ1 2
return
àà 
Ok
àà 
(
àà 
d
àà 
)
àà 
;
àà 
}
ââ 
catch
ää 
(
ää 
System
ää 
.
ää 
	Exception
ää #
ex
ää$ &
)
ää& '
{
ãã 
return
åå 

BadRequest
åå !
(
åå! "
ex
åå" $
.
åå$ %
Message
åå% ,
)
åå, -
;
åå- .
}
çç 
}
éé 	
[
êê 	

HttpDelete
êê	 
(
êê 
$str
êê $
)
êê$ %
]
êê% &
public
ëë 
async
ëë 
Task
ëë 
<
ëë 
IActionResult
ëë '
>
ëë' (
DeleteAsync
ëë) 4
(
ëë4 5
)
ëë5 6
{
íí 	
try
ìì 
{
îî 
List
ïï 
<
ïï 
Disputa
ïï 
>
ïï 
disputas
ïï &
=
ïï' (
await
ïï) .
_context
ïï/ 7
.
ïï7 8
Disputas
ïï8 @
.
ïï@ A
ToListAsync
ïïA L
(
ïïL M
)
ïïM N
;
ïïN O
_context
óó 
.
óó 
Disputas
óó !
.
óó! "
RemoveRange
óó" -
(
óó- .
disputas
óó. 6
)
óó6 7
;
óó7 8
await
òò 
_context
òò 
.
òò 
SaveChangesAsync
òò /
(
òò/ 0
)
òò0 1
;
òò1 2
return
öö 
Ok
öö 
(
öö 
$str
öö -
)
öö- .
;
öö. /
}
õõ 
catch
úú 
(
úú 
System
úú 
.
úú 
	Exception
úú #
ex
úú$ &
)
úú& '
{
ùù 
return
ùù #

BadRequest
ùù$ .
(
ùù. /
ex
ùù/ 1
.
ùù1 2
Message
ùù2 9
)
ùù9 :
;
ùù: ;
}
ùù< =
}
ûû 	
[
†† 	
HttpGet
††	 
(
†† 
$str
†† 
)
†† 
]
†† 
public
°° 
async
°° 
Task
°° 
<
°° 
IActionResult
°° '
>
°°' (
ListarAsync
°°) 4
(
°°4 5
)
°°5 6
{
¢¢ 	
try
££ 
{
§§ 
List
•• 
<
•• 
Disputa
•• 
>
•• 
disputas
•• &
=
••' (
await
¶¶ 
_context
¶¶ !
.
¶¶! "
Disputas
¶¶" *
.
¶¶* +
ToListAsync
¶¶+ 6
(
¶¶6 7
)
¶¶7 8
;
¶¶8 9
return
®® 
Ok
®® 
(
®® 
disputas
®® "
)
®®" #
;
®®# $
}
©© 
catch
™™ 
(
™™ 
System
™™ 
.
™™ 
	Exception
™™ #
ex
™™$ &
)
™™& '
{
´´ 
return
¨¨ 

BadRequest
¨¨ !
(
¨¨! "
ex
¨¨" $
.
¨¨$ %
Message
¨¨% ,
)
¨¨, -
;
¨¨- .
}
≠≠ 
}
ÆÆ 	
}
µµ 
}∂∂ ÂG
DD:\Daniel\PMII\RpgApi\Controllers\PersonagemHabilidadesController.cs
	namespace

 	
RpgApi


 
.

 
Controllers

 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class +
PersonagemHabilidadesController 0
:1 2
ControllerBase3 A
{ 
private 
readonly 
DataContext $
_context% -
;- .
public +
PersonagemHabilidadesController .
(. /
DataContext/ :
context; B
)B C
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' ((
AddPersonagemHabilidadeAsync) E
(E F 
PersonagemHabilidadeF Z$
novoPersonagemHabilidade[ s
)s t
{ 	
try 
{ 

Personagem 

personagem %
=& '
await( -
_context. 6
.6 7
Personagens7 B
. 
Include 
( 
p 
=> !
p" #
.# $
Arma$ (
)( )
. 
Include 
( 
p 
=> !
p" #
.# $!
PersonagemHabilidades$ 9
)9 :
.: ;
ThenInclude; F
(F G
psG I
=>J L
psM O
.O P

HabilidadeP Z
)Z [
. 
FirstOrDefaultAsync (
(( )
p) *
=>+ -
p. /
./ 0
Id0 2
==3 5$
novoPersonagemHabilidade6 N
.N O
PersonagemIdO [
)[ \
;\ ]
if   
(   

personagem   
==   !
null  " &
)  & '
throw!! 
new!! 
System!! $
.!!$ %
	Exception!!% .
(!!. /
$str!!/ _
)!!_ `
;!!` a

Habilidade## 

habilidade## %
=##& '
await##( -
_context##. 6
.##6 7
Habilidades##7 B
.$$$ %
FirstOrDefaultAsync$$% 8
($$8 9
h$$9 :
=>$$; =
h$$> ?
.$$? @
Id$$@ B
==$$C E$
novoPersonagemHabilidade$$F ^
.$$^ _
HabilidadeId$$_ k
)$$k l
;$$l m
if&& 
(&& 

habilidade&& 
==&& !
null&&" &
)&&& '
throw'' 
new'' 
System'' $
.''$ %
	Exception''% .
(''. /
$str''/ K
)''K L
;''L M 
PersonagemHabilidade)) $
ph))% '
=))( )
new))* - 
PersonagemHabilidade)). B
())B C
)))C D
;))D E
ph** 
.** 

Personagem** 
=** 

personagem**  *
;*** +
ph++ 
.++ 

Habilidade++ 
=++ 

habilidade++  *
;++* +
await,, 
_context,, 
.,, !
PersonagemHabilidades,, 4
.,,4 5
AddAsync,,5 =
(,,= >
ph,,> @
),,@ A
;,,A B
int-- 
linhasAfetadas-- "
=--# $
await--% *
_context--+ 3
.--3 4
SaveChangesAsync--4 D
(--D E
)--E F
;--F G
return// 
Ok// 
(// 
linhasAfetadas// (
)//( )
;//) *
}00 
catch11 
(11 
System11 
.11 
	Exception11 #
ex11$ &
)11& '
{22 
return33 

BadRequest33 !
(33! "
ex33" $
.33$ %
Message33% ,
)33, -
;33- .
}44 
}55 	
[77 	
HttpGet77	 
(77 
$str77 !
)77! "
]77" #
public88 
async88 
Task88 
<88 
IActionResult88 '
>88' ($
GetHabilidadesPersonagem88) A
(88A B
int88B E
personagemId88F R
)88R S
{99 	
try:: 
{;; 
List<< 
<<<  
PersonagemHabilidade<< )
><<) *
phLista<<+ 2
=<<3 4
new<<5 8
List<<9 =
<<<= > 
PersonagemHabilidade<<> R
><<R S
(<<S T
)<<T U
;<<U V
phLista>> 
=>> 
await>> 
_context>>  (
.>>( )!
PersonagemHabilidades>>) >
.?? 
Include?? 
(?? 
p?? 
=>?? !
p??" #
.??# $

Personagem??$ .
)??. /
.@@ 
Include@@ 
(@@ 
p@@ 
=>@@ !
p@@" #
.@@# $

Habilidade@@$ .
)@@. /
.AA 
WhereAA 
(AA 
pAA 
=>AA 
pAA  !
.AA! "

PersonagemAA" ,
.AA, -
IdAA- /
==AA0 2
personagemIdAA3 ?
)AA? @
.AA@ A
ToListAsyncAAA L
(AAL M
)AAM N
;AAN O
returnCC 
OkCC 
(CC 
phListaCC !
)CC! "
;CC" #
}DD 
catchEE 
(EE 
SystemEE 
.EE 
	ExceptionEE #
exEE$ &
)EE& '
{FF 
returnGG 

BadRequestGG !
(GG! "
exGG" $
.GG$ %
MessageGG% ,
)GG, -
;GG- .
}HH 
}II 	
[KK 	
HttpGetKK	 
(KK 
$strKK !
)KK! "
]KK" #
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
GetHabilidadesLL) 7
(LL7 8
)LL8 9
{MM 	
tryNN 
{OO 
ListPP 
<PP 

HabilidadePP 
>PP  
habilidadesPP! ,
=PP- .
newPP/ 2
ListPP3 7
<PP7 8

HabilidadePP8 B
>PPB C
(PPC D
)PPD E
;PPE F
habilidadesQQ 
=QQ 
awaitQQ #
_contextQQ$ ,
.QQ, -
HabilidadesQQ- 8
.QQ8 9
ToListAsyncQQ9 D
(QQD E
)QQE F
;QQF G
returnRR 
OkRR 
(RR 
habilidadesRR %
)RR% &
;RR& '
}SS 
catchTT 
(TT 
SystemTT 
.TT 
	ExceptionTT #
exTT$ &
)TT& '
{UU 
returnVV 

BadRequestVV !
(VV! "
exVV" $
.VV$ %
MessageVV% ,
)VV, -
;VV- .
}WW 
}XX 	
[ZZ 	
HttpPostZZ	 
(ZZ 
$strZZ .
)ZZ. /
]ZZ/ 0
public[[ 
async[[ 
Task[[ 
<[[ 
IActionResult[[ '
>[[' (
DeleteAsync[[) 4
([[4 5 
PersonagemHabilidade[[5 I
ph[[J L
)[[L M
{\\ 	
try]] 
{^^  
PersonagemHabilidade__ $
	phRemover__% .
=__/ 0
await__1 6
_context__7 ?
.__? @!
PersonagemHabilidades__@ U
.`` 
FirstOrDefaultAsync`` $
(``$ %
phBusca``% ,
=>``- /
phBusca``0 7
.``7 8
PersonagemId``8 D
==``E G
ph``H J
.``J K
PersonagemId``K W
&&aa 
phBuscaaa 
.aa 
HabilidadeIdaa '
==aa( *
phaa+ -
.aa- .
HabilidadeIdaa. :
)aa: ;
;aa; <
ifcc 
(cc 
	phRemovercc 
==cc  
nullcc! %
)cc% &
throwdd 
newdd 
Systemdd $
.dd$ %
	Exceptiondd% .
(dd. /
$strdd/ Y
)ddY Z
;ddZ [
_contextff 
.ff !
PersonagemHabilidadesff .
.ff. /
Removeff/ 5
(ff5 6
	phRemoverff6 ?
)ff? @
;ff@ A
intgg 
linhasAfetadasgg "
=gg# $
awaitgg% *
_contextgg+ 3
.gg3 4
SaveChangesAsyncgg4 D
(ggD E
)ggE F
;ggF G
returnhh 
Okhh 
(hh 
linhasAfetadashh (
)hh( )
;hh) *
}ii 
catchjj 
(jj 
Systemjj 
.jj 
	Exceptionjj #
exjj$ &
)jj& '
{kk 
returnll 

BadRequestll !
(ll! "
exll" $
.ll$ %
Messagell% ,
)ll, -
;ll- .
}mm 
}nn 	
}uu 
}vv ¬”
:D:\Daniel\PMII\RpgApi\Controllers\PersonagensController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{ 
[ 
	Authorize 
( 
Roles 
= 
$str '
)' (
]( )
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class !
PersonagensController &
:' (
ControllerBase) 7
{ 
private 
readonly 
DataContext $
_context% -
;- .
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly  
IHttpContextAccessor - 
_httpContextAccessor. B
;B C
public !
PersonagensController $
($ %
DataContext% 0
context1 8
,8 9
IConfiguration: H
configurationI V
,V W 
IHttpContextAccessorX l 
httpContextAccessor	m Ä
)
Ä Å
{ 	
_context 
= 
context 
; 
_configuration 
= 
configuration *
;* + 
_httpContextAccessor  
=! "
httpContextAccessor# 6
;6 7
}   	
private"" 
string"" 
ObterPerfilUsuario"" )
("") *
)""* +
{## 	
return$$  
_httpContextAccessor$$ '
.$$' (
HttpContext$$( 3
.$$3 4
User$$4 8
.$$8 9
FindFirstValue$$9 G
($$G H

ClaimTypes$$H R
.$$R S
Role$$S W
)$$W X
;$$X Y
}%% 	
private'' 
int'' 
ObterUsuarioId'' "
(''" #
)''# $
{(( 	
return)) 
int)) 
.)) 
Parse)) 
())  
_httpContextAccessor)) 1
.))1 2
HttpContext))2 =
.))= >
User))> B
.))B C
FindFirstValue))C Q
())Q R

ClaimTypes))R \
.))\ ]
NameIdentifier))] k
)))k l
)))l m
;))m n
}** 	
[,, 	
HttpGet,,	 
(,, 
$str,, 
),, 
],, 
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (
	GetSingle--) 2
(--2 3
int--3 6
id--7 9
)--9 :
{.. 	
try// 
{00 

Personagem11 
p11 
=11 
await11 $
_context11% -
.11- .
Personagens11. 9
.22 
Include22 
(22 
ar22 
=>22  "
ar22# %
.22% &
Arma22& *
)22* +
.33 
Include33 
(33 
us33 
=>33  "
us33# %
.33% &
Usuario33& -
)33- .
.44 
Include44 
(44 
ph44 
=>44  "
ph44# %
.44% &!
PersonagemHabilidades44& ;
)44; <
.55 
ThenInclude55 $
(55$ %
h55% &
=>55' )
h55* +
.55+ ,

Habilidade55, 6
)556 7
.66 
FirstOrDefaultAsync66 (
(66( )
pBusca66) /
=>660 2
pBusca663 9
.669 :
Id66: <
==66= ?
id66@ B
)66B C
;66C D
return88 
Ok88 
(88 
p88 
)88 
;88 
}99 
catch:: 
(:: 
System:: 
.:: 
	Exception:: #
ex::$ &
)::& '
{;; 
return<< 

BadRequest<< !
(<<! "
ex<<" $
.<<$ %
Message<<% ,
)<<, -
;<<- .
}== 
}>> 	
[@@ 	
HttpGet@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
asyncAA 
TaskAA 
<AA 
IActionResultAA '
>AA' (
GetAA) ,
(AA, -
)AA- .
{BB 	
tryCC 
{DD 
ListEE 
<EE 

PersonagemEE 
>EE  
listaEE! &
=EE' (
awaitEE) .
_contextEE/ 7
.EE7 8
PersonagensEE8 C
.EEC D
ToListAsyncEED O
(EEO P
)EEP Q
;EEQ R
returnFF 
OkFF 
(FF 
listaFF 
)FF  
;FF  !
}GG 
catchHH 
(HH 
SystemHH 
.HH 
	ExceptionHH #
exHH$ &
)HH& '
{II 
returnJJ 

BadRequestJJ !
(JJ! "
exJJ" $
.JJ$ %
MessageJJ% ,
)JJ, -
;JJ- .
}KK 
}LL 	
[NN 	
HttpPostNN	 
]NN 
publicOO 
asyncOO 
TaskOO 
<OO 
IActionResultOO '
>OO' (
AddOO) ,
(OO, -

PersonagemOO- 7
novoPersonagemOO8 F
)OOF G
{PP 	
tryQQ 
{RR 
ifSS 
(SS 
novoPersonagemSS "
.SS" #

PontosVidaSS# -
>SS. /
$numSS0 3
)SS3 4
{TT 
throwUU 
newUU 
SystemUU $
.UU$ %
	ExceptionUU% .
(UU. /
$strUU/ Z
)UUZ [
;UU[ \
}VV 
novoPersonagemXX 
.XX 
UsuarioXX &
=XX' (
_contextXX) 1
.XX1 2
UsuariosXX2 :
.XX: ;
FirstOrDefaultXX; I
(XXI J
uBuscaXXJ P
=>XXQ S
uBuscaXXT Z
.XXZ [
IdXX[ ]
==XX^ `
ObterUsuarioIdXXa o
(XXo p
)XXp q
)XXq r
;XXr s
awaitZZ 
_contextZZ 
.ZZ 
PersonagensZZ *
.ZZ* +
AddAsyncZZ+ 3
(ZZ3 4
novoPersonagemZZ4 B
)ZZB C
;ZZC D
await[[ 
_context[[ 
.[[ 
SaveChangesAsync[[ /
([[/ 0
)[[0 1
;[[1 2
return]] 
Ok]] 
(]] 
novoPersonagem]] (
.]]( )
Id]]) +
)]]+ ,
;]], -
}^^ 
catch__ 
(__ 
System__ 
.__ 
	Exception__ #
ex__$ &
)__& '
{`` 
returnaa 

BadRequestaa !
(aa! "
exaa" $
.aa$ %
Messageaa% ,
)aa, -
;aa- .
}bb 
}cc 	
[ee 	
HttpPutee	 
]ee 
publicff 
asyncff 
Taskff 
<ff 
IActionResultff '
>ff' (
Updateff) /
(ff/ 0

Personagemff0 :
novoPersonagemff; I
)ffI J
{gg 	
tryhh 
{ii 
ifjj 
(jj 
novoPersonagemjj "
.jj" #

PontosVidajj# -
>jj. /
$numjj0 3
)jj3 4
{kk 
throwll 
newll 
Systemll $
.ll$ %
	Exceptionll% .
(ll. /
$strll/ Z
)llZ [
;ll[ \
}mm 
novoPersonagemoo 
.oo 
Usuariooo &
=oo' (
_contextoo) 1
.oo1 2
Usuariosoo2 :
.oo: ;
FirstOrDefaultoo; I
(ooI J
uBuscaooJ P
=>ooQ S
uBuscaooT Z
.ooZ [
Idoo[ ]
==oo^ `
ObterUsuarioIdooa o
(ooo p
)oop q
)ooq r
;oor s
_contextqq 
.qq 
Personagensqq $
.qq$ %
Updateqq% +
(qq+ ,
novoPersonagemqq, :
)qq: ;
;qq; <
intrr 
linhasAfetadasrr "
=rr# $
awaitrr% *
_contextrr+ 3
.rr3 4
SaveChangesAsyncrr4 D
(rrD E
)rrE F
;rrF G
returntt 
Oktt 
(tt 
linhasAfetadastt (
)tt( )
;tt) *
}uu 
catchvv 
(vv 
Systemvv 
.vv 
	Exceptionvv #
exvv$ &
)vv& '
{ww 
returnxx 

BadRequestxx !
(xx! "
exxx" $
.xx$ %
Messagexx% ,
)xx, -
;xx- .
}yy 
}zz 	
[|| 	

HttpDelete||	 
(|| 
$str|| 
)|| 
]|| 
public}} 
async}} 
Task}} 
<}} 
IActionResult}} '
>}}' (
Delete}}) /
(}}/ 0
int}}0 3
id}}4 6
)}}6 7
{~~ 	
try 
{
ÄÄ 

Personagem
ÅÅ 
pRemover
ÅÅ #
=
ÅÅ$ %
await
ÅÅ& +
_context
ÅÅ, 4
.
ÅÅ4 5
Personagens
ÅÅ5 @
.
ÇÇ !
FirstOrDefaultAsync
ÇÇ '
(
ÇÇ' (
p
ÇÇ( )
=>
ÇÇ* ,
p
ÇÇ- .
.
ÇÇ. /
Id
ÇÇ/ 1
==
ÇÇ2 4
id
ÇÇ5 7
)
ÇÇ7 8
;
ÇÇ8 9
_context
ÑÑ 
.
ÑÑ 
Personagens
ÑÑ $
.
ÑÑ$ %
Remove
ÑÑ% +
(
ÑÑ+ ,
pRemover
ÑÑ, 4
)
ÑÑ4 5
;
ÑÑ5 6
int
ÖÖ 
linhaAfetadas
ÖÖ !
=
ÖÖ" #
await
ÖÖ$ )
_context
ÖÖ* 2
.
ÖÖ2 3
SaveChangesAsync
ÖÖ3 C
(
ÖÖC D
)
ÖÖD E
;
ÖÖE F
return
áá 
Ok
áá 
(
áá 
linhaAfetadas
áá '
)
áá' (
;
áá( )
}
àà 
catch
ââ 
(
ââ 
System
ââ 
.
ââ 
	Exception
ââ #
ex
ââ$ &
)
ââ& '
{
ää 
return
ãã 

BadRequest
ãã !
(
ãã! "
ex
ãã" $
.
ãã$ %
Message
ãã% ,
)
ãã, -
;
ãã- .
}
åå 
}
çç 	
[
èè 	
HttpPut
èè	 
(
èè 
$str
èè &
)
èè& '
]
èè' (
public
êê 
async
êê 
Task
êê 
<
êê 
IActionResult
êê '
>
êê' (&
RestaurarPontosVidaAsync
êê) A
(
êêA B

Personagem
êêB L
p
êêM N
)
êêN O
{
ëë 	
try
íí 
{
ìì 
int
îî 
linhasAfetadas
îî "
=
îî# $
$num
îî% &
;
îî& '

Personagem
ïï 
pEncontrado
ïï &
=
ïï' (
await
ññ 
_context
ññ 
.
ññ 
Personagens
ññ *
.
ññ* +!
FirstOrDefaultAsync
ññ+ >
(
ññ> ?
pBusca
ññ? E
=>
ññF H
pBusca
ññI O
.
ññO P
Id
ññP R
==
ññS U
p
ññV W
.
ññW X
Id
ññX Z
)
ññZ [
;
ññ[ \
pEncontrado
óó 
.
óó 

PontosVida
óó &
=
óó' (
$num
óó) ,
;
óó, -
bool
ôô 
	atualizou
ôô 
=
ôô  
await
ôô! &!
TryUpdateModelAsync
ôô' :
<
ôô: ;

Personagem
ôô; E
>
ôôE F
(
ôôF G
pEncontrado
ôôG R
,
ôôR S
$str
ôôT W
,
ôôW X

pAtualizar
öö 
=>
öö !

pAtualizar
öö" ,
.
öö, -

PontosVida
öö- 7
)
öö7 8
;
öö8 9
if
úú 
(
úú 
	atualizou
úú 
)
úú 
linhasAfetadas
ùù "
=
ùù# $
await
ùù% *
_context
ùù+ 3
.
ùù3 4
SaveChangesAsync
ùù4 D
(
ùùD E
)
ùùE F
;
ùùF G
return
üü 
Ok
üü 
(
üü 
linhasAfetadas
üü (
)
üü( )
;
üü) *
}
†† 
catch
°° 
(
°° 
System
°° 
.
°° 
	Exception
°° #
ex
°°$ &
)
°°& '
{
¢¢ 
return
££ 

BadRequest
££ !
(
££! "
ex
££" $
.
££$ %
Message
££% ,
)
££, -
;
££- .
}
§§ 
}
•• 	
[
®® 	
HttpPut
®®	 
(
®® 
$str
®®  
)
®®  !
]
®®! "
public
©© 
async
©© 
Task
©© 
<
©© 
IActionResult
©© '
>
©©' ( 
AtualizarFotoAsync
©©) ;
(
©©; <

Personagem
©©< F
p
©©G H
)
©©H I
{
™™ 	
try
´´ 
{
¨¨ 

Personagem
≠≠ 

personagem
≠≠ %
=
≠≠& '
await
≠≠( -
_context
≠≠. 6
.
≠≠6 7
Personagens
≠≠7 B
.
ÆÆ !
FirstOrDefaultAsync
ÆÆ '
(
ÆÆ' (
x
ÆÆ( )
=>
ÆÆ* ,
x
ÆÆ- .
.
ÆÆ. /
Id
ÆÆ/ 1
==
ÆÆ2 4
p
ÆÆ5 6
.
ÆÆ6 7
Id
ÆÆ7 9
)
ÆÆ9 :
;
ÆÆ: ;

personagem
ØØ 
.
ØØ 
FotoPersonagem
ØØ )
=
ØØ* +
p
ØØ, -
.
ØØ- .
FotoPersonagem
ØØ. <
;
ØØ< =
var
∞∞ 
attach
∞∞ 
=
∞∞ 
_context
∞∞ %
.
∞∞% &
Attach
∞∞& ,
(
∞∞, -

personagem
∞∞- 7
)
∞∞7 8
;
∞∞8 9
attach
±± 
.
±± 
Property
±± 
(
±±  
x
±±  !
=>
±±" $
x
±±% &
.
±±& '
Id
±±' )
)
±±) *
.
±±* +

IsModified
±±+ 5
=
±±6 7
false
±±8 =
;
±±= >
attach
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
x
≤≤  !
=>
≤≤" $
x
≤≤% &
.
≤≤& '
FotoPersonagem
≤≤' 5
)
≤≤5 6
.
≤≤6 7

IsModified
≤≤7 A
=
≤≤B C
true
≤≤D H
;
≤≤H I
int
≥≥ 
linhasAfetadas
≥≥ "
=
≥≥# $
await
≥≥% *
_context
≥≥+ 3
.
≥≥3 4
SaveChangesAsync
≥≥4 D
(
≥≥D E
)
≥≥E F
;
≥≥F G
return
¥¥ 
Ok
¥¥ 
(
¥¥ 
linhasAfetadas
¥¥ (
)
¥¥( )
;
¥¥) *
}
µµ 
catch
∂∂ 
(
∂∂ 
System
∂∂ 
.
∂∂ 
	Exception
∂∂ #
ex
∂∂$ &
)
∂∂& '
{
∑∑ 
return
∑∑ 

BadRequest
∑∑ 
(
∑∑  
ex
∑∑  "
.
∑∑" #
Message
∑∑# *
)
∑∑* +
;
∑∑+ ,
}
∑∑- .
}
∏∏ 	
[
∫∫ 	
HttpPut
∫∫	 
(
∫∫ 
$str
∫∫ 
)
∫∫  
]
∫∫  !
public
ªª 
async
ªª 
Task
ªª 
<
ªª 
IActionResult
ªª '
>
ªª' (
ZerarRankingAsync
ªª) :
(
ªª: ;

Personagem
ªª; E
p
ªªF G
)
ªªG H
{
ºº 	
try
ΩΩ 
{
ææ 

Personagem
øø 
pEncontrado
øø &
=
øø' (
await
¿¿ 
_context
¿¿  
.
¿¿  !
Personagens
¿¿! ,
.
¿¿, -!
FirstOrDefaultAsync
¿¿- @
(
¿¿@ A
pBusca
¿¿A G
=>
¿¿H J
pBusca
¿¿K Q
.
¿¿Q R
Id
¿¿R T
==
¿¿U W
p
¿¿X Y
.
¿¿Y Z
Id
¿¿Z \
)
¿¿\ ]
;
¿¿] ^
pEncontrado
¬¬ 
.
¬¬ 
Disputas
¬¬ $
=
¬¬% &
$num
¬¬' (
;
¬¬( )
pEncontrado
√√ 
.
√√ 
Vitorias
√√ $
=
√√% &
$num
√√' (
;
√√( )
pEncontrado
ƒƒ 
.
ƒƒ 
Derrotas
ƒƒ $
=
ƒƒ% &
$num
ƒƒ' (
;
ƒƒ( )
int
≈≈ 
linhasAfetadas
≈≈ "
=
≈≈# $
$num
≈≈% &
;
≈≈& '
bool
«« 
	atualizou
«« 
=
««  
await
««! &!
TryUpdateModelAsync
««' :
<
««: ;

Personagem
««; E
>
««E F
(
««F G
pEncontrado
««G R
,
««R S
$str
««T W
,
««W X

pAtualizar
»» 
=>
»» !

pAtualizar
»»" ,
.
»», -
Disputas
»»- 5
,
»»5 6

pAtualizar
…… 
=>
…… !

pAtualizar
……" ,
.
……, -
Vitorias
……- 5
,
……5 6

pAtualizar
   
=>
   !

pAtualizar
  " ,
.
  , -
Derrotas
  - 5
)
  5 6
;
  6 7
if
ÕÕ 
(
ÕÕ 
	atualizou
ÕÕ 
)
ÕÕ 
linhasAfetadas
ŒŒ "
=
ŒŒ# $
await
ŒŒ% *
_context
ŒŒ+ 3
.
ŒŒ3 4
SaveChangesAsync
ŒŒ4 D
(
ŒŒD E
)
ŒŒE F
;
ŒŒF G
return
–– 
Ok
–– 
(
–– 
linhasAfetadas
–– (
)
––( )
;
––) *
}
—— 
catch
““ 
(
““ 
System
““ 
.
““ 
	Exception
““ #
ex
““$ &
)
““& '
{
”” 
return
‘‘ 

BadRequest
‘‘ !
(
‘‘! "
ex
‘‘" $
.
‘‘$ %
Message
‘‘% ,
)
‘‘, -
;
‘‘- .
}
’’ 
}
÷÷ 	
[
ÿÿ 	
HttpPut
ÿÿ	 
(
ÿÿ 
$str
ÿÿ -
)
ÿÿ- .
]
ÿÿ. /
public
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
IActionResult
ŸŸ '
>
ŸŸ' (-
ZerarRankingRestaurarVidasAsync
ŸŸ) H
(
ŸŸH I
)
ŸŸI J
{
⁄⁄ 	
try
€€ 
{
‹‹ 
List
›› 
<
›› 

Personagem
›› 
>
››  
lista
››! &
=
››' (
await
ﬁﬁ 
_context
ﬁﬁ 
.
ﬁﬁ 
Personagens
ﬁﬁ *
.
ﬁﬁ* +
ToListAsync
ﬁﬁ+ 6
(
ﬁﬁ6 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9
foreach
‡‡ 
(
‡‡ 

Personagem
‡‡ #
p
‡‡$ %
in
‡‡& (
lista
‡‡) .
)
‡‡. /
{
·· 
await
‚‚ 
ZerarRankingAsync
‚‚ +
(
‚‚+ ,
p
‚‚, -
)
‚‚- .
;
‚‚. /
await
„„ &
RestaurarPontosVidaAsync
„„ 2
(
„„2 3
p
„„3 4
)
„„4 5
;
„„5 6
}
‰‰ 
return
ÂÂ 
Ok
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
System
ÁÁ 
.
ÁÁ 
	Exception
ÁÁ #
ex
ÁÁ$ &
)
ÁÁ& '
{
ËË 
return
ÈÈ 

BadRequest
ÈÈ !
(
ÈÈ! "
ex
ÈÈ" $
.
ÈÈ$ %
Message
ÈÈ% ,
)
ÈÈ, -
;
ÈÈ- .
}
ÍÍ 
}
ÎÎ 	
[
ÌÌ	 

HttpGet
ÌÌ
 
(
ÌÌ 
$str
ÌÌ &
)
ÌÌ& '
]
ÌÌ' (
public
ÓÓ 
async
ÓÓ 
Task
ÓÓ 
<
ÓÓ 
IActionResult
ÓÓ '
>
ÓÓ' (
GetByUserAsync
ÓÓ) 7
(
ÓÓ7 8
int
ÓÓ8 ;
userId
ÓÓ< B
)
ÓÓB C
{
ÔÔ 	
try
 
{
ÒÒ 
List
ÚÚ 
<
ÚÚ 

Personagem
ÚÚ 
>
ÚÚ  
lista
ÚÚ! &
=
ÚÚ' (
await
ÚÚ) .
_context
ÚÚ/ 7
.
ÚÚ7 8
Personagens
ÚÚ8 C
.
ÛÛ 
Where
ÛÛ "
(
ÛÛ" #
u
ÛÛ# $
=>
ÛÛ% '
u
ÛÛ( )
.
ÛÛ) *
Usuario
ÛÛ* 1
.
ÛÛ1 2
Id
ÛÛ2 4
==
ÛÛ5 7
userId
ÛÛ8 >
)
ÛÛ> ?
.
ÙÙ 
ToListAsync
ÙÙ (
(
ÙÙ( )
)
ÙÙ) *
;
ÙÙ* +
return
ˆˆ 
Ok
ˆˆ 
(
ˆˆ 
lista
ˆˆ 
)
ˆˆ  
;
ˆˆ  !
}
˜˜ 
catch
¯¯ 
(
¯¯ 
System
¯¯ 
.
¯¯ 
	Exception
¯¯ #
ex
¯¯$ &
)
¯¯& '
{
˘˘ 
return
˙˙ 

BadRequest
˙˙ !
(
˙˙! "
ex
˙˙" $
.
˙˙$ %
Message
˙˙% ,
)
˙˙, -
;
˙˙- .
}
˚˚ 
}
¸¸ 	
[
˛˛ 	
HttpGet
˛˛	 
(
˛˛ 
$str
˛˛ %
)
˛˛% &
]
˛˛& '
public
ˇˇ 
async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
IActionResult
ˇˇ '
>
ˇˇ' (
GetByPerfilAsync
ˇˇ) 9
(
ˇˇ9 :
int
ˇˇ: =
userId
ˇˇ> D
)
ˇˇD E
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
Usuario
ÉÉ 
usuario
ÉÉ 
=
ÉÉ  !
await
ÉÉ" '
_context
ÉÉ( 0
.
ÉÉ0 1
Usuarios
ÉÉ1 9
.
ÑÑ !
FirstOrDefaultAsync
ÑÑ '
(
ÑÑ' (
x
ÑÑ( )
=>
ÑÑ* ,
x
ÑÑ- .
.
ÑÑ. /
Id
ÑÑ/ 1
==
ÑÑ2 4
userId
ÑÑ5 ;
)
ÑÑ; <
;
ÑÑ< =
List
ÜÜ 
<
ÜÜ 

Personagem
ÜÜ 
>
ÜÜ  
lista
ÜÜ! &
=
ÜÜ' (
new
ÜÜ) ,
List
ÜÜ- 1
<
ÜÜ1 2

Personagem
ÜÜ2 <
>
ÜÜ< =
(
ÜÜ= >
)
ÜÜ> ?
;
ÜÜ? @
if
àà 
(
àà 
usuario
àà 
.
àà 
Perfil
àà !
==
àà" $
$str
àà% ,
)
àà, -
lista
ââ 
=
ââ 
await
ââ !
_context
ââ" *
.
ââ* +
Personagens
ââ+ 6
.
ââ6 7
ToListAsync
ââ7 B
(
ââB C
)
ââC D
;
ââD E
else
ää 
lista
ãã 
=
ãã 
await
ãã !
_context
ãã" *
.
ãã* +
Personagens
ãã+ 6
.
åå 
Where
åå "
(
åå" #
p
åå# $
=>
åå% '
p
åå( )
.
åå) *
Usuario
åå* 1
.
åå1 2
Id
åå2 4
==
åå5 7
userId
åå8 >
)
åå> ?
.
åå? @
ToListAsync
åå@ K
(
ååK L
)
ååL M
;
ååM N
return
éé 
Ok
éé 
(
éé 
lista
éé 
)
éé  
;
éé  !
}
èè 
catch
êê 
(
êê 
System
êê 
.
êê 
	Exception
êê #
ex
êê$ &
)
êê& '
{
ëë 
return
íí 

BadRequest
íí !
(
íí! "
ex
íí" $
.
íí$ %
Message
íí% ,
)
íí, -
;
íí- .
}
ìì 
}
îî 	
[
ññ 	
HttpGet
ññ	 
(
ññ 
$str
ññ 
)
ññ 
]
ññ 
public
óó 
async
óó 
Task
óó 
<
óó 
IActionResult
óó '
>
óó' (
GetByUserAsync
óó) 7
(
óó7 8
)
óó8 9
{
òò 	
try
ôô 
{
öö 
int
õõ 
id
õõ 
=
õõ 
int
õõ 
.
õõ 
Parse
õõ "
(
õõ" #
User
õõ# '
.
õõ' (
Claims
õõ( .
.
õõ. /
FirstOrDefault
õõ/ =
(
õõ= >
c
õõ> ?
=>
õõ@ B
c
õõC D
.
õõD E
Type
õõE I
==
õõJ L

ClaimTypes
õõM W
.
õõW X
NameIdentifier
õõX f
)
õõf g
.
õõg h
Value
õõh m
)
õõm n
;
õõn o
List
ùù 
<
ùù 

Personagem
ùù 
>
ùù  
lista
ùù! &
=
ùù' (
await
ùù) .
_context
ùù/ 7
.
ùù7 8
Personagens
ùù8 C
.
ûû 
Where
ûû 
(
ûû 
u
ûû 
=>
ûû 
u
ûû  !
.
ûû! "
Usuario
ûû" )
.
ûû) *
Id
ûû* ,
==
ûû- /
id
ûû0 2
)
ûû2 3
.
ûû3 4
ToListAsync
ûû4 ?
(
ûû? @
)
ûû@ A
;
ûûA B
return
†† 
Ok
†† 
(
†† 
lista
†† 
)
††  
;
††  !
}
°° 
catch
¢¢ 
(
¢¢ 
System
¢¢ 
.
¢¢ 
	Exception
¢¢ #
ex
¢¢$ &
)
¢¢& '
{
££ 
return
§§ 

BadRequest
§§ !
(
§§! "
ex
§§" $
.
§§$ %
Message
§§% ,
)
§§, -
;
§§- .
}
•• 
}
¶¶ 	
[
®® 	
HttpGet
®®	 
(
®® 
$str
®® 
)
®® 
]
®®  
public
©© 
async
©© 
Task
©© 
<
©© 
IActionResult
©© '
>
©©' (
GetByPerfilAsync
©©) 9
(
©©9 :
)
©©: ;
{
™™ 	
try
´´ 
{
¨¨ 
List
≠≠ 
<
≠≠ 

Personagem
≠≠ 
>
≠≠  
lista
≠≠! &
=
≠≠' (
new
≠≠) ,
List
≠≠- 1
<
≠≠1 2

Personagem
≠≠2 <
>
≠≠< =
(
≠≠= >
)
≠≠> ?
;
≠≠? @
if
ØØ 
(
ØØ  
ObterPerfilUsuario
ØØ %
(
ØØ% &
)
ØØ& '
==
ØØ( *
$str
ØØ+ 2
)
ØØ2 3
lista
∞∞ 
=
∞∞ 
await
∞∞ !
_context
∞∞" *
.
∞∞* +
Personagens
∞∞+ 6
.
∞∞6 7
ToListAsync
∞∞7 B
(
∞∞B C
)
∞∞C D
;
∞∞D E
else
±± 
{
≤≤ 
lista
≥≥ 
=
≥≥ 
await
≥≥ !
_context
≥≥" *
.
≥≥* +
Personagens
≥≥+ 6
.
¥¥ 
Where
¥¥ "
(
¥¥" #
p
¥¥# $
=>
¥¥% '
p
¥¥( )
.
¥¥) *
Usuario
¥¥* 1
.
¥¥1 2
Id
¥¥2 4
==
¥¥5 7
ObterUsuarioId
¥¥8 F
(
¥¥F G
)
¥¥G H
)
¥¥H I
.
¥¥I J
ToListAsync
¥¥J U
(
¥¥U V
)
¥¥V W
;
¥¥W X
}
µµ 
return
∂∂ 
Ok
∂∂ 
(
∂∂ 
lista
∂∂ 
)
∂∂  
;
∂∂  !
}
∑∑ 
catch
∏∏ 
(
∏∏ 
System
∏∏ 
.
∏∏ 
	Exception
∏∏ #
ex
∏∏$ &
)
∏∏& '
{
ππ 
return
∫∫ 

BadRequest
∫∫ !
(
∫∫! "
ex
∫∫" $
.
∫∫$ %
Message
∫∫% ,
)
∫∫, -
;
∫∫- .
}
ªª 
}
ºº 	
}
¿¿ 
}¡¡ Öd
AD:\Daniel\PMII\RpgApi\Controllers\PersonagensExemploController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 (
PersonagensExemploController		 -
:		. /
ControllerBase		0 >
{

 
private 
static 
List 
< 

Personagem &
>& '
personagens( 3
=4 5
new6 9
List: >
<> ?

Personagem? I
>I J
(J K
)K L
{ 	
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 5
,5 6

PontosVida7 A
=A B
$numB E
,E F
ForcaG L
=L M
$numM O
,O P
DefesaQ W
=W X
$numX Z
,Z [
Inteligencia\ h
=h i
$numi k
,k l
Classem s
=s t

ClasseEnumt ~
.~ 
	Cavaleiro	 à
}
à â
,
â ä
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 3
,3 4

PontosVida5 ?
=? @
$num@ C
,C D
ForcaE J
=J K
$numK M
,M N
DefesaO U
=U V
$numV X
,X Y
InteligenciaZ f
=f g
$numg i
,i j
Classek q
=q r

ClasseEnumr |
.| }
	Cavaleiro	} Ü
}
Ü á
,
á à
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 9
,9 :

PontosVida; E
=E F
$numF I
,I J
ForcaK P
=P Q
$numQ S
,S T
DefesaU [
=[ \
$num\ ^
,^ _
Inteligencia` l
=l m
$numm o
,o p
Classeq w
=w x

ClasseEnum	x Ç
.
Ç É
Clerigo
É ä
}
ã å
,
å ç
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 7
,7 8

PontosVida9 C
=C D
$numD G
,G H
ForcaI N
=N O
$numO Q
,Q R
DefesaS Y
=Y Z
$numZ \
,\ ]
Inteligencia^ j
=j k
$numk m
,m n
Classeo u
=u v

ClasseEnum	v Ä
.
Ä Å
Mago
Å Ö
}
Ü á
,
á à
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 6
,6 7

PontosVida8 B
=B C
$numC F
,F G
ForcaH M
=M N
$numN P
,P Q
DefesaR X
=X Y
$numY [
,[ \
Inteligencia] i
=i j
$numj l
,l m
Classen t
=t u

ClasseEnumu 
.	 Ä
	Cavaleiro
Ä â
}
ä ã
,
ã å
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 8
,8 9

PontosVida: D
=D E
$numE H
,H I
ForcaJ O
=O P
$numP R
,R S
DefesaT Z
=Z [
$num[ ]
,] ^
Inteligencia_ k
=k l
$numl n
,n o
Classep v
=v w

ClasseEnum	w Å
.
Å Ç
Clerigo
Ç â
}
ä ã
,
ã å
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 8
,8 9

PontosVida: D
=D E
$numE H
,H I
ForcaJ O
=O P
$numP R
,R S
DefesaT Z
=Z [
$num[ ]
,] ^
Inteligencia_ k
=k l
$numl n
,n o
Classep v
=v w

ClasseEnum	w Å
.
Å Ç
Mago
Ç Ü
}
á à
} 	
;	 

[ 	
HttpGet	 
( 
$str 
) 
] 
public 
IActionResult 
Get  
(  !
)! "
{ 	
return 
Ok 
( 
personagens !
)! "
;" #
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
IActionResult 
	GetSingle &
(& '
int' *
id+ -
)- .
{   	
return!! 
Ok!! 
(!! 
personagens!! !
.!!! "
FirstOrDefault!!" 0
(!!0 1
pe!!1 3
=>!!4 6
pe!!7 9
.!!9 :
Id!!: <
==!!= ?
id!!@ B
)!!B C
)!!C D
;!!D E
}"" 	
[$$ 	
HttpGet$$	 
($$ 
$str$$ 
)$$ 
]$$  
public%% 
IActionResult%% 
GetOrdem%% %
(%%% &
)%%& '
{&& 	
List'' 
<'' 

Personagem'' 
>'' 

listaFinal'' '
=''( )
personagens''* 5
.''5 6
OrderBy''6 =
(''= >
p''> ?
=>''@ B
p''C D
.''D E
Nome''E I
)''I J
.''J K
ToList''K Q
(''Q R
)''R S
;''S T
return(( 
Ok(( 
((( 

listaFinal((  
)((  !
;((! "
})) 	
[++ 	
HttpGet++	 
(++ 
$str++ 
)++ 
]++  
public,, 
IActionResult,, 
GetQuantidade,, *
(,,* +
),,+ ,
{-- 	
return.. 
Ok.. 
(.. 
$str.. 3
+..4 5
personagens..6 A
...A B
Count..B G
)..G H
;..H I
}// 	
[11 	
HttpGet11	 
(11 
$str11 
)11  
]11  !
public22 
IActionResult22 
GetSomaForca22 )
(22) *
)22* +
{33 	
return44 
Ok44 
(44 
personagens44 !
.44! "
Sum44" %
(44% &
p44& '
=>44( *
p44+ ,
.44, -
Forca44- 2
)442 3
)443 4
;444 5
}55 	
[77 	
HttpGet77	 
(77 
$str77 "
)77" #
]77# $
public88 
IActionResult88 
GetSemCavaleiro88 ,
(88, -
)88- .
{99 	
List:: 
<:: 

Personagem:: 
>:: 

listaBusca:: '
=::( )
personagens::* 5
.::5 6
FindAll::6 =
(::= >
p::> ?
=>::@ B
p::C D
.::D E
Classe::E K
!=::L N

ClasseEnum::O Y
.::Y Z
	Cavaleiro::Z c
)::c d
;::d e
return;; 
Ok;; 
(;; 

listaBusca;;  
);;  !
;;;! "
}<< 	
[>> 	
HttpGet>>	 
(>> 
$str>> -
)>>- .
]>>. /
public?? 
IActionResult?? 
GetByNomeAproximado?? 0
(??0 1
string??1 7
nome??8 <
)??< =
{@@ 	
ListAA 
<AA 

PersonagemAA 
>AA 

listaBuscaAA '
=AA( )
personagensAA* 5
.AA5 6
FindAllAA6 =
(AA= >
pAA> ?
=>AA@ B
pAAC D
.AAD E
NomeAAE I
.AAI J
ContainsAAJ R
(AAR S
nomeAAS W
)AAW X
)AAX Y
;AAY Z
returnBB 
OkBB 
(BB 

listaBuscaBB  
)BB  !
;BB! "
}CC 	
[EE 	
HttpGetEE	 
(EE 
$strEE %
)EE% &
]EE& '
publicFF 
IActionResultFF 

GetByForcaFF '
(FF' (
intFF( +
forcaFF, 1
)FF1 2
{GG 	
returnHH 
OkHH 
(HH 
personagensHH !
.HH! "
FirstOrDefaultHH" 0
(HH0 1
xHH1 2
=>HH3 5
xHH6 7
.HH7 8
ForcaHH8 =
==HH> @
forcaHHA F
)HHF G
)HHG H
;HHH I
}II 	
[KK 	
HttpGetKK	 
(KK 
$strKK #
)KK# $
]KK$ %
publicLL 
IActionResultLL 
GetRemovendoMagosLL .
(LL. /
)LL/ 0
{MM 	

PersonagemNN 
pRemoveNN 
=NN  
personagensNN! ,
.NN, -
FindNN- 1
(NN1 2
pNN2 3
=>NN4 6
pNN7 8
.NN8 9
ClasseNN9 ?
==NN@ B

ClasseEnumNNC M
.NNM N
MagoNNN R
)NNR S
;NNS T
personagensOO 
.OO 
RemoveOO 
(OO 
pRemoveOO &
)OO& '
;OO' (
returnPP 
OkPP 
(PP 
$strPP -
+PP. /
pRemovePP0 7
.PP7 8
NomePP8 <
)PP< =
;PP= >
}QQ 	
[SS 	
HttpGetSS	 
(SS 
$strSS ,
)SS, -
]SS- .
publicTT 
IActionResultTT 
GetByInteligenciaTT .
(TT. /
intTT/ 2
valorTT3 8
)TT8 9
{UU 	
ListVV 
<VV 

PersonagemVV 
>VV 

listaBuscaVV '
=VV( )
personagensVV* 5
.VV5 6
FindAllVV6 =
(VV= >
pVV> ?
=>VV@ B
pVVC D
.VVD E
InteligenciaVVE Q
==VVR T
valorVVU Z
)VVZ [
;VV[ \
ifXX 
(XX 

listaBuscaXX 
.XX 
CountXX  
==XX! #
$numXX$ %
)XX% &
returnYY 

BadRequestYY !
(YY! "
$strYY" @
)YY@ A
;YYA B
elseZZ 
return[[ 
Ok[[ 
([[ 

listaBusca[[ $
)[[$ %
;[[% &
}\\ 	
[^^ 	
HttpGet^^	 
(^^ 
$str^^ "
)^^" #
]^^# $
public__ 
IActionResult__ 
GetById__ $
(__$ %
int__% (
id__) +
)__+ ,
{`` 	
returnaa 
Okaa 
(aa 
personagensaa !
.aa! "
FirstOrDefaultaa" 0
(aa0 1
fulanoaa1 7
=>aa8 :
fulanoaa; A
.aaA B
IdaaB D
==aaE G
idaaH J
)aaJ K
)aaK L
;aaL M
}bb 	
[dd 	
HttpPostdd	 
]dd 
publicee 
IActionResultee 
AddPersonagemee *
(ee* +

Personagemee+ 5
novoPersonagemee6 D
)eeD E
{ff 	
ifgg 
(gg 
novoPersonagemgg 
.gg 
Inteligenciagg +
==gg, .
$numgg/ 0
)gg0 1
returnhh 

BadRequesthh !
(hh! "
$strhh" W
)hhW X
;hhX Y
personagensjj 
.jj 
Addjj 
(jj 
novoPersonagemjj *
)jj* +
;jj+ ,
returnkk 
Okkk 
(kk 
personagenskk !
)kk! "
;kk" #
}ll 	
}ww 
}xx çU
CD:\Daniel\PMII\RpgApi\Controllers\PersonagensExercicioController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class *
PersonagensExercicioController /
:0 1
ControllerBase2 @
{ 
private 
static 
List 
< 

Personagem &
>& '
personagens( 3
=4 5
new6 9
List: >
<> ?

Personagem? I
>I J
(J K
)K L
{ 	
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 5
,5 6

PontosVida7 A
=A B
$numB E
,E F
ForcaG L
=L M
$numM O
,O P
DefesaQ W
=W X
$numX Z
,Z [
Inteligencia\ h
=h i
$numi k
,k l
Classem s
=s t

ClasseEnumt ~
.~ 
	Cavaleiro	 à
}
à â
,
â ä
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 3
,3 4

PontosVida5 ?
=? @
$num@ C
,C D
ForcaE J
=J K
$numK M
,M N
DefesaO U
=U V
$numV X
,X Y
InteligenciaZ f
=f g
$numg i
,i j
Classek q
=q r

ClasseEnumr |
.| }
	Cavaleiro	} Ü
}
Ü á
,
á à
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 9
,9 :

PontosVida; E
=E F
$numF I
,I J
ForcaK P
=P Q
$numQ S
,S T
DefesaU [
=[ \
$num\ ^
,^ _
Inteligencia` l
=l m
$numm o
,o p
Classeq w
=w x

ClasseEnum	x Ç
.
Ç É
Clerigo
É ä
}
ã å
,
å ç
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 7
,7 8

PontosVida9 C
=C D
$numD G
,G H
ForcaI N
=N O
$numO Q
,Q R
DefesaS Y
=Y Z
$numZ \
,\ ]
Inteligencia^ j
=j k
$numk m
,m n
Classeo u
=u v

ClasseEnum	v Ä
.
Ä Å
Mago
Å Ö
}
Ü á
,
á à
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 6
,6 7

PontosVida8 B
=B C
$numC F
,F G
ForcaH M
=M N
$numN P
,P Q
DefesaR X
=X Y
$numY [
,[ \
Inteligencia] i
=i j
$numj l
,l m
Classen t
=t u

ClasseEnumu 
.	 Ä
	Cavaleiro
Ä â
}
ä ã
,
ã å
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 8
,8 9

PontosVida: D
=D E
$numE H
,H I
ForcaJ O
=O P
$numP R
,R S
DefesaT Z
=Z [
$num[ ]
,] ^
Inteligencia_ k
=k l
$numl n
,n o
Classep v
=v w

ClasseEnum	w Å
.
Å Ç
Clerigo
Ç â
}
ä ã
,
ã å
new 

Personagem 
( 
) 
{ 
Id !
=" #
$num$ %
,% &
Nome' +
=, -
$str. 8
,8 9

PontosVida: D
=D E
$numE H
,H I
ForcaJ O
=O P
$numP R
,R S
DefesaT Z
=Z [
$num[ ]
,] ^
Inteligencia_ k
=k l
$numl n
,n o
Classep v
=v w

ClasseEnum	w Å
.
Å Ç
Mago
Ç Ü
}
á à
} 	
;	 

[ 	
HttpGet	 
( 
$str #
)# $
]$ %
public 
IActionResult 
GetbyClasse (
(( )
int) ,
id- /
)/ 0
{ 	

ClasseEnum 
tipoEnum 
=  !
(" #

ClasseEnum# -
)- .
id. 0
;0 1
List   
<   

Personagem   
>   
listaClasse   (
=  ) *
personagens  + 6
.  6 7
FindAll  7 >
(  > ?
p  ? @
=>  A C
p  D E
.  E F
Classe  F L
.  L M
Equals  M S
(  S T
tipoEnum  T \
)  \ ]
)  ] ^
;  ^ _
return!! 
Ok!! 
(!! 
listaClasse!! !
)!!! "
;!!" #
}"" 	
[$$ 	
HttpGet$$	 
($$ 
$str$$ #
)$$# $
]$$$ %
public%% 
IActionResult%% 
	GetbyNome%% &
(%%& '
string%%' -
nome%%. 2
)%%2 3
{&& 	
List'' 
<'' 

Personagem'' 
>'' 

listaBusca'' '
=''( )
personagens''* 5
.''5 6
FindAll''6 =
(''= >
p''> ?
=>''@ B
p''C D
.''D E
Nome''E I
.''I J
Equals''J P
(''P Q
nome''Q U
)''U V
)''V W
;''W X
if)) 
()) 

listaBusca)) 
.)) 
Count)) #
!=))$ &
$num))' (
)))) *
{))* +
return** 
Ok** 
(** 

listaBusca** (
)**( )
;**) *
}++ 
else++ 
{++ 
return,, 
NotFound,, #
(,,# $
$str,,$ E
),,E F
;,,F G
}-- 
}.. 	
[00 	
HttpPost00	 
(00 
$str00 !
)00! "
]00" #
public22 
IActionResult22 
PostValidacao22 *
(22* +

Personagem22+ 5
NovoPersonagem226 D
)22D E
{22E F
if44 
(44 
NovoPersonagem44 
.44 
Defesa44 $
<44% &
$num44' )
||44* ,
NovoPersonagem44- ;
.44; <
Inteligencia44< H
>44I J
$num44K M
)44M N
{44N O
return55 

BadRequest55 !
(55! "
$str55" b
)55b c
;55c d
}66 
else66 
{66 
personagens77 
.77 
Add77 
(77  
NovoPersonagem77  .
)77. /
;77/ 0
return88 
Ok88 
(88 
personagens88 %
)88% &
;88& '
}99 
}:: 	
[<< 	
HttpPost<<	 
(<< 
$str<< %
)<<% &
]<<& '
public>> 
IActionResult>> 
PostValidacaoMago>> .
(>>. /

Personagem>>/ 9
NovoPersonagem>>: H
)>>H I
{>>I J
if@@ 
(@@ 
NovoPersonagem@@ 
.@@ 
Classe@@ $
==@@% '

ClasseEnum@@( 2
.@@2 3
Mago@@3 7
&&@@8 :
NovoPersonagem@@; I
.@@I J
Defesa@@J P
<@@Q R
$num@@S U
)@@U V
{@@V W
returnAA 

BadRequestAA !
(AA! "
$strAA" X
)AAX Y
;AAY Z
}BB 
elseBB 
{BB 
personagensCC 
.CC 
AddCC 
(CC  
NovoPersonagemCC  .
)CC. /
;CC/ 0
returnDD 
OkDD 
(DD 
personagensDD %
)DD% &
;DD& '
}EE 
}FF 	
[HH 	
HttpGetHH	 
(HH 
$strHH !
)HH! "
]HH" #
publicII 
IActionResultII 
GetClerigoMagoII +
(II+ ,
)II, -
{JJ 	
ListKK 
<KK 

PersonagemKK 
>KK 
RemoveCavaleiroKK ,
=KK- .
personagensKK/ :
.KK: ;
FindAllKK; B
(KKB C
pKKC D
=>KKE G
pKKH I
.KKI J
ClasseKKJ P
!=KKQ S

ClasseEnumKKT ^
.KK^ _
	CavaleiroKK_ h
)KKh i
;KKi j
ListMM 
<MM 

PersonagemMM 
>MM 
OrdenadoPontosVidaMM /
=MM0 1
RemoveCavaleiroMM2 A
.MMA B
OrderByDescendingMMB S
(MMS T
xMMT U
=>MMV X
xMMY Z
.MMZ [

PontosVidaMM[ e
)MMe f
.MMf g
ToListMMg m
(MMm n
)MMn o
;MMo p
returnOO 
OkOO 
(OO 
OrdenadoPontosVidaOO (
)OO( )
;OO) *
}PP 	
[RR 	
HttpGetRR	 
(RR 
$strRR "
)RR" #
]RR# $
publicSS 
IActionResultSS 
GetEstatisticasSS ,
(SS, -
)SS- .
{TT 	
returnUU 
OkUU 
(UU 
$strUU 
+UU 
personagensUU  +
.UU+ ,
CountUU, 1
+UU2 3
$strUU3 _
+UU_ `
personagensUUa l
.UUl m
SumUUm p
(UUp q
iUUq r
=>UUs u
iUUv w
.UUw x
Inteligencia	UUx Ñ
)
UUÑ Ö
)
UUÖ Ü
;
UUÜ á
}VV 	
}[[ 
}\\ åø
7D:\Daniel\PMII\RpgApi\Controllers\UsuariosController.cs
	namespace 	
RpgApi
 
. 
Controllers 
{ 
[ 
	Authorize 
] 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
UsuariosController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
DataContext $
_context% -
;- .
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
UsuariosController !
(! "
DataContext" -
context. 5
,5 6
IConfiguration7 E
configurationF S
)S T
{ 	
_context 
= 
context 
; 
_configuration   
=   
configuration   *
;  * +
}!! 	
private## 
async## 
Task## 
<## 
bool## 
>##  
UsuarioExistente##! 1
(##1 2
string##2 8
username##9 A
)##A B
{$$ 	
if%% 
(%% 
await%% 
_context%% 
.%% 
Usuarios%% '
.%%' (
AnyAsync%%( 0
(%%0 1
x%%1 2
=>%%3 5
x%%6 7
.%%7 8
Username%%8 @
.%%@ A
ToLower%%A H
(%%H I
)%%I J
==%%K M
username%%N V
.%%V W
ToLower%%W ^
(%%^ _
)%%_ `
)%%` a
)%%a b
{&& 
return'' 
true'' 
;'' 
}(( 
return)) 
false)) 
;)) 
}** 	
private,, 
string,, 

CriarToken,, !
(,,! "
Usuario,," )
usuario,,* 1
),,1 2
{-- 	
List.. 
<.. 
Claim.. 
>.. 
claims.. 
=..  
new..! $
List..% )
<..) *
Claim..* /
>../ 0
{// 
new00 
Claim00 
(00 

ClaimTypes00  
.00  !
NameIdentifier00! /
,00/ 0
usuario001 8
.008 9
Id009 ;
.00; <
ToString00< D
(00D E
)00E F
)00F G
,00G H
new11 
Claim11 
(11 

ClaimTypes11  
.11  !
Name11! %
,11% &
usuario11' .
.11. /
Username11/ 7
)117 8
,118 9
new22 
Claim22 
(22 

ClaimTypes22  
.22  !
Role22! %
,22% &
usuario22' .
.22. /
Perfil22/ 5
)225 6
}33 
;33  
SymmetricSecurityKey44  
key44! $
=44% &
new44' * 
SymmetricSecurityKey44+ ?
(44? @
Encoding44@ H
.44H I
UTF844I M
.55 
GetBytes55 
(55 
_configuration55 $
.55$ %

GetSection55% /
(55/ 0
$str550 I
)55I J
.55J K
Value55K P
)55P Q
)55Q R
;55R S
SigningCredentials66 
creds66 $
=66% &
new66' *
SigningCredentials66+ =
(66= >
key66> A
,66A B
SecurityAlgorithms66C U
.66U V
HmacSha512Signature66V i
)66i j
;66j k#
SecurityTokenDescriptor77 #
tokenDescriptor77$ 3
=774 5
new776 9#
SecurityTokenDescriptor77: Q
{88 
Subject99 
=99 
new99 
ClaimsIdentity99 ,
(99, -
claims99- 3
)993 4
,994 5
Expires:: 
=:: 
DateTime:: "
.::" #
Now::# &
.::& '
AddDays::' .
(::. /
$num::/ 0
)::0 1
,::1 2
SigningCredentials;; "
=;;# $
creds;;% *
}<< 
;<< #
JwtSecurityTokenHandler== #
tokenHandler==$ 0
===1 2
new==3 6#
JwtSecurityTokenHandler==7 N
(==N O
)==O P
;==P Q
SecurityToken>> 
token>> 
=>>  !
tokenHandler>>" .
.>>. /
CreateToken>>/ :
(>>: ;
tokenDescriptor>>; J
)>>J K
;>>K L
return?? 
tokenHandler?? 
.??  

WriteToken??  *
(??* +
token??+ 0
)??0 1
;??1 2
}@@ 	
[CC 	
AllowAnonymousCC	 
]CC 
[DD 	
HttpPostDD	 
(DD 
$strDD 
)DD 
]DD 
publicEE 
asyncEE 
TaskEE 
<EE 
IActionResultEE '
>EE' (
RegistrarUsuarioEE) 9
(EE9 :
UsuarioEE: A
userEEB F
)EEF G
{FF 	
tryGG 
{HH 
ifII 
(II 
awaitII 
UsuarioExistenteII *
(II* +
userII+ /
.II/ 0
UsernameII0 8
)II8 9
)II9 :
throwJJ 
newJJ 
SystemJJ $
.JJ$ %
	ExceptionJJ% .
(JJ. /
$strJJ/ J
)JJJ K
;JJK L
CriptografiaLL 
.LL 
CriarPasswordHashLL .
(LL. /
userLL/ 3
.LL3 4
PasswordStringLL4 B
,LLB C
outLLD G
byteLLH L
[LLL M
]LLM N
hashLLO S
,LLS T
outLLU X
byteLLY ]
[LL] ^
]LL^ _
saltLL` d
)LLd e
;LLe f
userMM 
.MM 
PasswordStringMM #
=MM$ %
stringMM& ,
.MM, -
EmptyMM- 2
;MM2 3
userNN 
.NN 
PasswordHashNN !
=NN" #
hashNN$ (
;NN( )
userOO 
.OO 
PasswordSaltOO !
=OO" #
saltOO$ (
;OO( )
awaitPP 
_contextPP 
.PP 
UsuariosPP '
.PP' (
AddAsyncPP( 0
(PP0 1
userPP1 5
)PP5 6
;PP6 7
awaitQQ 
_contextQQ 
.QQ 
SaveChangesAsyncQQ /
(QQ/ 0
)QQ0 1
;QQ1 2
returnSS 
OkSS 
(SS 
userSS 
.SS 
IdSS !
)SS! "
;SS" #
}TT 
catchUU 
(UU 
SystemUU 
.UU 
	ExceptionUU #
exUU$ &
)UU& '
{VV 
returnWW 

BadRequestWW !
(WW! "
exWW" $
.WW$ %
MessageWW% ,
)WW, -
;WW- .
}XX 
}YY 	
[ZZ 	
AllowAnonymousZZ	 
]ZZ 
[[[ 	
HttpPost[[	 
([[ 
$str[[ 
)[[ 
][[  
public\\ 
async\\ 
Task\\ 
<\\ 
IActionResult\\ '
>\\' (
AutenticarUsuario\\) :
(\\: ;
Usuario\\; B
credenciais\\C N
)\\N O
{]] 	
try^^ 
{__ 
Usuario`` 
usuario`` 
=``  !
await``" '
_context``( 0
.``0 1
Usuarios``1 9
.aa 
FirstOrDefaultAsyncaa '
(aa' (
xaa( )
=>aa* ,
xaa- .
.aa. /
Usernameaa/ 7
.aa7 8
ToLoweraa8 ?
(aa? @
)aa@ A
.aaA B
EqualsaaB H
(aaH I
credenciaisaaI T
.aaT U
UsernameaaU ]
.aa] ^
ToLoweraa^ e
(aae f
)aaf g
)aag h
)aah i
;aai j
ifcc 
(cc 
usuariocc 
==cc 
nullcc #
)cc# $
throwdd 
newdd 
Systemdd $
.dd$ %
	Exceptiondd% .
(dd. /
$strdd/ H
)ddH I
;ddI J
elseee 
ifee 
(ee 
!ee 
Criptografiaee &
.ee& '!
VerificarPasswordHashee' <
(ee< =
credenciaisee= H
.eeH I
PasswordStringeeI W
,eeW X
usuarioeeY `
.ee` a
PasswordHasheea m
,eem n
usuarioeeo v
.eev w
PasswordSalt	eew É
)
eeÉ Ñ
)
eeÑ Ö
throwff 
newff 
Systemff $
.ff$ %
	Exceptionff% .
(ff. /
$strff/ A
)ffA B
;ffB C
elsegg 
{hh 
usuarioii 
.ii 

DataAcessoii &
=ii' (
Systemii) /
.ii/ 0
DateTimeii0 8
.ii8 9
Nowii9 <
;ii< =
_contextjj 
.jj 
Usuariosjj %
.jj% &
Updatejj& ,
(jj, -
usuariojj- 4
)jj4 5
;jj5 6
awaitkk 
_contextkk "
.kk" #
SaveChangesAsynckk# 3
(kk3 4
)kk4 5
;kk5 6
usuariomm 
.mm 
PasswordHashmm (
=mm) *
nullmm+ /
;mm/ 0
usuarionn 
.nn 
PasswordSaltnn (
=nn) *
nullnn+ /
;nn/ 0
usuariooo 
.oo 
Tokenoo !
=oo" #

CriarTokenoo$ .
(oo. /
usuariooo/ 6
)oo6 7
;oo7 8
returnpp 
Okpp 
(pp 
usuariopp %
)pp% &
;pp& '
}rr 
}ss 
catchtt 
(tt 
Systemtt 
.tt 
	Exceptiontt #
extt$ &
)tt& '
{uu 
returnuu 

BadRequestuu 
(uu  
exuu  "
.uu" #
Messageuu# *
)uu* +
;uu+ ,
}uu- .
}vv 	
[yy 	
HttpPutyy	 
(yy 
$stryy 
)yy  
]yy  !
publiczz 
asynczz 
Taskzz 
<zz 
IActionResultzz '
>zz' (
AlterarSenhaUsuariozz) <
(zz< =
Usuariozz= D
credenciaiszzE P
)zzP Q
{{{ 	
try|| 
{}} 
Usuario~~ 
usuario~~ 
=~~  !
await~~" '
_context~~( 0
.~~0 1
Usuarios~~1 9
. 
FirstOrDefaultAsync '
(' (
x( )
=>* ,
x- .
.. /
Username/ 7
.7 8
ToLower8 ?
(? @
)@ A
.A B
EqualsB H
(H I
credenciaisI T
.T U
UsernameU ]
.] ^
ToLower^ e
(e f
)f g
)g h
)h i
;i j
if
ÅÅ 
(
ÅÅ 
usuario
ÅÅ 
==
ÅÅ 
null
ÅÅ #
)
ÅÅ# $
throw
ÇÇ 
new
ÇÇ 
System
ÇÇ $
.
ÇÇ$ %
	Exception
ÇÇ% .
(
ÇÇ. /
$str
ÇÇ/ H
)
ÇÇH I
;
ÇÇI J
Criptografia
ÑÑ 
.
ÑÑ 
CriarPasswordHash
ÑÑ .
(
ÑÑ. /
credenciais
ÑÑ/ :
.
ÑÑ: ;
PasswordString
ÑÑ; I
,
ÑÑI J
out
ÑÑK N
byte
ÑÑO S
[
ÑÑS T
]
ÑÑT U
hash
ÑÑV Z
,
ÑÑZ [
out
ÑÑ\ _
byte
ÑÑ` d
[
ÑÑd e
]
ÑÑe f
salt
ÑÑg k
)
ÑÑk l
;
ÑÑl m
usuario
ÖÖ 
.
ÖÖ 
PasswordHash
ÖÖ $
=
ÖÖ% &
hash
ÖÖ' +
;
ÖÖ+ ,
usuario
ÜÜ 
.
ÜÜ 
PasswordSalt
ÜÜ $
=
ÜÜ% &
salt
ÜÜ' +
;
ÜÜ+ ,
_context
àà 
.
àà 
Usuarios
àà !
.
àà! "
Update
àà" (
(
àà( )
usuario
àà) 0
)
àà0 1
;
àà1 2
int
ââ 
linhasAfetadas
ââ "
=
ââ# $
await
ââ% *
_context
ââ+ 3
.
ââ3 4
SaveChangesAsync
ââ4 D
(
ââD E
)
ââE F
;
ââF G
return
ää 
Ok
ää 
(
ää 
linhasAfetadas
ää (
)
ää( )
;
ää) *
}
ãã 
catch
åå 
(
åå 
System
åå 
.
åå 
	Exception
åå #
ex
åå$ &
)
åå& '
{
çç 
return
éé 

BadRequest
éé !
(
éé! "
ex
éé" $
.
éé$ %
Message
éé% ,
)
éé, -
;
éé- .
}
èè 
}
êê 	
[
íí 	
HttpGet
íí	 
(
íí 
$str
íí 
)
íí 
]
íí 
public
ìì 
async
ìì 
Task
ìì 
<
ìì 
IActionResult
ìì '
>
ìì' (
GetUsuarios
ìì) 4
(
ìì4 5
)
ìì5 6
{
îî 	
try
ïï 
{
ññ 
List
òò 
<
òò 
Usuario
òò 
>
òò 
lista
òò #
=
òò$ %
await
òò& +
_context
òò, 4
.
òò4 5
Usuarios
òò5 =
.
òò= >
ToListAsync
òò> I
(
òòI J
)
òòJ K
;
òòK L
return
ôô 
Ok
ôô 
(
ôô 
lista
ôô 
)
ôô  
;
ôô  !
}
öö 
catch
õõ 
(
õõ 
System
õõ 
.
õõ 
	Exception
õõ #
ex
õõ$ &
)
õõ& '
{
úú 
return
ùù 

BadRequest
ùù !
(
ùù! "
ex
ùù" $
.
ùù$ %
Message
ùù% ,
)
ùù, -
;
ùù- .
}
ûû 
}
üü 	
[
°° 	
HttpGet
°°	 
(
°° 
$str
°° 
)
°° 
]
°°  
public
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
IActionResult
¢¢ '
>
¢¢' (

GetUsuario
¢¢) 3
(
¢¢3 4
int
¢¢4 7
	usuarioId
¢¢8 A
)
¢¢A B
{
££ 	
try
§§ 
{
•• 
Usuario
ßß 
usuario
ßß 
=
ßß  !
await
ßß" '
_context
ßß( 0
.
ßß0 1
Usuarios
ßß1 9
.
®® !
FirstOrDefaultAsync
®® '
(
®®' (
x
®®( )
=>
®®* ,
x
®®- .
.
®®. /
Id
®®/ 1
==
®®2 4
	usuarioId
®®5 >
)
®®> ?
;
®®? @
return
™™ 
Ok
™™ 
(
™™ 
usuario
™™ !
)
™™! "
;
™™" #
}
´´ 
catch
¨¨ 
(
¨¨ 
System
¨¨ 
.
¨¨ 
	Exception
¨¨ #
ex
¨¨$ &
)
¨¨& '
{
≠≠ 
return
ÆÆ 

BadRequest
ÆÆ !
(
ÆÆ! "
ex
ÆÆ" $
.
ÆÆ$ %
Message
ÆÆ% ,
)
ÆÆ, -
;
ÆÆ- .
}
ØØ 
}
∞∞ 	
[
≤≤ 	
HttpGet
≤≤	 
(
≤≤ 
$str
≤≤ %
)
≤≤% &
]
≤≤& '
public
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
IActionResult
≥≥ '
>
≥≥' (

GetUsuario
≥≥) 3
(
≥≥3 4
string
≥≥4 :
login
≥≥; @
)
≥≥@ A
{
¥¥ 	
try
µµ 
{
∂∂ 
Usuario
∏∏ 
usuario
∏∏ 
=
∏∏  !
await
∏∏" '
_context
∏∏( 0
.
∏∏0 1
Usuarios
∏∏1 9
.
ππ !
FirstOrDefaultAsync
ππ '
(
ππ' (
x
ππ( )
=>
ππ* ,
x
ππ- .
.
ππ. /
Username
ππ/ 7
.
ππ7 8
ToLower
ππ8 ?
(
ππ? @
)
ππ@ A
==
ππB D
login
ππE J
.
ππJ K
ToLower
ππK R
(
ππR S
)
ππS T
)
ππT U
;
ππU V
return
ªª 
Ok
ªª 
(
ªª 
usuario
ªª !
)
ªª! "
;
ªª" #
}
ºº 
catch
ΩΩ 
(
ΩΩ 
System
ΩΩ 
.
ΩΩ 
	Exception
ΩΩ #
ex
ΩΩ$ &
)
ΩΩ& '
{
ææ 
return
øø 

BadRequest
øø !
(
øø! "
ex
øø" $
.
øø$ %
Message
øø% ,
)
øø, -
;
øø- .
}
¿¿ 
}
¡¡ 	
[
≈≈ 	
HttpPut
≈≈	 
(
≈≈ 
$str
≈≈ '
)
≈≈' (
]
≈≈( )
public
∆∆ 
async
∆∆ 
Task
∆∆ 
<
∆∆ 
IActionResult
∆∆ '
>
∆∆' ("
AtualizarLocalizacao
∆∆) =
(
∆∆= >
Usuario
∆∆> E
u
∆∆F G
)
∆∆G H
{
«« 	
try
»» 
{
…… 
Usuario
   
usuario
   
=
    !
await
  " '
_context
  ( 0
.
  0 1
Usuarios
  1 9
.
ÀÀ !
FirstOrDefaultAsync
ÀÀ '
(
ÀÀ' (
x
ÀÀ( )
=>
ÀÀ* ,
x
ÀÀ- .
.
ÀÀ. /
Id
ÀÀ/ 1
==
ÀÀ2 4
u
ÀÀ5 6
.
ÀÀ6 7
Id
ÀÀ7 9
)
ÀÀ9 :
;
ÀÀ: ;
usuario
ÕÕ 
.
ÕÕ 
Latitude
ÕÕ  
=
ÕÕ! "
u
ÕÕ# $
.
ÕÕ$ %
Latitude
ÕÕ% -
;
ÕÕ- .
usuario
ŒŒ 
.
ŒŒ 
	Longitude
ŒŒ !
=
ŒŒ" #
u
ŒŒ$ %
.
ŒŒ% &
	Longitude
ŒŒ& /
;
ŒŒ/ 0
var
–– 
attach
–– 
=
–– 
_context
–– %
.
––% &
Attach
––& ,
(
––, -
usuario
––- 4
)
––4 5
;
––5 6
attach
—— 
.
—— 
Property
—— 
(
——  
x
——  !
=>
——" $
x
——% &
.
——& '
Id
——' )
)
——) *
.
——* +

IsModified
——+ 5
=
——6 7
false
——8 =
;
——= >
attach
““ 
.
““ 
Property
““ 
(
““  
x
““  !
=>
““" $
x
““% &
.
““& '
Latitude
““' /
)
““/ 0
.
““0 1

IsModified
““1 ;
=
““< =
true
““> B
;
““B C
attach
”” 
.
”” 
Property
”” 
(
””  
x
””  !
=>
””" $
x
””% &
.
””& '
	Longitude
””' 0
)
””0 1
.
””1 2

IsModified
””2 <
=
””= >
true
””? C
;
””C D
int
’’ 
linhasAfetadas
’’ "
=
’’# $
await
’’% *
_context
’’+ 3
.
’’3 4
SaveChangesAsync
’’4 D
(
’’D E
)
’’E F
;
’’F G
return
÷÷ 
Ok
÷÷ 
(
÷÷ 
linhasAfetadas
÷÷ (
)
÷÷( )
;
÷÷) *
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
System
ÿÿ 
.
ÿÿ 
	Exception
ÿÿ #
ex
ÿÿ$ &
)
ÿÿ& '
{
ŸŸ 
return
⁄⁄ 

BadRequest
⁄⁄ !
(
⁄⁄! "
ex
⁄⁄" $
.
⁄⁄$ %
Message
⁄⁄% ,
)
⁄⁄, -
;
⁄⁄- .
}
€€ 
}
‹‹ 	
[
ﬂﬂ 	
HttpPut
ﬂﬂ	 
(
ﬂﬂ 
$str
ﬂﬂ !
)
ﬂﬂ! "
]
ﬂﬂ" #
public
‡‡ 
async
‡‡ 
Task
‡‡ 
<
‡‡ 
IActionResult
‡‡ '
>
‡‡' (
AtualizarEmail
‡‡) 7
(
‡‡7 8
Usuario
‡‡8 ?
u
‡‡@ A
)
‡‡A B
{
·· 	
try
‚‚ 
{
„„ 
Usuario
‰‰ 
usuario
‰‰ 
=
‰‰  !
await
‰‰" '
_context
‰‰( 0
.
‰‰0 1
Usuarios
‰‰1 9
.
ÂÂ !
FirstOrDefaultAsync
ÂÂ '
(
ÂÂ' (
x
ÂÂ( )
=>
ÂÂ* ,
x
ÂÂ- .
.
ÂÂ. /
Id
ÂÂ/ 1
==
ÂÂ2 4
u
ÂÂ5 6
.
ÂÂ6 7
Id
ÂÂ7 9
)
ÂÂ9 :
;
ÂÂ: ;
usuario
ÁÁ 
.
ÁÁ 
Email
ÁÁ 
=
ÁÁ 
u
ÁÁ  !
.
ÁÁ! "
Email
ÁÁ" '
;
ÁÁ' (
var
ÈÈ 
attach
ÈÈ 
=
ÈÈ 
_context
ÈÈ %
.
ÈÈ% &
Attach
ÈÈ& ,
(
ÈÈ, -
usuario
ÈÈ- 4
)
ÈÈ4 5
;
ÈÈ5 6
attach
ÍÍ 
.
ÍÍ 
Property
ÍÍ 
(
ÍÍ  
x
ÍÍ  !
=>
ÍÍ" $
x
ÍÍ% &
.
ÍÍ& '
Id
ÍÍ' )
)
ÍÍ) *
.
ÍÍ* +

IsModified
ÍÍ+ 5
=
ÍÍ6 7
false
ÍÍ8 =
;
ÍÍ= >
attach
ÎÎ 
.
ÎÎ 
Property
ÎÎ 
(
ÎÎ  
x
ÎÎ  !
=>
ÎÎ" $
x
ÎÎ% &
.
ÎÎ& '
Email
ÎÎ' ,
)
ÎÎ, -
.
ÎÎ- .

IsModified
ÎÎ. 8
=
ÎÎ9 :
true
ÎÎ; ?
;
ÎÎ? @
int
ÌÌ 
linhasAfetadas
ÌÌ "
=
ÌÌ# $
await
ÌÌ% *
_context
ÌÌ+ 3
.
ÌÌ3 4
SaveChangesAsync
ÌÌ4 D
(
ÌÌD E
)
ÌÌE F
;
ÌÌF G
return
ÓÓ 
Ok
ÓÓ 
(
ÓÓ 
linhasAfetadas
ÓÓ (
)
ÓÓ( )
;
ÓÓ) *
}
ÔÔ 
catch
 
(
 
System
 
.
 
	Exception
 #
ex
$ &
)
& '
{
ÒÒ 
return
ÚÚ 

BadRequest
ÚÚ !
(
ÚÚ! "
ex
ÚÚ" $
.
ÚÚ$ %
Message
ÚÚ% ,
)
ÚÚ, -
;
ÚÚ- .
}
ÛÛ 
}
ÙÙ 	
[
˜˜ 	
HttpPut
˜˜	 
(
˜˜ 
$str
˜˜  
)
˜˜  !
]
˜˜! "
public
¯¯ 
async
¯¯ 
Task
¯¯ 
<
¯¯ 
IActionResult
¯¯ '
>
¯¯' (
AtualizarFoto
¯¯) 6
(
¯¯6 7
Usuario
¯¯7 >
u
¯¯? @
)
¯¯@ A
{
˘˘ 	
try
˙˙ 
{
˚˚ 
Usuario
¸¸ 
usuario
¸¸ 
=
¸¸  !
await
¸¸" '
_context
¸¸( 0
.
¸¸0 1
Usuarios
¸¸1 9
.
˝˝ !
FirstOrDefaultAsync
˝˝ '
(
˝˝' (
x
˝˝( )
=>
˝˝* ,
x
˝˝- .
.
˝˝. /
Id
˝˝/ 1
==
˝˝2 4
u
˝˝5 6
.
˝˝6 7
Id
˝˝7 9
)
˝˝9 :
;
˝˝: ;
usuario
ˇˇ 
.
ˇˇ 
Foto
ˇˇ 
=
ˇˇ 
u
ˇˇ  
.
ˇˇ  !
Foto
ˇˇ! %
;
ˇˇ% &
var
ÅÅ 
attach
ÅÅ 
=
ÅÅ 
_context
ÅÅ %
.
ÅÅ% &
Attach
ÅÅ& ,
(
ÅÅ, -
usuario
ÅÅ- 4
)
ÅÅ4 5
;
ÅÅ5 6
attach
ÇÇ 
.
ÇÇ 
Property
ÇÇ 
(
ÇÇ  
x
ÇÇ  !
=>
ÇÇ" $
x
ÇÇ% &
.
ÇÇ& '
Id
ÇÇ' )
)
ÇÇ) *
.
ÇÇ* +

IsModified
ÇÇ+ 5
=
ÇÇ6 7
false
ÇÇ8 =
;
ÇÇ= >
attach
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
Foto
ÉÉ' +
)
ÉÉ+ ,
.
ÉÉ, -

IsModified
ÉÉ- 7
=
ÉÉ8 9
true
ÉÉ: >
;
ÉÉ> ?
int
ÖÖ 
linhasAfetadas
ÖÖ "
=
ÖÖ# $
await
ÖÖ% *
_context
ÖÖ+ 3
.
ÖÖ3 4
SaveChangesAsync
ÖÖ4 D
(
ÖÖD E
)
ÖÖE F
;
ÖÖF G
return
ÜÜ 
Ok
ÜÜ 
(
ÜÜ 
linhasAfetadas
ÜÜ (
)
ÜÜ( )
;
ÜÜ) *
}
áá 
catch
àà 
(
àà 
System
àà 
.
àà 
	Exception
àà #
ex
àà$ &
)
àà& '
{
ââ 
return
ää 

BadRequest
ää !
(
ää! "
ex
ää" $
.
ää$ %
Message
ää% ,
)
ää, -
;
ää- .
}
ãã 
}
åå 	
}
úú 
}ùù ◊
>D:\Daniel\PMII\RpgApi\Controllers\WeatherForecastController.cs
	namespace 	
RpgApi
 
. 
Controllers 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class %
WeatherForecastController &
:' (
ControllerBase) 7
{ 
private		 
static		 
readonly		 
string		 "
[		" #
]		# $
	Summaries		% .
=		/ 0
new		1 4
[		4 5
]		5 6
{

 
$str 
, 
$str 
, 
$str '
,' (
$str) /
,/ 0
$str1 7
,7 8
$str9 ?
,? @
$strA H
,H I
$strJ O
,O P
$strQ ]
,] ^
$str_ j
} 
; 
private 
readonly 
ILogger 
< %
WeatherForecastController 6
>6 7
_logger8 ?
;? @
public 
%
WeatherForecastController $
($ %
ILogger% ,
<, -%
WeatherForecastController- F
>F G
loggerH N
)N O
{ 
_logger 
= 
logger 
; 
} 
[ 
HttpGet 
( 
Name 
= 
$str (
)( )
]) *
public 

IEnumerable 
< 
WeatherForecast &
>& '
Get( +
(+ ,
), -
{ 
return 

Enumerable 
. 
Range 
(  
$num  !
,! "
$num# $
)$ %
.% &
Select& ,
(, -
index- 2
=>3 5
new6 9
WeatherForecast: I
{ 	
Date 
= 
DateTime 
. 
Now 
.  
AddDays  '
(' (
index( -
)- .
,. /
TemperatureC 
= 
Random !
.! "
Shared" (
.( )
Next) -
(- .
-. /
$num/ 1
,1 2
$num3 5
)5 6
,6 7
Summary 
= 
	Summaries 
[  
Random  &
.& '
Shared' -
.- .
Next. 2
(2 3
	Summaries3 <
.< =
Length= C
)C D
]D E
} 	
)	 

. 	
ToArray	 
( 
) 
; 
} 
}   §z
)D:\Daniel\PMII\RpgApi\Data\DataContext.cs
	namespace 	
RpgApi
 
. 
Data 
{ 
public 

class 
DataContext 
: 
	DbContext (
{		 
public

 
DataContext

 
(

 
DbContextOptions

 +
<

+ ,
DataContext

, 7
>

7 8
options

9 @
)

@ A
:

B C
base

D H
(

H I
options

I P
)

P Q
{ 	
} 	
public 
DbSet 
< 

Personagem 
>  
Personagens! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
Arma 
> 
Armas  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
Usuario 
> 
Usuarios &
{& '
get' *
;* +
set, /
;/ 0
}0 1
public 
DbSet 
< 

Habilidade 
>  
Habilidades! ,
{, -
get- 0
;0 1
set2 5
;5 6
}6 7
public 
DbSet 
<  
PersonagemHabilidade )
>) *!
PersonagemHabilidades+ @
{@ A
getA D
;D E
setF I
;I J
}J K
public 
DbSet 
< 
Disputa 
> 
Disputas &
{& '
get' *
;* +
set, /
;/ 0
}0 1
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  

Personagem  *
>* +
(+ ,
), -
.- .
HasData. 5
( 
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 9
,9 :

PontosVida; E
=F G
$numH K
,K L
ForcaM R
=S T
$numU W
,W X
DefesaY _
=` a
$numb d
,d e
Inteligenciaf r
=s t
$numu w
,w x
Classey 
=
Ä Å

ClasseEnum
Ç å
.
å ç
	Cavaleiro
ç ñ
}
ó ò
,
ò ô
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 7
,7 8

PontosVida9 C
=D E
$numF I
,I J
ForcaK P
=Q R
$numS U
,U V
DefesaW ]
=^ _
$num` b
,b c
Inteligenciad p
=q r
$nums u
,u v
Classew }
=~ 

ClasseEnum
Ä ä
.
ä ã
	Cavaleiro
ã î
}
ï ñ
,
ñ ó
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 =
,= >

PontosVida? I
=J K
$numL O
,O P
ForcaQ V
=W X
$numY [
,[ \
Defesa] c
=d e
$numf h
,h i
Inteligenciaj v
=w x
$numy {
,{ |
Classe	} É
=
Ñ Ö

ClasseEnum
Ü ê
.
ê ë
Clerigo
ë ò
}
ô ö
,
ö õ
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 ;
,; <

PontosVida= G
=H I
$numJ M
,M N
ForcaO T
=U V
$numW Y
,Y Z
Defesa[ a
=b c
$numd f
,f g
Inteligenciah t
=u v
$numw y
,y z
Classe	{ Å
=
Ç É

ClasseEnum
Ñ é
.
é è
Mago
è ì
}
î ï
,
ï ñ
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 :
,: ;

PontosVida< F
=G H
$numI L
,L M
ForcaN S
=T U
$numV X
,X Y
DefesaZ `
=a b
$numc e
,e f
Inteligenciag s
=t u
$numv x
,x y
Classe	z Ä
=
Å Ç

ClasseEnum
É ç
.
ç é
	Cavaleiro
é ó
}
ò ô
,
ô ö
new 

Personagem 
( 
)  
{! "
Id# %
=& '
$num( )
,) *
Nome+ /
=0 1
$str2 <
,< =

PontosVida> H
=I J
$numK N
,N O
ForcaP U
=V W
$numX Z
,Z [
Defesa\ b
=c d
$nume g
,g h
Inteligenciai u
=v w
$numx z
,z {
Classe	| Ç
=
É Ñ

ClasseEnum
Ö è
.
è ê
Clerigo
ê ó
}
ò ô
,
ô ö
new   

Personagem   
(   
)    
{  ! "
Id  # %
=  & '
$num  ( )
,  ) *
Nome  + /
=  0 1
$str  2 <
,  < =

PontosVida  > H
=  I J
$num  K N
,  N O
Forca  P U
=  V W
$num  X Z
,  Z [
Defesa  \ b
=  c d
$num  e g
,  g h
Inteligencia  i u
=  v w
$num  x z
,  z {
Classe	  | Ç
=
  É Ñ

ClasseEnum
  Ö è
.
  è ê
Mago
  ê î
}
  ï ñ
)!! 
;!! 
modelBuilder## 
.## 
Entity## 
<##  
Arma##  $
>##$ %
(##% &
)##& '
.##' (
HasData##( /
($$ 
new%% 
Arma%% 
(%% 
)%% 
{%% 
Id%% 
=%%  !
$num%%" #
,%%# $
Nome%%% )
=%%* +
$str%%, ;
,%%; <
Dano%%= A
=%%B C
$num%%D F
,%%F G
PersonagemId%%H T
=%%U V
$num%%W X
}%%X Y
,%%Y Z
new&& 
Arma&& 
(&& 
)&& 
{&& 
Id&& 
=&&  !
$num&&" #
,&&# $
Nome&&% )
=&&* +
$str&&, 4
,&&4 5
Dano&&6 :
=&&; <
$num&&= ?
,&&? @
PersonagemId&&A M
=&&N O
$num&&P Q
}&&R S
,&&S T
new'' 
Arma'' 
('' 
)'' 
{'' 
Id'' 
=''  !
$num''" #
,''# $
Nome''% )
=''* +
$str'', 5
,''5 6
Dano''7 ;
=''< =
$num''> @
,''@ A
PersonagemId''B N
=''O P
$num''Q R
}''S T
,''T U
new(( 
Arma(( 
((( 
)(( 
{(( 
Id(( 
=((  !
$num((" #
,((# $
Nome((% )
=((* +
$str((, 3
,((3 4
Dano((5 9
=((: ;
$num((< >
,((> ?
PersonagemId((@ L
=((M N
$num((O P
}((Q R
,((R S
new)) 
Arma)) 
()) 
))) 
{)) 
Id)) 
=))  !
$num))" #
,))# $
Nome))% )
=))* +
$str)), 5
,))5 6
Dano))7 ;
=))< =
$num))> @
,))@ A
PersonagemId))B N
=))O P
$num))Q R
}))S T
,))T U
new** 
Arma** 
(** 
)** 
{** 
Id** 
=**  !
$num**" #
,**# $
Nome**% )
=*** +
$str**, 3
,**3 4
Dano**5 9
=**: ;
$num**< >
,**> ?
PersonagemId**@ L
=**M N
$num**O P
}**Q R
,**R S
new++ 
Arma++ 
(++ 
)++ 
{++ 
Id++ 
=++  !
$num++" #
,++# $
Nome++% )
=++* +
$str++, 4
,++4 5
Dano++6 :
=++; <
$num++= ?
,++? @
PersonagemId++A M
=++N O
$num++P Q
}++R S
),, 
;,, 
modelBuilder.. 
... 
Entity..  
<..  ! 
PersonagemHabilidade..! 5
>..5 6
(..6 7
)..7 8
.// 
HasKey// 
(// 
ph// 
=>// 
new// !
{//" #
ph//# %
.//% &
PersonagemId//& 2
,//2 3
ph//4 6
.//6 7
HabilidadeId//7 C
}//D E
)//E F
;//F G
modelBuilder11 
.11 
Entity11 
<11  

Habilidade11  *
>11* +
(11+ ,
)11, -
.11- .
HasData11. 5
(22 
new33 

Habilidade33 
(33 
)33  
{33  !
Id33! #
=33# $
$num33$ %
,33% &
Nome33' +
=33+ ,
$str33, 7
,337 8
Dano339 =
=33= >
$num33> @
}33@ A
,33A B
new44 

Habilidade44 
(44 
)44  
{44  !
Id44! #
=44# $
$num44$ %
,44% &
Nome44' +
=44+ ,
$str44, 6
,446 7
Dano448 <
=44< =
$num44= ?
}44? @
,44@ A
new55 

Habilidade55 
(55 
)55  
{55  !
Id55! #
=55# $
$num55$ %
,55% &
Nome55' +
=55+ ,
$str55, 8
,558 9
Dano55: >
=55> ?
$num55? A
}55A B
)66 
;66 
modelBuilder88 
.88 
Entity88 
<88   
PersonagemHabilidade88  4
>884 5
(885 6
)886 7
.887 8
HasData888 ?
(99 
new::  
PersonagemHabilidade:: (
(::( )
)::) *
{::+ ,
PersonagemId::- 9
=::: ;
$num::< =
,::= >
HabilidadeId::? K
=::L M
$num::M N
}::O P
,::P Q
new;;  
PersonagemHabilidade;; (
(;;( )
);;) *
{;;+ ,
PersonagemId;;- 9
=;;: ;
$num;;< =
,;;= >
HabilidadeId;;? K
=;;L M
$num;;M N
};;O P
,;;P Q
new<<  
PersonagemHabilidade<< (
(<<( )
)<<) *
{<<+ ,
PersonagemId<<- 9
=<<: ;
$num<<< =
,<<= >
HabilidadeId<<? K
=<<L M
$num<<M N
}<<O P
,<<P Q
new==  
PersonagemHabilidade== (
(==( )
)==) *
{==+ ,
PersonagemId==- 9
===: ;
$num==< =
,=== >
HabilidadeId==? K
===L M
$num==M N
}==O P
,==P Q
new>>  
PersonagemHabilidade>> (
(>>( )
)>>) *
{>>+ ,
PersonagemId>>- 9
=>>: ;
$num>>< =
,>>= >
HabilidadeId>>? K
=>>L M
$num>>M N
}>>O P
,>>P Q
new??  
PersonagemHabilidade?? (
(??( )
)??) *
{??+ ,
PersonagemId??- 9
=??: ;
$num??< =
,??= >
HabilidadeId??? K
=??L M
$num??M N
}??O P
,??P Q
new@@  
PersonagemHabilidade@@ (
(@@( )
)@@) *
{@@+ ,
PersonagemId@@- 9
=@@: ;
$num@@< =
,@@= >
HabilidadeId@@? K
=@@L M
$num@@M N
}@@O P
,@@P Q
newAA  
PersonagemHabilidadeAA (
(AA( )
)AA) *
{AA+ ,
PersonagemIdAA- 9
=AA: ;
$numAA< =
,AA= >
HabilidadeIdAA? K
=AAL M
$numAAM N
}AAO P
,AAP Q
newBB  
PersonagemHabilidadeBB (
(BB( )
)BB) *
{BB+ ,
PersonagemIdBB- 9
=BB: ;
$numBB< =
,BB= >
HabilidadeIdBB? K
=BBL M
$numBBM N
}BBO P
)CC 
;CC 
UsuarioFF 
userFF 
=FF 
newFF 
UsuarioFF &
(FF& '
)FF' (
;FF( )
CriptografiaGG 
.GG 
CriarPasswordHashGG *
(GG* +
$strGG+ 3
,GG3 4
outGG5 8
byteGG9 =
[GG= >
]GG> ?
hashGG@ D
,GGD E
outGGF I
byteGGJ N
[GGN O
]GGO P
saltGGP T
)GGT U
;GGU V
userHH 
.HH 
IdHH 
=HH 
$numHH 
;HH 
userII 
.II 
UsernameII 
=II 
$strII *
;II* +
userJJ 
.JJ 
PasswordStringJJ 
=JJ  !
stringJJ" (
.JJ( )
EmptyJJ) .
;JJ. /
userKK 
.KK 
PasswordHashKK 
=KK 
hashKK  $
;KK$ %
userLL 
.LL 
PasswordSaltLL 
=LL 
saltLL  $
;LL$ %
userMM 
.MM 
PerfilMM 
=MM 
$strMM !
;MM! "
userNN 
.NN 
EmailNN 
=NN 
$strNN -
;NN- .
userOO 
.OO 
LatitudeOO 
=OO 
-OO 
$numOO '
;OO' (
userPP 
.PP 
	LongitudePP 
=PP 
-PP 
$numPP '
;PP' (
modelBuilderRR 
.RR 
EntityRR 
<RR  
UsuarioRR  '
>RR' (
(RR( )
)RR) *
.RR* +
HasDataRR+ 2
(RR2 3
userRR3 7
)RR7 8
;RR8 9
modelBuilderVV 
.VV 
EntityVV 
<VV  
UsuarioVV  '
>VV' (
(VV( )
)VV) *
.VV* +
PropertyVV+ 3
(VV3 4
uVV4 5
=>VV6 8
uVV9 :
.VV: ;
PerfilVV; A
)VVA B
.VVB C
HasDefaultValueVVC R
(VVR S
$strVVS \
)VV\ ]
;VV] ^
}XX 	
}cc 
}dd ﬁ0
@D:\Daniel\PMII\RpgApi\Migrations\20220919042135_InitialCreate.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nome 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
,V W

PontosVida 
=  
table! &
.& '
Column' -
<- .
int. 1
>1 2
(2 3
type3 7
:7 8
$str9 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
Forca 
= 
table !
.! "
Column" (
<( )
int) ,
>, -
(- .
type. 2
:2 3
$str4 9
,9 :
nullable; C
:C D
falseE J
)J K
,K L
Defesa 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
,L M
Inteligencia  
=! "
table# (
.( )
Column) /
</ 0
int0 3
>3 4
(4 5
type5 9
:9 :
$str; @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Classe 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 

InsertData '
(' (
table 
: 
$str $
,$ %
columns 
: 
new 
[ 
] 
{  
$str! %
,% &
$str' /
,/ 0
$str1 9
,9 :
$str; B
,B C
$strD R
,R S
$strT Z
,Z [
$str\ h
}i j
,j k
values   
:   
new   
object   "
[  " #
,  # $
]  $ %
{!! 
{"" 
$num"" 
,"" 
$num"" 
,"" 
$num"" 
,"" 
$num""  "
,""" #
$num""$ &
,""& '
$str""( /
,""/ 0
$num""1 4
}""5 6
,""6 7
{## 
$num## 
,## 
$num## 
,## 
$num## 
,## 
$num##  "
,##" #
$num##$ &
,##& '
$str##( -
,##- .
$num##/ 2
}##3 4
,##4 5
{$$ 
$num$$ 
,$$ 
$num$$ 
,$$ 
$num$$ 
,$$ 
$num$$  "
,$$" #
$num$$$ &
,$$& '
$str$$( 3
,$$3 4
$num$$5 8
}$$9 :
,$$: ;
{%% 
$num%% 
,%% 
$num%% 
,%% 
$num%% 
,%% 
$num%%  "
,%%" #
$num%%$ &
,%%& '
$str%%( 1
,%%1 2
$num%%3 6
}%%7 8
,%%8 9
{&& 
$num&& 
,&& 
$num&& 
,&& 
$num&& 
,&& 
$num&&  "
,&&" #
$num&&$ &
,&&& '
$str&&( 0
,&&0 1
$num&&2 5
}&&6 7
,&&7 8
{'' 
$num'' 
,'' 
$num'' 
,'' 
$num'' 
,'' 
$num''  "
,''" #
$num''$ &
,''& '
$str''( 2
,''2 3
$num''4 7
}''8 9
,''9 :
{(( 
$num(( 
,(( 
$num(( 
,(( 
$num(( 
,(( 
$num((  "
,((" #
$num(($ &
,((& '
$str((( 2
,((2 3
$num((4 7
}((8 9
})) 
))) 
;)) 
}** 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
	DropTable.. &
(..& '
name// 
:// 
$str// #
)//# $
;//$ %
}00 	
}11 
}22 ı
?D:\Daniel\PMII\RpgApi\Migrations\20220919042333_MigracaoArma.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class 
MigracaoArma %
:& '
	Migration( 1
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nome 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
,V W
Dano 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 8
,8 9
nullable: B
:B C
falseD I
)I J
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
migrationBuilder 
. 

InsertData '
(' (
table 
: 
$str 
, 
columns 
: 
new 
[ 
] 
{  
$str! %
,% &
$str' -
,- .
$str/ 5
}6 7
,7 8
values 
: 
new 
object "
[" #
,# $
]$ %
{ 
{ 
$num 
, 
$num 
, 
$str ,
}- .
,. /
{ 
$num 
, 
$num 
, 
$str %
}& '
,' (
{   
$num   
,   
$num   
,   
$str   &
}  ' (
,  ( )
{!! 
$num!! 
,!! 
$num!! 
,!! 
$str!! $
}!!% &
,!!& '
{"" 
$num"" 
,"" 
$num"" 
,"" 
$str"" &
}""' (
,""( )
{## 
$num## 
,## 
$num## 
,## 
$str## $
}##% &
,##& '
{$$ 
$num$$ 
,$$ 
$num$$ 
,$$ 
$str$$ %
}$$& '
}%% 
)%% 
;%% 
}&& 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 
	DropTable** &
(**& '
name++ 
:++ 
$str++ 
)++ 
;++ 
},, 	
}-- 
}.. ëw
BD:\Daniel\PMII\RpgApi\Migrations\20220920045034_MigracaoUsuario.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class 
MigracaoUsuario (
:) *
	Migration+ 4
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
byte' +
[+ ,
], -
>- .
(. /
name 
: 
$str &
,& '
table 
: 
$str $
,$ %
type 
: 
$str &
,& '
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str !
,! "
table 
: 
$str $
,$ %
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Username 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
PasswordHash  
=! "
table# (
.( )
Column) /
</ 0
byte0 4
[4 5
]5 6
>6 7
(7 8
type8 <
:< =
$str> N
,N O
nullableP X
:X Y
trueZ ^
)^ _
,_ `
PasswordSalt    
=  ! "
table  # (
.  ( )
Column  ) /
<  / 0
byte  0 4
[  4 5
]  5 6
>  6 7
(  7 8
type  8 <
:  < =
$str  > N
,  N O
nullable  P X
:  X Y
true  Z ^
)  ^ _
,  _ `
Foto!! 
=!! 
table!!  
.!!  !
Column!!! '
<!!' (
byte!!( ,
[!!, -
]!!- .
>!!. /
(!!/ 0
type!!0 4
:!!4 5
$str!!6 F
,!!F G
nullable!!H P
:!!P Q
true!!R V
)!!V W
,!!W X
Latitude"" 
="" 
table"" $
.""$ %
Column""% +
<""+ ,
double"", 2
>""2 3
(""3 4
type""4 8
:""8 9
$str"": A
,""A B
nullable""C K
:""K L
true""M Q
)""Q R
,""R S
	Longitude## 
=## 
table##  %
.##% &
Column##& ,
<##, -
double##- 3
>##3 4
(##4 5
type##5 9
:##9 :
$str##; B
,##B C
nullable##D L
:##L M
true##N R
)##R S
,##S T

DataAcesso$$ 
=$$  
table$$! &
.$$& '
Column$$' -
<$$- .
DateTime$$. 6
>$$6 7
($$7 8
type$$8 <
:$$< =
$str$$> I
,$$I J
nullable$$K S
:$$S T
true$$U Y
)$$Y Z
,$$Z [
Perfil%% 
=%% 
table%% "
.%%" #
Column%%# )
<%%) *
string%%* 0
>%%0 1
(%%1 2
type%%2 6
:%%6 7
$str%%8 G
,%%G H
nullable%%I Q
:%%Q R
true%%S W
)%%W X
}&& 
,&& 
constraints'' 
:'' 
table'' "
=>''# %
{(( 
table)) 
.)) 

PrimaryKey)) $
())$ %
$str))% 2
,))2 3
x))4 5
=>))6 8
x))9 :
.)): ;
Id)); =
)))= >
;))> ?
}** 
)** 
;** 
migrationBuilder,, 
.,, 

InsertData,, '
(,,' (
table-- 
:-- 
$str-- !
,--! "
columns.. 
:.. 
new.. 
[.. 
].. 
{..  
$str..! %
,..% &
$str..' 3
,..3 4
$str..5 ;
,..; <
$str..= G
,..G H
$str..I T
,..T U
$str..V d
,..d e
$str..f t
,..t u
$str..v ~
,..~ 
$str
..Ä ä
}
..ã å
,
..å ç
values// 
:// 
new// 
object// "
[//" #
]//# $
{//% &
$num//' (
,//( )
null//* .
,//. /
null//0 4
,//4 5
null//6 :
,//: ;
null//< @
,//@ A
new//B E
byte//F J
[//J K
]//K L
{//M N
$num//O R
,//R S
$num//T W
,//W X
$num//Y [
,//[ \
$num//] `
,//` a
$num//b e
,//e f
$num//g j
,//j k
$num//l n
,//n o
$num//p s
,//s t
$num//u w
,//w x
$num//y {
,//{ |
$num	//} Ä
,
//Ä Å
$num
//Ç Ö
,
//Ö Ü
$num
//á ä
,
//ä ã
$num
//å è
,
//è ê
$num
//ë ì
,
//ì î
$num
//ï ò
,
//ò ô
$num
//ö ù
,
//ù û
$num
//ü ¢
,
//¢ £
$num
//§ ß
,
//ß ®
$num
//© ´
,
//´ ¨
$num
//≠ ∞
,
//∞ ±
$num
//≤ ¥
,
//¥ µ
$num
//∂ π
,
//π ∫
$num
//ª æ
,
//æ ø
$num
//¿ √
,
//√ ƒ
$num
//≈ «
,
//« »
$num
//… À
,
//À Ã
$num
//Õ –
,
//– —
$num
//“ ’
,
//’ ÷
$num
//◊ ⁄
,
//⁄ €
$num
//‹ ﬂ
,
//ﬂ ‡
$num
//· ‰
,
//‰ Â
$num
//Ê È
,
//È Í
$num
//Î Ó
,
//Ó Ô
$num
// Ú
,
//Ú Û
$num
//Ù ˜
,
//˜ ¯
$num
//˘ ˚
,
//˚ ¸
$num
//˝ Ä
,
//Ä Å
$num
//Ç Ñ
,
//Ñ Ö
$num
//Ü à
,
//à â
$num
//ä ç
,
//ç é
$num
//è ë
,
//ë í
$num
//ì î
,
//î ï
$num
//ñ ô
,
//ô ö
$num
//õ ù
,
//ù û
$num
//ü °
,
//° ¢
$num
//£ ¶
,
//¶ ß
$num
//® ©
,
//© ™
$num
//´ Æ
,
//Æ Ø
$num
//∞ ≥
,
//≥ ¥
$num
//µ ∑
,
//∑ ∏
$num
//π ∫
,
//∫ ª
$num
//º ø
,
//ø ¿
$num
//¡ ƒ
,
//ƒ ≈
$num
//∆ …
,
//…  
$num
//À Œ
,
//Œ œ
$num
//– ”
,
//” ‘
$num
//’ ÿ
,
//ÿ Ÿ
$num
//⁄ ‹
,
//‹ ›
$num
//ﬁ ·
,
//· ‚
$num
//„ Ê
,
//Ê Á
$num
//Ë Î
,
//Î Ï
$num
//Ì Ô
,
//Ô 
$num
//Ò Ù
}
//ı ˆ
,
//ˆ ˜
new
//¯ ˚
byte
//¸ Ä
[
//Ä Å
]
//Å Ç
{
//É Ñ
$num
//Ö à
,
//à â
$num
//ä ç
,
//ç é
$num
//è ê
,
//ê ë
$num
//í ï
,
//ï ñ
$num
//ó ô
,
//ô ö
$num
//õ û
,
//û ü
$num
//† ¢
,
//¢ £
$num
//§ ß
,
//ß ®
$num
//© ´
,
//´ ¨
$num
//≠ Ø
,
//Ø ∞
$num
//± ¥
,
//¥ µ
$num
//∂ π
,
//π ∫
$num
//ª æ
,
//æ ø
$num
//¿ ¬
,
//¬ √
$num
//ƒ ∆
,
//∆ «
$num
//»  
,
//  À
$num
//Ã Œ
,
//Œ œ
$num
//– “
,
//“ ”
$num
//‘ ◊
,
//◊ ÿ
$num
//Ÿ ⁄
,
//⁄ €
$num
//‹ ›
,
//› ﬁ
$num
//ﬂ ‚
,
//‚ „
$num
//‰ Ê
,
//Ê Á
$num
//Ë Í
,
//Í Î
$num
//Ï Ô
,
//Ô 
$num
//Ò Ù
,
//Ù ı
$num
//ˆ ¯
,
//¯ ˘
$num
//˙ ˝
,
//˝ ˛
$num
//ˇ Ç
,
//Ç É
$num
//Ñ á
,
//á à
$num
//â ã
,
//ã å
$num
//ç ê
,
//ê ë
$num
//í ï
,
//ï ñ
$num
//ó ö
,
//ö õ
$num
//ú û
,
//û ü
$num
//† ¢
,
//¢ £
$num
//§ ß
,
//ß ®
$num
//© ´
,
//´ ¨
$num
//≠ ∞
,
//∞ ±
$num
//≤ ¥
,
//¥ µ
$num
//∂ ∏
,
//∏ π
$num
//∫ Ω
,
//Ω æ
$num
//ø ¬
,
//¬ √
$num
//ƒ ∆
,
//∆ «
$num
//» À
,
//À Ã
$num
//Õ –
,
//– —
$num
//“ ‘
,
//‘ ’
$num
//÷ Ÿ
,
//Ÿ ⁄
$num
//€ ›
,
//› ﬁ
$num
//ﬂ ‚
,
//‚ „
$num
//‰ Á
,
//Á Ë
$num
//È Ï
,
//Ï Ì
$num
//Ó 
,
// Ò
$num
//Ú ı
,
//ı ˆ
$num
//˜ ˙
,
//˙ ˚
$num
//¸ ˇ
,
//ˇ Ä
$num
//Å Ñ
,
//Ñ Ö
$num
//Ü â
,
//â ä
$num
//ã å
,
//å ç
$num
//é ê
,
//ê ë
$num
//í ï
,
//ï ñ
$num
//ó ô
,
//ô ö
$num
//õ ù
,
//ù û
$num
//ü ¢
,
//¢ £
$num
//§ ¶
,
//¶ ß
$num
//® ´
,
//´ ¨
$num
//≠ Ø
,
//Ø ∞
$num
//± ¥
,
//¥ µ
$num
//∂ π
,
//π ∫
$num
//ª Ω
,
//Ω æ
$num
//ø ¬
,
//¬ √
$num
//ƒ ∆
,
//∆ «
$num
//» À
,
//À Ã
$num
//Õ –
,
//– —
$num
//“ ’
,
//’ ÷
$num
//◊ Ÿ
,
//Ÿ ⁄
$num
//€ ﬁ
,
//ﬁ ﬂ
$num
//‡ „
,
//„ ‰
$num
//Â Á
,
//Á Ë
$num
//È Î
,
//Î Ï
$num
//Ì 
,
// Ò
$num
//Ú ı
,
//ı ˆ
$num
//˜ ˙
,
//˙ ˚
$num
//¸ ˇ
,
//ˇ Ä
$num
//Å Ñ
,
//Ñ Ö
$num
//Ü à
,
//à â
$num
//ä ç
,
//ç é
$num
//è ë
,
//ë í
$num
//ì î
,
//î ï
$num
//ñ ô
,
//ô ö
$num
//õ û
,
//û ü
$num
//† ¢
,
//¢ £
$num
//§ ß
,
//ß ®
$num
//© ´
,
//´ ¨
$num
//≠ ∞
,
//∞ ±
$num
//≤ µ
,
//µ ∂
$num
//∑ ∫
,
//∫ ª
$num
//º ø
,
//ø ¿
$num
//¡ ƒ
,
//ƒ ≈
$num
//∆ …
,
//…  
$num
//À Ã
,
//Ã Õ
$num
//Œ –
,
//– —
$num
//“ ‘
,
//‘ ’
$num
//÷ ÿ
,
//ÿ Ÿ
$num
//⁄ ‹
,
//‹ ›
$num
//ﬁ ·
,
//· ‚
$num
//„ Ê
,
//Ê Á
$num
//Ë Î
,
//Î Ï
$num
//Ì 
,
// Ò
$num
//Ú ı
,
//ı ˆ
$num
//˜ ˙
,
//˙ ˚
$num
//¸ ˇ
,
//ˇ Ä
$num
//Å Ñ
,
//Ñ Ö
$num
//Ü â
,
//â ä
$num
//ã ç
,
//ç é
$num
//è ë
,
//ë í
$num
//ì ñ
,
//ñ ó
$num
//ò õ
,
//õ ú
$num
//ù †
,
//† °
$num
//¢ §
,
//§ •
$num
//¶ ©
,
//© ™
$num
//´ Æ
,
//Æ Ø
$num
//∞ ≥
,
//≥ ¥
$num
//µ ∑
,
//∑ ∏
$num
//π ∫
,
//∫ ª
$num
//º Ω
,
//Ω æ
$num
//ø ¡
,
//¡ ¬
$num
//√ ≈
}
//∆ «
,
//« »
$str
//… –
,
//– —
$str
//“ ‡
}
//· ‚
)
//‚ „
;
//„ ‰
migrationBuilder11 
.11 
CreateIndex11 (
(11( )
name22 
:22 
$str22 0
,220 1
table33 
:33 
$str33 $
,33$ %
column44 
:44 
$str44 #
)44# $
;44$ %
migrationBuilder66 
.66 
AddForeignKey66 *
(66* +
name77 
:77 
$str77 9
,779 :
table88 
:88 
$str88 $
,88$ %
column99 
:99 
$str99 #
,99# $
principalTable:: 
::: 
$str::  *
,::* +
principalColumn;; 
:;;  
$str;;! %
);;% &
;;;& '
}<< 	
	protected>> 
override>> 
void>> 
Down>>  $
(>>$ %
MigrationBuilder>>% 5
migrationBuilder>>6 F
)>>F G
{?? 	
migrationBuilder@@ 
.@@ 
DropForeignKey@@ +
(@@+ ,
nameAA 
:AA 
$strAA 9
,AA9 :
tableBB 
:BB 
$strBB $
)BB$ %
;BB% &
migrationBuilderDD 
.DD 
	DropTableDD &
(DD& '
nameEE 
:EE 
$strEE  
)EE  !
;EE! "
migrationBuilderGG 
.GG 
	DropIndexGG &
(GG& '
nameHH 
:HH 
$strHH 0
,HH0 1
tableII 
:II 
$strII $
)II$ %
;II% &
migrationBuilderKK 
.KK 

DropColumnKK '
(KK' (
nameLL 
:LL 
$strLL &
,LL& '
tableMM 
:MM 
$strMM $
)MM$ %
;MM% &
migrationBuilderOO 
.OO 

DropColumnOO '
(OO' (
namePP 
:PP 
$strPP !
,PP! "
tableQQ 
:QQ 
$strQQ $
)QQ$ %
;QQ% &
}RR 	
}SS 
}TT ª©
CD:\Daniel\PMII\RpgApi\Migrations\20220925162208_MigracaoUmParaUm.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class 
MigracaoUmParaUm )
:* +
	Migration, 5
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str $
,$ %
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str 
, 
	keyColumn 
: 
$str 
,  
keyValue 
: 
$num 
, 
column 
: 
$str &
,& '
value 
: 
$num 
) 
; 
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str 
, 
	keyColumn 
: 
$str 
,  
keyValue 
: 
$num 
, 
column 
: 
$str &
,& '
value 
: 
$num 
) 
; 
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" 
,"" 
	keyColumn## 
:## 
$str## 
,##  
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% &
,%%& '
value&& 
:&& 
$num&& 
)&& 
;&& 
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) 
,)) 
	keyColumn** 
:** 
$str** 
,**  
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, &
,,,& '
value-- 
:-- 
$num-- 
)-- 
;-- 
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 
,00 
	keyColumn11 
:11 
$str11 
,11  
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 &
,33& '
value44 
:44 
$num44 
)44 
;44 
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 
,77 
	keyColumn88 
:88 
$str88 
,88  
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: &
,::& '
value;; 
:;; 
$num;; 
);; 
;;; 
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> 
,>> 
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA &
,AA& '
valueBB 
:BB 
$numBB 
)BB 
;BB 
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE !
,EE! "
	keyColumnFF 
:FF 
$strFF 
,FF  
keyValueGG 
:GG 
$numGG 
,GG 
columnsHH 
:HH 
newHH 
[HH 
]HH 
{HH  
$strHH! /
,HH/ 0
$strHH1 ?
}HH@ A
,HHA B
valuesII 
:II 
newII 
objectII "
[II" #
]II# $
{II% &
newII' *
byteII+ /
[II/ 0
]II0 1
{II2 3
$numII4 7
,II7 8
$numII9 <
,II< =
$numII> @
,II@ A
$numIIB E
,IIE F
$numIIG J
,IIJ K
$numIIL O
,IIO P
$numIIQ T
,IIT U
$numIIV Y
,IIY Z
$numII[ ]
,II] ^
$numII_ b
,IIb c
$numIId g
,IIg h
$numIIi k
,IIk l
$numIIm p
,IIp q
$numIIr u
,IIu v
$numIIw z
,IIz {
$numII| 
,	II Ä
$num
IIÅ Ñ
,
IIÑ Ö
$num
IIÜ â
,
IIâ ä
$num
IIã é
,
IIé è
$num
IIê ì
,
IIì î
$num
IIï ò
,
IIò ô
$num
IIö õ
,
IIõ ú
$num
IIù †
,
II† °
$num
II¢ •
,
II• ¶
$num
IIß ©
,
II© ™
$num
II´ Æ
,
IIÆ Ø
$num
II∞ ≤
,
II≤ ≥
$num
II¥ ∑
,
II∑ ∏
$num
IIπ º
,
IIº Ω
$num
IIæ ¿
,
II¿ ¡
$num
II¬ ≈
,
II≈ ∆
$num
II« …
,
II…  
$num
IIÀ Œ
,
IIŒ œ
$num
II– ”
,
II” ‘
$num
II’ ÿ
,
IIÿ Ÿ
$num
II⁄ ›
,
II› ﬁ
$num
IIﬂ ‚
,
II‚ „
$num
II‰ Á
,
IIÁ Ë
$num
IIÈ Ï
,
IIÏ Ì
$num
IIÓ 
,
II Ò
$num
IIÚ Ù
,
IIÙ ı
$num
IIˆ ¯
,
II¯ ˘
$num
II˙ ¸
,
II¸ ˝
$num
II˛ Å
,
IIÅ Ç
$num
IIÉ Ü
,
IIÜ á
$num
IIà ä
,
IIä ã
$num
IIå é
,
IIé è
$num
IIê í
,
IIí ì
$num
IIî ñ
,
IIñ ó
$num
IIò ö
,
IIö õ
$num
IIú û
,
IIû ü
$num
II† ¢
,
II¢ £
$num
II§ ß
,
IIß ®
$num
II© ¨
,
II¨ ≠
$num
IIÆ ∞
,
II∞ ±
$num
II≤ µ
,
IIµ ∂
$num
II∑ π
,
IIπ ∫
$num
IIª Ω
,
IIΩ æ
$num
IIø ¬
,
II¬ √
$num
IIƒ ∆
,
II∆ «
$num
II» À
,
IIÀ Ã
$num
IIÕ œ
,
IIœ –
$num
II— ‘
,
II‘ ’
$num
II÷ Ÿ
}
II⁄ €
,
II€ ‹
new
II› ‡
byte
II· Â
[
IIÂ Ê
]
IIÊ Á
{
IIË È
$num
IIÍ Ì
,
IIÌ Ó
$num
IIÔ Ú
,
IIÚ Û
$num
IIÙ ˆ
,
IIˆ ˜
$num
II¯ ˚
,
II˚ ¸
$num
II˝ Ä
,
IIÄ Å
$num
IIÇ Ö
,
IIÖ Ü
$num
IIá à
,
IIà â
$num
IIä å
,
IIå ç
$num
IIé ê
,
IIê ë
$num
IIí ï
,
IIï ñ
$num
IIó ô
,
IIô ö
$num
IIõ û
,
IIû ü
$num
II† £
,
II£ §
$num
II• ®
,
II® ©
$num
II™ ≠
,
II≠ Æ
$num
IIØ ±
,
II± ≤
$num
II≥ µ
,
IIµ ∂
$num
II∑ π
,
IIπ ∫
$num
IIª Ω
,
IIΩ æ
$num
IIø ¡
,
II¡ ¬
$num
II√ ∆
,
II∆ «
$num
II»  
,
II  À
$num
IIÃ œ
,
IIœ –
$num
II— ‘
,
II‘ ’
$num
II÷ Ÿ
,
IIŸ ⁄
$num
II€ ‹
,
II‹ ›
$num
IIﬁ ·
,
II· ‚
$num
II„ Â
,
IIÂ Ê
$num
IIÁ È
,
IIÈ Í
$num
IIÎ Ì
,
IIÌ Ó
$num
IIÔ 
,
II Ò
$num
IIÚ ı
,
IIı ˆ
$num
II˜ ˙
,
II˙ ˚
$num
II¸ ˛
,
II˛ ˇ
$num
IIÄ Ç
,
IIÇ É
$num
IIÑ Ü
,
IIÜ á
$num
IIà ã
,
IIã å
$num
IIç ê
,
IIê ë
$num
IIí ï
,
IIï ñ
$num
IIó ö
,
IIö õ
$num
IIú ù
,
IIù û
$num
IIü ¢
,
II¢ £
$num
II§ ß
,
IIß ®
$num
II© ¨
,
II¨ ≠
$num
IIÆ ±
,
II± ≤
$num
II≥ ∂
,
II∂ ∑
$num
II∏ ∫
,
II∫ ª
$num
IIº æ
,
IIæ ø
$num
II¿ ¬
,
II¬ √
$num
IIƒ «
,
II« »
$num
II… Ã
,
IIÃ Õ
$num
IIŒ –
,
II– —
$num
II“ ‘
,
II‘ ’
$num
II÷ Ÿ
,
IIŸ ⁄
$num
II€ ﬁ
,
IIﬁ ﬂ
$num
II‡ „
,
II„ ‰
$num
IIÂ Á
,
IIÁ Ë
$num
IIÈ Î
,
IIÎ Ï
$num
IIÌ Ô
,
IIÔ 
$num
IIÒ Û
,
IIÛ Ù
$num
IIı ¯
,
II¯ ˘
$num
II˙ ¸
,
II¸ ˝
$num
II˛ Ä
,
IIÄ Å
$num
IIÇ Ö
,
IIÖ Ü
$num
IIá â
,
IIâ ä
$num
IIã é
,
IIé è
$num
IIê ì
,
IIì î
$num
IIï ó
,
IIó ò
$num
IIô ú
,
IIú ù
$num
IIû †
,
II† °
$num
II¢ •
,
II• ¶
$num
IIß ™
,
II™ ´
$num
II¨ Ø
,
IIØ ∞
$num
II± ¥
,
II¥ µ
$num
II∂ π
,
IIπ ∫
$num
IIª æ
,
IIæ ø
$num
II¿ ¬
,
II¬ √
$num
IIƒ «
,
II« »
$num
II… À
,
IIÀ Ã
$num
IIÕ –
,
II– —
$num
II“ ’
,
II’ ÷
$num
II◊ ⁄
,
II⁄ €
$num
II‹ ﬂ
,
IIﬂ ‡
$num
II· ‰
,
II‰ Â
$num
IIÊ È
,
IIÈ Í
$num
IIÎ Ì
,
IIÌ Ó
$num
IIÔ Ú
,
IIÚ Û
$num
IIÙ ˆ
,
IIˆ ˜
$num
II¯ ˙
,
II˙ ˚
$num
II¸ ˇ
,
IIˇ Ä
$num
IIÅ Ñ
,
IIÑ Ö
$num
IIÜ à
,
IIà â
$num
IIä ç
,
IIç é
$num
IIè í
,
IIí ì
$num
IIî ó
,
IIó ò
$num
IIô ú
,
IIú ù
$num
IIû †
,
II† °
$num
II¢ §
,
II§ •
$num
II¶ ®
,
II® ©
$num
II™ ≠
,
II≠ Æ
$num
IIØ ±
,
II± ≤
$num
II≥ ∂
,
II∂ ∑
$num
II∏ ∫
,
II∫ ª
$num
IIº ø
,
IIø ¿
$num
II¡ √
,
II√ ƒ
$num
II≈ »
,
II» …
$num
II  Ã
,
IIÃ Õ
$num
IIŒ –
,
II– —
$num
II“ ’
,
II’ ÷
$num
II◊ ⁄
,
II⁄ €
$num
II‹ ﬂ
,
IIﬂ ‡
$num
II· ‰
,
II‰ Â
$num
IIÊ È
,
IIÈ Í
$num
IIÎ Ó
,
IIÓ Ô
$num
II Ú
,
IIÚ Û
$num
IIÙ ˜
,
II˜ ¯
$num
II˘ ¸
,
II¸ ˝
$num
II˛ Å
,
IIÅ Ç
$num
IIÉ Ö
,
IIÖ Ü
$num
IIá â
,
IIâ ä
$num
IIã é
,
IIé è
$num
IIê ì
,
IIì î
$num
IIï ñ
,
IIñ ó
$num
IIò ö
,
IIö õ
$num
IIú ü
,
IIü †
$num
II° §
,
II§ •
$num
II¶ ©
,
II© ™
$num
II´ ≠
}
IIÆ Ø
}
II∞ ±
)
II± ≤
;
II≤ ≥
migrationBuilderKK 
.KK 
CreateIndexKK (
(KK( )
nameLL 
:LL 
$strLL -
,LL- .
tableMM 
:MM 
$strMM 
,MM 
columnNN 
:NN 
$strNN &
,NN& '
uniqueOO 
:OO 
trueOO 
)OO 
;OO 
migrationBuilderQQ 
.QQ 
AddForeignKeyQQ *
(QQ* +
nameRR 
:RR 
$strRR 9
,RR9 :
tableSS 
:SS 
$strSS 
,SS 
columnTT 
:TT 
$strTT &
,TT& '
principalTableUU 
:UU 
$strUU  -
,UU- .
principalColumnVV 
:VV  
$strVV! %
,VV% &
onDeleteWW 
:WW 
ReferentialActionWW +
.WW+ ,
CascadeWW, 3
)WW3 4
;WW4 5
}XX 	
	protectedZZ 
overrideZZ 
voidZZ 
DownZZ  $
(ZZ$ %
MigrationBuilderZZ% 5
migrationBuilderZZ6 F
)ZZF G
{[[ 	
migrationBuilder\\ 
.\\ 
DropForeignKey\\ +
(\\+ ,
name]] 
:]] 
$str]] 9
,]]9 :
table^^ 
:^^ 
$str^^ 
)^^ 
;^^  
migrationBuilder`` 
.`` 
	DropIndex`` &
(``& '
nameaa 
:aa 
$straa -
,aa- .
tablebb 
:bb 
$strbb 
)bb 
;bb  
migrationBuilderdd 
.dd 

DropColumndd '
(dd' (
nameee 
:ee 
$stree $
,ee$ %
tableff 
:ff 
$strff 
)ff 
;ff  
migrationBuilderhh 
.hh 

UpdateDatahh '
(hh' (
tableii 
:ii 
$strii !
,ii! "
	keyColumnjj 
:jj 
$strjj 
,jj  
keyValuekk 
:kk 
$numkk 
,kk 
columnsll 
:ll 
newll 
[ll 
]ll 
{ll  
$strll! /
,ll/ 0
$strll1 ?
}ll@ A
,llA B
valuesmm 
:mm 
newmm 
objectmm "
[mm" #
]mm# $
{mm% &
newmm' *
bytemm+ /
[mm/ 0
]mm0 1
{mm2 3
$nummm4 7
,mm7 8
$nummm9 <
,mm< =
$nummm> @
,mm@ A
$nummmB E
,mmE F
$nummmG J
,mmJ K
$nummmL O
,mmO P
$nummmQ S
,mmS T
$nummmU X
,mmX Y
$nummmZ \
,mm\ ]
$nummm^ `
,mm` a
$nummmb e
,mme f
$nummmg j
,mmj k
$nummml o
,mmo p
$nummmq t
,mmt u
$nummmv x
,mmx y
$nummmz }
,mm} ~
$num	mm Ç
,
mmÇ É
$num
mmÑ á
,
mmá à
$num
mmâ å
,
mmå ç
$num
mmé ê
,
mmê ë
$num
mmí ï
,
mmï ñ
$num
mmó ô
,
mmô ö
$num
mmõ û
,
mmû ü
$num
mm† £
,
mm£ §
$num
mm• ®
,
mm® ©
$num
mm™ ¨
,
mm¨ ≠
$num
mmÆ ∞
,
mm∞ ±
$num
mm≤ µ
,
mmµ ∂
$num
mm∑ ∫
,
mm∫ ª
$num
mmº ø
,
mmø ¿
$num
mm¡ ƒ
,
mmƒ ≈
$num
mm∆ …
,
mm…  
$num
mmÀ Œ
,
mmŒ œ
$num
mm– ”
,
mm” ‘
$num
mm’ ◊
,
mm◊ ÿ
$num
mmŸ ‹
,
mm‹ ›
$num
mmﬁ ‡
,
mm‡ ·
$num
mm‚ Â
,
mmÂ Ê
$num
mmÁ È
,
mmÈ Í
$num
mmÎ Ì
,
mmÌ Ó
$num
mmÔ Ú
,
mmÚ Û
$num
mmÙ ˆ
,
mmˆ ˜
$num
mm¯ ˘
,
mm˘ ˙
$num
mm˚ ˛
,
mm˛ ˇ
$num
mmÄ Ç
,
mmÇ É
$num
mmÑ Ü
,
mmÜ á
$num
mmà ã
,
mmã å
$num
mmç é
,
mmé è
$num
mmê ì
,
mmì î
$num
mmï ò
,
mmò ô
$num
mmö ú
,
mmú ù
$num
mmû ü
,
mmü †
$num
mm° §
,
mm§ •
$num
mm¶ ©
,
mm© ™
$num
mm´ Æ
,
mmÆ Ø
$num
mm∞ ≥
,
mm≥ ¥
$num
mmµ ∏
,
mm∏ π
$num
mm∫ Ω
,
mmΩ æ
$num
mmø ¡
,
mm¡ ¬
$num
mm√ ∆
,
mm∆ «
$num
mm» À
,
mmÀ Ã
$num
mmÕ –
,
mm– —
$num
mm“ ‘
,
mm‘ ’
$num
mm÷ Ÿ
}
mm⁄ €
,
mm€ ‹
new
mm› ‡
byte
mm· Â
[
mmÂ Ê
]
mmÊ Á
{
mmË È
$num
mmÍ Ì
,
mmÌ Ó
$num
mmÔ Ú
,
mmÚ Û
$num
mmÙ ı
,
mmı ˆ
$num
mm˜ ˙
,
mm˙ ˚
$num
mm¸ ˛
,
mm˛ ˇ
$num
mmÄ É
,
mmÉ Ñ
$num
mmÖ á
,
mmá à
$num
mmâ å
,
mmå ç
$num
mmé ê
,
mmê ë
$num
mmí î
,
mmî ï
$num
mmñ ô
,
mmô ö
$num
mmõ û
,
mmû ü
$num
mm† £
,
mm£ §
$num
mm• ß
,
mmß ®
$num
mm© ´
,
mm´ ¨
$num
mm≠ Ø
,
mmØ ∞
$num
mm± ≥
,
mm≥ ¥
$num
mmµ ∑
,
mm∑ ∏
$num
mmπ º
,
mmº Ω
$num
mmæ ø
,
mmø ¿
$num
mm¡ ¬
,
mm¬ √
$num
mmƒ «
,
mm« »
$num
mm… À
,
mmÀ Ã
$num
mmÕ œ
,
mmœ –
$num
mm— ‘
,
mm‘ ’
$num
mm÷ Ÿ
,
mmŸ ⁄
$num
mm€ ›
,
mm› ﬁ
$num
mmﬂ ‚
,
mm‚ „
$num
mm‰ Á
,
mmÁ Ë
$num
mmÈ Ï
,
mmÏ Ì
$num
mmÓ 
,
mm Ò
$num
mmÚ ı
,
mmı ˆ
$num
mm˜ ˙
,
mm˙ ˚
$num
mm¸ ˇ
,
mmˇ Ä
$num
mmÅ É
,
mmÉ Ñ
$num
mmÖ á
,
mmá à
$num
mmâ å
,
mmå ç
$num
mmé ê
,
mmê ë
$num
mmí ï
,
mmï ñ
$num
mmó ô
,
mmô ö
$num
mmõ ù
,
mmù û
$num
mmü ¢
,
mm¢ £
$num
mm§ ß
,
mmß ®
$num
mm© ´
,
mm´ ¨
$num
mm≠ ∞
,
mm∞ ±
$num
mm≤ µ
,
mmµ ∂
$num
mm∑ π
,
mmπ ∫
$num
mmª æ
,
mmæ ø
$num
mm¿ ¬
,
mm¬ √
$num
mmƒ «
,
mm« »
$num
mm… Ã
,
mmÃ Õ
$num
mmŒ —
,
mm— “
$num
mm” ’
,
mm’ ÷
$num
mm◊ ⁄
,
mm⁄ €
$num
mm‹ ﬂ
,
mmﬂ ‡
$num
mm· ‰
,
mm‰ Â
$num
mmÊ È
,
mmÈ Í
$num
mmÎ Ó
,
mmÓ Ô
$num
mm Ò
,
mmÒ Ú
$num
mmÛ ı
,
mmı ˆ
$num
mm˜ ˙
,
mm˙ ˚
$num
mm¸ ˛
,
mm˛ ˇ
$num
mmÄ Ç
,
mmÇ É
$num
mmÑ á
,
mmá à
$num
mmâ ã
,
mmã å
$num
mmç ê
,
mmê ë
$num
mmí î
,
mmî ï
$num
mmñ ô
,
mmô ö
$num
mmõ û
,
mmû ü
$num
mm† ¢
,
mm¢ £
$num
mm§ ß
,
mmß ®
$num
mm© ´
,
mm´ ¨
$num
mm≠ ∞
,
mm∞ ±
$num
mm≤ µ
,
mmµ ∂
$num
mm∑ ∫
,
mm∫ ª
$num
mmº æ
,
mmæ ø
$num
mm¿ √
,
mm√ ƒ
$num
mm≈ »
,
mm» …
$num
mm  Ã
,
mmÃ Õ
$num
mmŒ –
,
mm– —
$num
mm“ ’
,
mm’ ÷
$num
mm◊ ⁄
,
mm⁄ €
$num
mm‹ ﬂ
,
mmﬂ ‡
$num
mm· ‰
,
mm‰ Â
$num
mmÊ È
,
mmÈ Í
$num
mmÎ Ì
,
mmÌ Ó
$num
mmÔ Ú
,
mmÚ Û
$num
mmÙ ˆ
,
mmˆ ˜
$num
mm¯ ˘
,
mm˘ ˙
$num
mm˚ ˛
,
mm˛ ˇ
$num
mmÄ É
,
mmÉ Ñ
$num
mmÖ á
,
mmá à
$num
mmâ å
,
mmå ç
$num
mmé ê
,
mmê ë
$num
mmí ï
,
mmï ñ
$num
mmó ö
,
mmö õ
$num
mmú ü
,
mmü †
$num
mm° §
,
mm§ •
$num
mm¶ ©
,
mm© ™
$num
mm´ Æ
,
mmÆ Ø
$num
mm∞ ±
,
mm± ≤
$num
mm≥ µ
,
mmµ ∂
$num
mm∑ π
,
mmπ ∫
$num
mmª Ω
,
mmΩ æ
$num
mmø ¡
,
mm¡ ¬
$num
mm√ ∆
,
mm∆ «
$num
mm» À
,
mmÀ Ã
$num
mmÕ –
,
mm– —
$num
mm“ ’
,
mm’ ÷
$num
mm◊ ⁄
,
mm⁄ €
$num
mm‹ ﬂ
,
mmﬂ ‡
$num
mm· ‰
,
mm‰ Â
$num
mmÊ È
,
mmÈ Í
$num
mmÎ Ó
,
mmÓ Ô
$num
mm Ú
,
mmÚ Û
$num
mmÙ ˆ
,
mmˆ ˜
$num
mm¯ ˚
,
mm˚ ¸
$num
mm˝ Ä
,
mmÄ Å
$num
mmÇ Ö
,
mmÖ Ü
$num
mmá â
,
mmâ ä
$num
mmã é
,
mmé è
$num
mmê ì
,
mmì î
$num
mmï ò
,
mmò ô
$num
mmö ú
,
mmú ù
$num
mmû ü
,
mmü †
$num
mm° ¢
,
mm¢ £
$num
mm§ ¶
,
mm¶ ß
$num
mm® ™
}
mm´ ¨
}
mm≠ Æ
)
mmÆ Ø
;
mmØ ∞
}nn 	
}oo 
}pp Ç‚
KD:\Daniel\PMII\RpgApi\Migrations\20220925174239_MigracaoMuitosParaMuitos.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class $
MigracaoMuitosParaMuitos 1
:2 3
	Migration4 =
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str !
,! "
type 
: 
$str %
,% &
nullable 
: 
true 
, 
defaultValue 
: 
$str '
,' (

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str !
,! "
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str  
,  !
table 
: 
$str $
,$ %
type 
: 
$str 
, 
nullable   
:   
false   
,    
defaultValue!! 
:!! 
$num!! 
)!!  
;!!  !
migrationBuilder## 
.## 
	AddColumn## &
<##& '
int##' *
>##* +
(##+ ,
name$$ 
:$$ 
$str$$  
,$$  !
table%% 
:%% 
$str%% $
,%%$ %
type&& 
:&& 
$str&& 
,&& 
nullable'' 
:'' 
false'' 
,''  
defaultValue(( 
:(( 
$num(( 
)((  
;((  !
migrationBuilder** 
.** 
	AddColumn** &
<**& '
int**' *
>*** +
(**+ ,
name++ 
:++ 
$str++  
,++  !
table,, 
:,, 
$str,, $
,,,$ %
type-- 
:-- 
$str-- 
,-- 
nullable.. 
:.. 
false.. 
,..  
defaultValue// 
:// 
$num// 
)//  
;//  !
migrationBuilder11 
.11 
CreateTable11 (
(11( )
name22 
:22 
$str22 #
,22# $
columns33 
:33 
table33 
=>33 !
new33" %
{44 
Id55 
=55 
table55 
.55 
Column55 %
<55% &
int55& )
>55) *
(55* +
type55+ /
:55/ 0
$str551 6
,556 7
nullable558 @
:55@ A
false55B G
)55G H
.66 

Annotation66 #
(66# $
$str66$ 8
,668 9
$str66: @
)66@ A
,66A B
Nome77 
=77 
table77  
.77  !
Column77! '
<77' (
string77( .
>77. /
(77/ 0
type770 4
:774 5
$str776 E
,77E F
nullable77G O
:77O P
true77Q U
)77U V
,77V W
Dano88 
=88 
table88  
.88  !
Column88! '
<88' (
int88( +
>88+ ,
(88, -
type88- 1
:881 2
$str883 8
,888 9
nullable88: B
:88B C
false88D I
)88I J
}99 
,99 
constraints:: 
::: 
table:: "
=>::# %
{;; 
table<< 
.<< 

PrimaryKey<< $
(<<$ %
$str<<% 5
,<<5 6
x<<7 8
=><<9 ;
x<<< =
.<<= >
Id<<> @
)<<@ A
;<<A B
}== 
)== 
;== 
migrationBuilder?? 
.?? 
CreateTable?? (
(??( )
name@@ 
:@@ 
$str@@ -
,@@- .
columnsAA 
:AA 
tableAA 
=>AA !
newAA" %
{BB 
PersonagemIdCC  
=CC! "
tableCC# (
.CC( )
ColumnCC) /
<CC/ 0
intCC0 3
>CC3 4
(CC4 5
typeCC5 9
:CC9 :
$strCC; @
,CC@ A
nullableCCB J
:CCJ K
falseCCL Q
)CCQ R
,CCR S
HabilidadeIdDD  
=DD! "
tableDD# (
.DD( )
ColumnDD) /
<DD/ 0
intDD0 3
>DD3 4
(DD4 5
typeDD5 9
:DD9 :
$strDD; @
,DD@ A
nullableDDB J
:DDJ K
falseDDL Q
)DDQ R
}EE 
,EE 
constraintsFF 
:FF 
tableFF "
=>FF# %
{GG 
tableHH 
.HH 

PrimaryKeyHH $
(HH$ %
$strHH% ?
,HH? @
xHHA B
=>HHC E
newHHF I
{HHJ K
xHHL M
.HHM N
PersonagemIdHHN Z
,HHZ [
xHH\ ]
.HH] ^
HabilidadeIdHH^ j
}HHk l
)HHl m
;HHm n
tableII 
.II 

ForeignKeyII $
(II$ %
nameJJ 
:JJ 
$strJJ Q
,JJQ R
columnKK 
:KK 
xKK  !
=>KK" $
xKK% &
.KK& '
HabilidadeIdKK' 3
,KK3 4
principalTableLL &
:LL& '
$strLL( 5
,LL5 6
principalColumnMM '
:MM' (
$strMM) -
,MM- .
onDeleteNN  
:NN  !
ReferentialActionNN" 3
.NN3 4
CascadeNN4 ;
)NN; <
;NN< =
tableOO 
.OO 

ForeignKeyOO $
(OO$ %
namePP 
:PP 
$strPP Q
,PPQ R
columnQQ 
:QQ 
xQQ  !
=>QQ" $
xQQ% &
.QQ& '
PersonagemIdQQ' 3
,QQ3 4
principalTableRR &
:RR& '
$strRR( 5
,RR5 6
principalColumnSS '
:SS' (
$strSS) -
,SS- .
onDeleteTT  
:TT  !
ReferentialActionTT" 3
.TT3 4
CascadeTT4 ;
)TT; <
;TT< =
}UU 
)UU 
;UU 
migrationBuilderWW 
.WW 

InsertDataWW '
(WW' (
tableXX 
:XX 
$strXX $
,XX$ %
columnsYY 
:YY 
newYY 
[YY 
]YY 
{YY  
$strYY! %
,YY% &
$strYY' -
,YY- .
$strYY/ 5
}YY6 7
,YY7 8
valuesZZ 
:ZZ 
newZZ 
objectZZ "
[ZZ" #
,ZZ# $
]ZZ$ %
{[[ 
{\\ 
$num\\ 
,\\ 
$num\\ 
,\\ 
$str\\ (
}\\) *
,\\* +
{]] 
$num]] 
,]] 
$num]] 
,]] 
$str]] '
}]]( )
,]]) *
{^^ 
$num^^ 
,^^ 
$num^^ 
,^^ 
$str^^ )
}^^* +
}__ 
)__ 
;__ 
migrationBuilderaa 
.aa 

UpdateDataaa '
(aa' (
tablebb 
:bb 
$strbb !
,bb! "
	keyColumncc 
:cc 
$strcc 
,cc  
keyValuedd 
:dd 
$numdd 
,dd 
columnsee 
:ee 
newee 
[ee 
]ee 
{ee  
$stree! /
,ee/ 0
$stree1 ?
}ee@ A
,eeA B
valuesff 
:ff 
newff 
objectff "
[ff" #
]ff# $
{ff% &
newff' *
byteff+ /
[ff/ 0
]ff0 1
{ff2 3
$numff4 7
,ff7 8
$numff9 <
,ff< =
$numff> @
,ff@ A
$numffB D
,ffD E
$numffF H
,ffH I
$numffJ M
,ffM N
$numffO Q
,ffQ R
$numffS U
,ffU V
$numffW X
,ffX Y
$numffZ \
,ff\ ]
$numff^ a
,ffa b
$numffc f
,fff g
$numffh j
,ffj k
$numffl n
,ffn o
$numffp r
,ffr s
$numfft w
,ffw x
$numffy {
,ff{ |
$numff} 
,	ff Ä
$num
ffÅ É
,
ffÉ Ñ
$num
ffÖ á
,
ffá à
$num
ffâ ã
,
ffã å
$num
ffç ê
,
ffê ë
$num
ffí î
,
ffî ï
$num
ffñ ò
,
ffò ô
$num
ffö ú
,
ffú ù
$num
ffû °
,
ff° ¢
$num
ff£ ¶
,
ff¶ ß
$num
ff® ´
,
ff´ ¨
$num
ff≠ Ø
,
ffØ ∞
$num
ff± ≥
,
ff≥ ¥
$num
ffµ ∏
,
ff∏ π
$num
ff∫ Ω
,
ffΩ æ
$num
ffø ¡
,
ff¡ ¬
$num
ff√ ≈
,
ff≈ ∆
$num
ff« …
,
ff…  
$num
ffÀ Œ
,
ffŒ œ
$num
ff– ”
,
ff” ‘
$num
ff’ ◊
,
ff◊ ÿ
$num
ffŸ €
,
ff€ ‹
$num
ff› ‡
,
ff‡ ·
$num
ff‚ Â
,
ffÂ Ê
$num
ffÁ Í
,
ffÍ Î
$num
ffÏ Ó
,
ffÓ Ô
$num
ff Ú
,
ffÚ Û
$num
ffÙ ˜
,
ff˜ ¯
$num
ff˘ ¸
,
ff¸ ˝
$num
ff˛ Å
,
ffÅ Ç
$num
ffÉ Ö
,
ffÖ Ü
$num
ffá â
,
ffâ ä
$num
ffã ç
,
ffç é
$num
ffè í
,
ffí ì
$num
ffî ñ
,
ffñ ó
$num
ffò ô
,
ffô ö
$num
ffõ ù
,
ffù û
$num
ffü °
,
ff° ¢
$num
ff£ ¶
,
ff¶ ß
$num
ff® ™
,
ff™ ´
$num
ff¨ Æ
,
ffÆ Ø
$num
ff∞ ≤
,
ff≤ ≥
$num
ff¥ ∑
,
ff∑ ∏
$num
ffπ º
,
ffº Ω
$num
ffæ ¿
,
ff¿ ¡
$num
ff¬ ƒ
,
ffƒ ≈
$num
ff∆ »
}
ff…  
,
ff  À
new
ffÃ œ
byte
ff– ‘
[
ff‘ ’
]
ff’ ÷
{
ff◊ ÿ
$num
ffŸ €
,
ff€ ‹
$num
ff› ﬂ
,
ffﬂ ‡
$num
ff· ‰
,
ff‰ Â
$num
ffÊ È
,
ffÈ Í
$num
ffÎ Ó
,
ffÓ Ô
$num
ff Û
,
ffÛ Ù
$num
ffı ¯
,
ff¯ ˘
$num
ff˙ ˚
,
ff˚ ¸
$num
ff˝ Ä
,
ffÄ Å
$num
ffÇ Ñ
,
ffÑ Ö
$num
ffÜ â
,
ffâ ä
$num
ffã é
,
ffé è
$num
ffê í
,
ffí ì
$num
ffî ó
,
ffó ò
$num
ffô õ
,
ffõ ú
$num
ffù ü
,
ffü †
$num
ff° £
,
ff£ §
$num
ff• ß
,
ffß ®
$num
ff© ¨
,
ff¨ ≠
$num
ffÆ ∞
,
ff∞ ±
$num
ff≤ µ
,
ffµ ∂
$num
ff∑ π
,
ffπ ∫
$num
ffª æ
,
ffæ ø
$num
ff¿ √
,
ff√ ƒ
$num
ff≈ «
,
ff« »
$num
ff… Ã
,
ffÃ Õ
$num
ffŒ —
,
ff— “
$num
ff” ’
,
ff’ ÷
$num
ff◊ ⁄
,
ff⁄ €
$num
ff‹ ﬁ
,
ffﬁ ﬂ
$num
ff‡ „
,
ff„ ‰
$num
ffÂ Á
,
ffÁ Ë
$num
ffÈ Î
,
ffÎ Ï
$num
ffÌ 
,
ff Ò
$num
ffÚ ı
,
ffı ˆ
$num
ff˜ ˙
,
ff˙ ˚
$num
ff¸ ˇ
,
ffˇ Ä
$num
ffÅ Ñ
,
ffÑ Ö
$num
ffÜ â
,
ffâ ä
$num
ffã é
,
ffé è
$num
ffê í
,
ffí ì
$num
ffî ó
,
ffó ò
$num
ffô ú
,
ffú ù
$num
ffû °
,
ff° ¢
$num
ff£ ¶
,
ff¶ ß
$num
ff® ™
,
ff™ ´
$num
ff¨ Ø
,
ffØ ∞
$num
ff± ≥
,
ff≥ ¥
$num
ffµ ∏
,
ff∏ π
$num
ff∫ º
,
ffº Ω
$num
ffæ ¿
,
ff¿ ¡
$num
ff¬ ≈
,
ff≈ ∆
$num
ff«  
,
ff  À
$num
ffÃ œ
,
ffœ –
$num
ff— ‘
,
ff‘ ’
$num
ff÷ Ÿ
,
ffŸ ⁄
$num
ff€ ﬁ
,
ffﬁ ﬂ
$num
ff‡ „
,
ff„ ‰
$num
ffÂ Ë
,
ffË È
$num
ffÍ Î
,
ffÎ Ï
$num
ffÌ 
,
ff Ò
$num
ffÚ Ù
,
ffÙ ı
$num
ffˆ ˘
,
ff˘ ˙
$num
ff˚ ˝
,
ff˝ ˛
$num
ffˇ Ç
,
ffÇ É
$num
ffÑ á
,
ffá à
$num
ffâ ã
,
ffã å
$num
ffç è
,
ffè ê
$num
ffë î
,
ffî ï
$num
ffñ ô
,
ffô ö
$num
ffõ ù
,
ffù û
$num
ffü ¢
,
ff¢ £
$num
ff§ ß
,
ffß ®
$num
ff© ¨
,
ff¨ ≠
$num
ffÆ ±
,
ff± ≤
$num
ff≥ ∂
,
ff∂ ∑
$num
ff∏ ª
,
ffª º
$num
ffΩ ¿
,
ff¿ ¡
$num
ff¬ ≈
,
ff≈ ∆
$num
ff« …
,
ff…  
$num
ffÀ Œ
,
ffŒ œ
$num
ff– ”
,
ff” ‘
$num
ff’ ÿ
,
ffÿ Ÿ
$num
ff⁄ ‹
,
ff‹ ›
$num
ffﬁ ·
,
ff· ‚
$num
ff„ Ê
,
ffÊ Á
$num
ffË Î
,
ffÎ Ï
$num
ffÌ Ô
,
ffÔ 
$num
ffÒ Ù
,
ffÙ ı
$num
ffˆ ˘
,
ff˘ ˙
$num
ff˚ ˛
,
ff˛ ˇ
$num
ffÄ É
,
ffÉ Ñ
$num
ffÖ à
,
ffà â
$num
ffä ç
,
ffç é
$num
ffè ë
,
ffë í
$num
ffì ñ
,
ffñ ó
$num
ffò õ
,
ffõ ú
$num
ffù †
,
ff† °
$num
ff¢ •
,
ff• ¶
$num
ffß ™
,
ff™ ´
$num
ff¨ Æ
,
ffÆ Ø
$num
ff∞ ≥
,
ff≥ ¥
$num
ffµ ∑
,
ff∑ ∏
$num
ffπ ª
,
ffª º
$num
ffΩ ø
,
ffø ¿
$num
ff¡ ƒ
,
ffƒ ≈
$num
ff∆ »
,
ff» …
$num
ff  Õ
,
ffÕ Œ
$num
ffœ “
,
ff“ ”
$num
ff‘ ◊
,
ff◊ ÿ
$num
ffŸ ‹
,
ff‹ ›
$num
ffﬁ ·
,
ff· ‚
$num
ff„ Â
,
ffÂ Ê
$num
ffÁ È
,
ffÈ Í
$num
ffÎ Ó
,
ffÓ Ô
$num
ff Ú
,
ffÚ Û
$num
ffÙ ˜
,
ff˜ ¯
$num
ff˘ ˚
,
ff˚ ¸
$num
ff˝ Ä
,
ffÄ Å
$num
ffÇ Ö
,
ffÖ Ü
$num
ffá â
,
ffâ ä
$num
ffã ç
,
ffç é
$num
ffè í
,
ffí ì
$num
ffî ó
,
ffó ò
$num
ffô ú
,
ffú ù
$num
ffû †
,
ff† °
$num
ff¢ §
,
ff§ •
$num
ff¶ ©
}
ff™ ´
}
ff¨ ≠
)
ff≠ Æ
;
ffÆ Ø
migrationBuilderhh 
.hh 

InsertDatahh '
(hh' (
tableii 
:ii 
$strii .
,ii. /
columnsjj 
:jj 
newjj 
[jj 
]jj 
{jj  
$strjj! /
,jj/ 0
$strjj1 ?
}jj@ A
,jjA B
valueskk 
:kk 
newkk 
objectkk "
[kk" #
,kk# $
]kk$ %
{ll 
{mm 
$nummm 
,mm 
$nummm 
}mm 
,mm 
{nn 
$numnn 
,nn 
$numnn 
}nn 
,nn 
{oo 
$numoo 
,oo 
$numoo 
}oo 
,oo 
{pp 
$numpp 
,pp 
$numpp 
}pp 
,pp 
{qq 
$numqq 
,qq 
$numqq 
}qq 
,qq 
{rr 
$numrr 
,rr 
$numrr 
}rr 
,rr 
{ss 
$numss 
,ss 
$numss 
}ss 
,ss 
{tt 
$numtt 
,tt 
$numtt 
}tt 
,tt 
{uu 
$numuu 
,uu 
$numuu 
}uu 
}vv 
)vv 
;vv 
migrationBuilderxx 
.xx 
CreateIndexxx (
(xx( )
nameyy 
:yy 
$stryy =
,yy= >
tablezz 
:zz 
$strzz .
,zz. /
column{{ 
:{{ 
$str{{ &
){{& '
;{{' (
}|| 	
	protected~~ 
override~~ 
void~~ 
Down~~  $
(~~$ %
MigrationBuilder~~% 5
migrationBuilder~~6 F
)~~F G
{ 	
migrationBuilder
ÄÄ 
.
ÄÄ 
	DropTable
ÄÄ &
(
ÄÄ& '
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ -
)
ÅÅ- .
;
ÅÅ. /
migrationBuilder
ÉÉ 
.
ÉÉ 
	DropTable
ÉÉ &
(
ÉÉ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ #
)
ÑÑ# $
;
ÑÑ$ %
migrationBuilder
ÜÜ 
.
ÜÜ 

DropColumn
ÜÜ '
(
ÜÜ' (
name
áá 
:
áá 
$str
áá 
,
áá 
table
àà 
:
àà 
$str
àà !
)
àà! "
;
àà" #
migrationBuilder
ää 
.
ää 

DropColumn
ää '
(
ää' (
name
ãã 
:
ãã 
$str
ãã  
,
ãã  !
table
åå 
:
åå 
$str
åå $
)
åå$ %
;
åå% &
migrationBuilder
éé 
.
éé 

DropColumn
éé '
(
éé' (
name
èè 
:
èè 
$str
èè  
,
èè  !
table
êê 
:
êê 
$str
êê $
)
êê$ %
;
êê% &
migrationBuilder
íí 
.
íí 

DropColumn
íí '
(
íí' (
name
ìì 
:
ìì 
$str
ìì  
,
ìì  !
table
îî 
:
îî 
$str
îî $
)
îî$ %
;
îî% &
migrationBuilder
ññ 
.
ññ 
AlterColumn
ññ (
<
ññ( )
string
ññ) /
>
ññ/ 0
(
ññ0 1
name
óó 
:
óó 
$str
óó 
,
óó 
table
òò 
:
òò 
$str
òò !
,
òò! "
type
ôô 
:
ôô 
$str
ôô %
,
ôô% &
nullable
öö 
:
öö 
true
öö 
,
öö 

oldClrType
õõ 
:
õõ 
typeof
õõ "
(
õõ" #
string
õõ# )
)
õõ) *
,
õõ* +
oldType
úú 
:
úú 
$str
úú (
,
úú( )
oldNullable
ùù 
:
ùù 
true
ùù !
,
ùù! "
oldDefaultValue
ûû 
:
ûû  
$str
ûû! *
)
ûû* +
;
ûû+ ,
migrationBuilder
†† 
.
†† 

UpdateData
†† '
(
††' (
table
°° 
:
°° 
$str
°° !
,
°°! "
	keyColumn
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢  
keyValue
££ 
:
££ 
$num
££ 
,
££ 
columns
§§ 
:
§§ 
new
§§ 
[
§§ 
]
§§ 
{
§§  
$str
§§! /
,
§§/ 0
$str
§§1 ?
}
§§@ A
,
§§A B
values
•• 
:
•• 
new
•• 
object
•• "
[
••" #
]
••# $
{
••% &
new
••' *
byte
••+ /
[
••/ 0
]
••0 1
{
••2 3
$num
••4 7
,
••7 8
$num
••9 <
,
••< =
$num
••> @
,
••@ A
$num
••B E
,
••E F
$num
••G J
,
••J K
$num
••L O
,
••O P
$num
••Q T
,
••T U
$num
••V Y
,
••Y Z
$num
••[ ]
,
••] ^
$num
••_ b
,
••b c
$num
••d g
,
••g h
$num
••i k
,
••k l
$num
••m p
,
••p q
$num
••r u
,
••u v
$num
••w z
,
••z {
$num
••| 
,•• Ä
$num••Å Ñ
,••Ñ Ö
$num••Ü â
,••â ä
$num••ã é
,••é è
$num••ê ì
,••ì î
$num••ï ò
,••ò ô
$num••ö õ
,••õ ú
$num••ù †
,••† °
$num••¢ •
,••• ¶
$num••ß ©
,••© ™
$num••´ Æ
,••Æ Ø
$num••∞ ≤
,••≤ ≥
$num••¥ ∑
,••∑ ∏
$num••π º
,••º Ω
$num••æ ¿
,••¿ ¡
$num••¬ ≈
,••≈ ∆
$num••« …
,••…  
$num••À Œ
,••Œ œ
$num••– ”
,••” ‘
$num••’ ÿ
,••ÿ Ÿ
$num••⁄ ›
,••› ﬁ
$num••ﬂ ‚
,••‚ „
$num••‰ Á
,••Á Ë
$num••È Ï
,••Ï Ì
$num••Ó 
,•• Ò
$num••Ú Ù
,••Ù ı
$num••ˆ ¯
,••¯ ˘
$num••˙ ¸
,••¸ ˝
$num••˛ Å
,••Å Ç
$num••É Ü
,••Ü á
$num••à ä
,••ä ã
$num••å é
,••é è
$num••ê í
,••í ì
$num••î ñ
,••ñ ó
$num••ò ö
,••ö õ
$num••ú û
,••û ü
$num••† ¢
,••¢ £
$num••§ ß
,••ß ®
$num••© ¨
,••¨ ≠
$num••Æ ∞
,••∞ ±
$num••≤ µ
,••µ ∂
$num••∑ π
,••π ∫
$num••ª Ω
,••Ω æ
$num••ø ¬
,••¬ √
$num••ƒ ∆
,••∆ «
$num••» À
,••À Ã
$num••Õ œ
,••œ –
$num••— ‘
,••‘ ’
$num••÷ Ÿ
}••⁄ €
,••€ ‹
new••› ‡
byte••· Â
[••Â Ê
]••Ê Á
{••Ë È
$num••Í Ì
,••Ì Ó
$num••Ô Ú
,••Ú Û
$num••Ù ˆ
,••ˆ ˜
$num••¯ ˚
,••˚ ¸
$num••˝ Ä
,••Ä Å
$num••Ç Ö
,••Ö Ü
$num••á à
,••à â
$num••ä å
,••å ç
$num••é ê
,••ê ë
$num••í ï
,••ï ñ
$num••ó ô
,••ô ö
$num••õ û
,••û ü
$num••† £
,••£ §
$num••• ®
,••® ©
$num••™ ≠
,••≠ Æ
$num••Ø ±
,••± ≤
$num••≥ µ
,••µ ∂
$num••∑ π
,••π ∫
$num••ª Ω
,••Ω æ
$num••ø ¡
,••¡ ¬
$num••√ ∆
,••∆ «
$num••»  
,••  À
$num••Ã œ
,••œ –
$num••— ‘
,••‘ ’
$num••÷ Ÿ
,••Ÿ ⁄
$num••€ ‹
,••‹ ›
$num••ﬁ ·
,••· ‚
$num••„ Â
,••Â Ê
$num••Á È
,••È Í
$num••Î Ì
,••Ì Ó
$num••Ô 
,•• Ò
$num••Ú ı
,••ı ˆ
$num••˜ ˙
,••˙ ˚
$num••¸ ˛
,••˛ ˇ
$num••Ä Ç
,••Ç É
$num••Ñ Ü
,••Ü á
$num••à ã
,••ã å
$num••ç ê
,••ê ë
$num••í ï
,••ï ñ
$num••ó ö
,••ö õ
$num••ú ù
,••ù û
$num••ü ¢
,••¢ £
$num••§ ß
,••ß ®
$num••© ¨
,••¨ ≠
$num••Æ ±
,••± ≤
$num••≥ ∂
,••∂ ∑
$num••∏ ∫
,••∫ ª
$num••º æ
,••æ ø
$num••¿ ¬
,••¬ √
$num••ƒ «
,••« »
$num••… Ã
,••Ã Õ
$num••Œ –
,••– —
$num••“ ‘
,••‘ ’
$num••÷ Ÿ
,••Ÿ ⁄
$num••€ ﬁ
,••ﬁ ﬂ
$num••‡ „
,••„ ‰
$num••Â Á
,••Á Ë
$num••È Î
,••Î Ï
$num••Ì Ô
,••Ô 
$num••Ò Û
,••Û Ù
$num••ı ¯
,••¯ ˘
$num••˙ ¸
,••¸ ˝
$num••˛ Ä
,••Ä Å
$num••Ç Ö
,••Ö Ü
$num••á â
,••â ä
$num••ã é
,••é è
$num••ê ì
,••ì î
$num••ï ó
,••ó ò
$num••ô ú
,••ú ù
$num••û †
,••† °
$num••¢ •
,••• ¶
$num••ß ™
,••™ ´
$num••¨ Ø
,••Ø ∞
$num••± ¥
,••¥ µ
$num••∂ π
,••π ∫
$num••ª æ
,••æ ø
$num••¿ ¬
,••¬ √
$num••ƒ «
,••« »
$num••… À
,••À Ã
$num••Õ –
,••– —
$num••“ ’
,••’ ÷
$num••◊ ⁄
,••⁄ €
$num••‹ ﬂ
,••ﬂ ‡
$num••· ‰
,••‰ Â
$num••Ê È
,••È Í
$num••Î Ì
,••Ì Ó
$num••Ô Ú
,••Ú Û
$num••Ù ˆ
,••ˆ ˜
$num••¯ ˙
,••˙ ˚
$num••¸ ˇ
,••ˇ Ä
$num••Å Ñ
,••Ñ Ö
$num••Ü à
,••à â
$num••ä ç
,••ç é
$num••è í
,••í ì
$num••î ó
,••ó ò
$num••ô ú
,••ú ù
$num••û †
,••† °
$num••¢ §
,••§ •
$num••¶ ®
,••® ©
$num••™ ≠
,••≠ Æ
$num••Ø ±
,••± ≤
$num••≥ ∂
,••∂ ∑
$num••∏ ∫
,••∫ ª
$num••º ø
,••ø ¿
$num••¡ √
,••√ ƒ
$num••≈ »
,••» …
$num••  Ã
,••Ã Õ
$num••Œ –
,••– —
$num••“ ’
,••’ ÷
$num••◊ ⁄
,••⁄ €
$num••‹ ﬂ
,••ﬂ ‡
$num••· ‰
,••‰ Â
$num••Ê È
,••È Í
$num••Î Ó
,••Ó Ô
$num•• Ú
,••Ú Û
$num••Ù ˜
,••˜ ¯
$num••˘ ¸
,••¸ ˝
$num••˛ Å
,••Å Ç
$num••É Ö
,••Ö Ü
$num••á â
,••â ä
$num••ã é
,••é è
$num••ê ì
,••ì î
$num••ï ñ
,••ñ ó
$num••ò ö
,••ö õ
$num••ú ü
,••ü †
$num••° §
,••§ •
$num••¶ ©
,••© ™
$num••´ ≠
}••Æ Ø
}••∞ ±
)••± ≤
;••≤ ≥
}
¶¶ 	
}
ßß 
}®® ≈Ñ
GD:\Daniel\PMII\RpgApi\Migrations\20221005220539_MigracaoDadosUsuario.cs
	namespace 	
RpgApi
 
. 

Migrations 
{ 
public 

partial 
class  
MigracaoDadosUsuario -
:. /
	Migration0 9
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str !
,! "
	keyColumn 
: 
$str 
,  
keyValue 
: 
$num 
, 
columns 
: 
new 
[ 
] 
{  
$str! (
,( )
$str* 4
,4 5
$str6 A
,A B
$strC Q
,Q R
$strS a
}b c
,c d
values 
: 
new 
object "
[" #
]# $
{% &
$str' ;
,; <
-= >
$num> P
,P Q
-R S
$numS e
,e f
newg j
bytek o
[o p
]p q
{r s
$numt w
,w x
$numy {
,{ |
$num	} Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü à
,
à â
$num
ä å
,
å ç
$num
é ë
,
ë í
$num
ì ï
,
ï ñ
$num
ó ô
,
ô ö
$num
õ û
,
û ü
$num
† ¢
,
¢ £
$num
§ ¶
,
¶ ß
$num
® ´
,
´ ¨
$num
≠ Ø
,
Ø ∞
$num
± ¥
,
¥ µ
$num
∂ π
,
π ∫
$num
ª Ω
,
Ω æ
$num
ø ¬
,
¬ √
$num
ƒ «
,
« »
$num
… À
,
À Ã
$num
Õ Œ
,
Œ œ
$num
– “
,
“ ”
$num
‘ ◊
,
◊ ÿ
$num
Ÿ €
,
€ ‹
$num
› ‡
,
‡ ·
$num
‚ „
,
„ ‰
$num
Â Á
,
Á Ë
$num
È Ï
,
Ï Ì
$num
Ó 
,
 Ò
$num
Ú ı
,
ı ˆ
$num
˜ ˙
,
˙ ˚
$num
¸ ˛
,
˛ ˇ
$num
Ä Ç
,
Ç É
$num
Ñ á
,
á à
$num
â ã
,
ã å
$num
ç ê
,
ê ë
$num
í ï
,
ï ñ
$num
ó ö
,
ö õ
$num
ú û
,
û ü
$num
† £
,
£ §
$num
• ß
,
ß ®
$num
© ™
,
™ ´
$num
¨ Æ
,
Æ Ø
$num
∞ ≤
,
≤ ≥
$num
¥ ∑
,
∑ ∏
$num
π º
,
º Ω
$num
æ ¿
,
¿ ¡
$num
¬ ƒ
,
ƒ ≈
$num
∆ »
,
» …
$num
  Ã
,
Ã Õ
$num
Œ —
,
— “
$num
” ÷
,
÷ ◊
$num
ÿ ⁄
,
⁄ €
$num
‹ ﬂ
,
ﬂ ‡
$num
· ‰
,
‰ Â
$num
Ê È
,
È Í
$num
Î Ó
,
Ó Ô
$num
 Ú
,
Ú Û
$num
Ù ˜
,
˜ ¯
$num
˘ ¸
,
¸ ˝
$num
˛ Å
,
Å Ç
$num
É Ü
,
Ü á
$num
à ä
,
ä ã
$num
å è
}
ê ë
,
ë í
new
ì ñ
byte
ó õ
[
õ ú
]
ú ù
{
û ü
$num
† ¢
,
¢ £
$num
§ ß
,
ß ®
$num
© ´
,
´ ¨
$num
≠ ∞
,
∞ ±
$num
≤ ¥
,
¥ µ
$num
∂ π
,
π ∫
$num
ª æ
,
æ ø
$num
¿ ¬
,
¬ √
$num
ƒ ≈
,
≈ ∆
$num
«  
,
  À
$num
Ã œ
,
œ –
$num
— ”
,
” ‘
$num
’ ÿ
,
ÿ Ÿ
$num
⁄ ›
,
› ﬁ
$num
ﬂ ‚
,
‚ „
$num
‰ Ê
,
Ê Á
$num
Ë Í
,
Í Î
$num
Ï Ô
,
Ô 
$num
Ò Û
,
Û Ù
$num
ı ¯
,
¯ ˘
$num
˙ ˝
,
˝ ˛
$num
ˇ Ç
,
Ç É
$num
Ñ á
,
á à
$num
â ã
,
ã å
$num
ç ê
,
ê ë
$num
í ï
,
ï ñ
$num
ó ô
,
ô ö
$num
õ ù
,
ù û
$num
ü °
,
° ¢
$num
£ ¶
,
¶ ß
$num
® ©
,
© ™
$num
´ Æ
,
Æ Ø
$num
∞ ≥
,
≥ ¥
$num
µ ∏
,
∏ π
$num
∫ º
,
º Ω
$num
æ ¿
,
¿ ¡
$num
¬ ƒ
,
ƒ ≈
$num
∆ »
,
» …
$num
  Õ
,
Õ Œ
$num
œ “
,
“ ”
$num
‘ ’
,
’ ÷
$num
◊ ⁄
,
⁄ €
$num
‹ ﬂ
,
ﬂ ‡
$num
· ‰
,
‰ Â
$num
Ê È
,
È Í
$num
Î Ó
,
Ó Ô
$num
 Û
,
Û Ù
$num
ı ˜
,
˜ ¯
$num
˘ ¸
,
¸ ˝
$num
˛ Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü â
,
â ä
$num
ã ç
,
ç é
$num
è í
,
í ì
$num
î ñ
,
ñ ó
$num
ò ô
,
ô ö
$num
õ ù
,
ù û
$num
ü °
,
° ¢
$num
£ •
,
• ¶
$num
ß ™
,
™ ´
$num
¨ Ø
,
Ø ∞
$num
± ¥
,
¥ µ
$num
∂ π
,
π ∫
$num
ª æ
,
æ ø
$num
¿ ¬
,
¬ √
$num
ƒ «
,
« »
$num
… Ã
,
Ã Õ
$num
Œ —
,
— “
$num
” ÷
,
÷ ◊
$num
ÿ ⁄
,
⁄ €
$num
‹ ﬂ
,
ﬂ ‡
$num
· ‰
,
‰ Â
$num
Ê Ë
,
Ë È
$num
Í Ì
,
Ì Ó
$num
Ô Ú
,
Ú Û
$num
Ù ˜
,
˜ ¯
$num
˘ ˚
,
˚ ¸
$num
˝ Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü à
,
à â
$num
ä ç
,
ç é
$num
è í
,
í ì
$num
î ó
,
ó ò
$num
ô ú
,
ú ù
$num
û °
,
° ¢
$num
£ ¶
,
¶ ß
$num
® ™
,
™ ´
$num
¨ Ø
,
Ø ∞
$num
± ¥
,
¥ µ
$num
∂ π
,
π ∫
$num
ª æ
,
æ ø
$num
¿ √
,
√ ƒ
$num
≈ »
,
» …
$num
  Õ
,
Õ Œ
$num
œ —
,
— “
$num
” ÷
,
÷ ◊
$num
ÿ €
,
€ ‹
$num
› ‡
,
‡ ·
$num
‚ „
,
„ ‰
$num
Â Ë
,
Ë È
$num
Í Ï
,
Ï Ì
$num
Ó 
,
 Ò
$num
Ú Ù
,
Ù ı
$num
ˆ ¯
,
¯ ˘
$num
˙ ˝
,
˝ ˛
$num
ˇ Ç
,
Ç É
$num
Ñ Ü
,
Ü á
$num
à ã
,
ã å
$num
ç è
,
è ê
$num
ë ì
,
ì î
$num
ï ò
,
ò ô
$num
ö ù
,
ù û
$num
ü ¢
,
¢ £
$num
§ ß
,
ß ®
$num
© ´
,
´ ¨
$num
≠ ∞
,
∞ ±
$num
≤ µ
,
µ ∂
$num
∑ π
,
π ∫
$num
ª Ω
,
Ω æ
$num
ø ¬
,
¬ √
$num
ƒ ∆
,
∆ «
$num
» À
,
À Ã
$num
Õ –
,
– —
$num
“ ‘
,
‘ ’
$num
÷ Ÿ
,
Ÿ ⁄
$num
€ ›
,
› ﬁ
$num
ﬂ ‚
,
‚ „
$num
‰ Â
}
Ê Á
}
Ë È
)
È Í
;
Í Î
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str !
,! "
	keyColumn 
: 
$str 
,  
keyValue 
: 
$num 
, 
columns 
: 
new 
[ 
] 
{  
$str! (
,( )
$str* 4
,4 5
$str6 A
,A B
$strC Q
,Q R
$strS a
}b c
,c d
values 
: 
new 
object "
[" #
]# $
{% &
null' +
,+ ,
null- 1
,1 2
null3 7
,7 8
new9 <
byte= A
[A B
]B C
{D E
$numF I
,I J
$numK N
,N O
$numP R
,R S
$numT V
,V W
$numX Z
,Z [
$num\ _
,_ `
$numa c
,c d
$nume g
,g h
$numi j
,j k
$numl n
,n o
$nump s
,s t
$numu x
,x y
$numz |
,| }
$num	~ Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü â
,
â ä
$num
ã ç
,
ç é
$num
è ë
,
ë í
$num
ì ï
,
ï ñ
$num
ó ô
,
ô ö
$num
õ ù
,
ù û
$num
ü ¢
,
¢ £
$num
§ ¶
,
¶ ß
$num
® ™
,
™ ´
$num
¨ Æ
,
Æ Ø
$num
∞ ≥
,
≥ ¥
$num
µ ∏
,
∏ π
$num
∫ Ω
,
Ω æ
$num
ø ¡
,
¡ ¬
$num
√ ≈
,
≈ ∆
$num
«  
,
  À
$num
Ã œ
,
œ –
$num
— ”
,
” ‘
$num
’ ◊
,
◊ ÿ
$num
Ÿ €
,
€ ‹
$num
› ‡
,
‡ ·
$num
‚ Â
,
Â Ê
$num
Á È
,
È Í
$num
Î Ì
,
Ì Ó
$num
Ô Ú
,
Ú Û
$num
Ù ˜
,
˜ ¯
$num
˘ ¸
,
¸ ˝
$num
˛ Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü â
,
â ä
$num
ã é
,
é è
$num
ê ì
,
ì î
$num
ï ó
,
ó ò
$num
ô õ
,
õ ú
$num
ù ü
,
ü †
$num
° §
,
§ •
$num
¶ ®
,
® ©
$num
™ ´
,
´ ¨
$num
≠ Ø
,
Ø ∞
$num
± ≥
,
≥ ¥
$num
µ ∏
,
∏ π
$num
∫ º
,
º Ω
$num
æ ¿
,
¿ ¡
$num
¬ ƒ
,
ƒ ≈
$num
∆ …
,
…  
$num
À Œ
,
Œ œ
$num
– “
,
“ ”
$num
‘ ÷
,
÷ ◊
$num
ÿ ⁄
}
€ ‹
,
‹ ›
new
ﬁ ·
byte
‚ Ê
[
Ê Á
]
Á Ë
{
È Í
$num
Î Ì
,
Ì Ó
$num
Ô Ò
,
Ò Ú
$num
Û ˆ
,
ˆ ˜
$num
¯ ˚
,
˚ ¸
$num
˝ Ä
,
Ä Å
$num
Ç Ö
,
Ö Ü
$num
á ä
,
ä ã
$num
å ç
,
ç é
$num
è í
,
í ì
$num
î ñ
,
ñ ó
$num
ò õ
,
õ ú
$num
ù †
,
† °
$num
¢ §
,
§ •
$num
¶ ©
,
© ™
$num
´ ≠
,
≠ Æ
$num
Ø ±
,
± ≤
$num
≥ µ
,
µ ∂
$num
∑ π
,
π ∫
$num
ª æ
,
æ ø
$num
¿ ¬
,
¬ √
$num
ƒ «
,
« »
$num
… À
,
À Ã
$num
Õ –
,
– —
$num
“ ’
,
’ ÷
$num
◊ Ÿ
,
Ÿ ⁄
$num
€ ﬁ
,
ﬁ ﬂ
$num
‡ „
,
„ ‰
$num
Â Á
,
Á Ë
$num
È Ï
,
Ï Ì
$num
Ó 
,
 Ò
$num
Ú ı
,
ı ˆ
$num
˜ ˘
,
˘ ˙
$num
˚ ˝
,
˝ ˛
$num
ˇ Ç
,
Ç É
$num
Ñ á
,
á à
$num
â å
,
å ç
$num
é ë
,
ë í
$num
ì ñ
,
ñ ó
$num
ò õ
,
õ ú
$num
ù †
,
† °
$num
¢ §
,
§ •
$num
¶ ©
,
© ™
$num
´ Æ
,
Æ Ø
$num
∞ ≥
,
≥ ¥
$num
µ ∏
,
∏ π
$num
∫ º
,
º Ω
$num
æ ¡
,
¡ ¬
$num
√ ≈
,
≈ ∆
$num
«  
,
  À
$num
Ã Œ
,
Œ œ
$num
– “
,
“ ”
$num
‘ ◊
,
◊ ÿ
$num
Ÿ ‹
,
‹ ›
$num
ﬁ ·
,
· ‚
$num
„ Ê
,
Ê Á
$num
Ë Î
,
Î Ï
$num
Ì 
,
 Ò
$num
Ú ı
,
ı ˆ
$num
˜ ˙
,
˙ ˚
$num
¸ ˝
,
˝ ˛
$num
ˇ Ç
,
Ç É
$num
Ñ Ü
,
Ü á
$num
à ã
,
ã å
$num
ç è
,
è ê
$num
ë î
,
î ï
$num
ñ ô
,
ô ö
$num
õ ù
,
ù û
$num
ü °
,
° ¢
$num
£ ¶
,
¶ ß
$num
® ´
,
´ ¨
$num
≠ Ø
,
Ø ∞
$num
± ¥
,
¥ µ
$num
∂ π
,
π ∫
$num
ª æ
,
æ ø
$num
¿ √
,
√ ƒ
$num
≈ »
,
» …
$num
  Õ
,
Õ Œ
$num
œ “
,
“ ”
$num
‘ ◊
,
◊ ÿ
$num
Ÿ €
,
€ ‹
$num
› ‡
,
‡ ·
$num
‚ Â
,
Â Ê
$num
Á Í
,
Í Î
$num
Ï Ó
,
Ó Ô
$num
 Û
,
Û Ù
$num
ı ¯
,
¯ ˘
$num
˙ ˝
,
˝ ˛
$num
ˇ Å
,
Å Ç
$num
É Ü
,
Ü á
$num
à ã
,
ã å
$num
ç ê
,
ê ë
$num
í ï
,
ï ñ
$num
ó ö
,
ö õ
$num
ú ü
,
ü †
$num
° £
,
£ §
$num
• ®
,
® ©
$num
™ ≠
,
≠ Æ
$num
Ø ≤
,
≤ ≥
$num
¥ ∑
,
∑ ∏
$num
π º
,
º Ω
$num
æ ¿
,
¿ ¡
$num
¬ ≈
,
≈ ∆
$num
« …
,
…  
$num
À Õ
,
Õ Œ
$num
œ —
,
— “
$num
” ÷
,
÷ ◊
$num
ÿ ⁄
,
⁄ €
$num
‹ ﬂ
,
ﬂ ‡
$num
· ‰
,
‰ Â
$num
Ê È
,
È Í
$num
Î Ó
,
Ó Ô
$num
 Û
,
Û Ù
$num
ı ˜
,
˜ ¯
$num
˘ ˚
,
˚ ¸
$num
˝ Ä
,
Ä Å
$num
Ç Ñ
,
Ñ Ö
$num
Ü â
,
â ä
$num
ã ç
,
ç é
$num
è í
,
í ì
$num
î ó
,
ó ò
$num
ô õ
,
õ ú
$num
ù ü
,
ü †
$num
° §
,
§ •
$num
¶ ©
,
© ™
$num
´ Æ
,
Æ Ø
$num
∞ ≤
,
≤ ≥
$num
¥ ∂
,
∂ ∑
$num
∏ ª
}
º Ω
}
æ ø
)
ø ¿
;
¿ ¡
} 	
} 
} ‚
$D:\Daniel\PMII\RpgApi\Models\Arma.cs
	namespace 	
RpgApi
 
. 
Models 
{ 
public 

class 
Arma 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Dano 
{ 
get 
; 
set "
;" #
}$ %
public 

Personagem 

Personagem $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
PersonagemId 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ’
'D:\Daniel\PMII\RpgApi\Models\Disputa.cs
	namespace 	
RpgApi
 
. 
Models 
{		 
[ 
Table 

(
 
$str 
) 
] 
public 

class 
Disputa 
{ 
[ 	
Key	 
] 
[ 	
Column	 
( 
$str 
) 
] 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[ 	
Column	 
( 
$str 
) 
] 
public 
DateTime 
? 
DataDisputa $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
Column	 
( 
$str 
) 
] 
public 
int 

AtacanteId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Column	 
( 
$str 
) 
] 
public 
int 

OponenteId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Column	 
( 
$str 
) 
] 
public 
string 
Narracao 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
	NotMapped	 
] 
public   
int   
HabilidadeId   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
["" 	
	NotMapped""	 
]"" 
public## 
List## 
<## 
int## 
>## 
ListaIdPersonagens## +
{##, -
get##. 1
;##1 2
set##3 6
;##6 7
}##8 9
[%% 	
	NotMapped%%	 
]%% 
public&& 
List&& 
<&& 
string&& 
>&& 

Resultados&& &
{&&' (
get&&) ,
;&&, -
set&&. 1
;&&1 2
}&&3 4
})) 
}** ’
0D:\Daniel\PMII\RpgApi\Models\Enuns\ClasseEnum.cs
	namespace 	
RpgApi
 
. 
Models 
. 
Enuns 
{ 
public 

enum 

ClasseEnum 
{		 
	Cavaleiro

 
=

 
$num

 
,

 
Mago 
= 
$num 
, 
Clerigo 
= 
$num 
} 
} Ø
*D:\Daniel\PMII\RpgApi\Models\Habilidade.cs
	namespace 	
RpgApi
 
. 
Models 
{ 
public 

class 

Habilidade 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Dano 
{ 
get 
; 
set "
;" #
}$ %
} 
} ´
*D:\Daniel\PMII\RpgApi\Models\Personagem.cs
	namespace 	
RpgApi
 
. 
Models 
{ 
public 

class 

Personagem 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Nome		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 

PontosVida

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
Forca 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
Defesa 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
Inteligencia 
{  !
get" %
;% &
set' *
;* +
}, -
public 

ClasseEnum 
Classe  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
byte 
[ 
] 
FotoPersonagem $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	

JsonIgnore	 
] 
public 
Usuario 
Usuario 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	

JsonIgnore	 
] 
public 
Arma 
Arma 
{ 
get 
; 
set  #
;# $
}% &
public 
List 
<  
PersonagemHabilidade (
>( )!
PersonagemHabilidades* ?
{@ A
getB E
;E F
setG J
;J K
}L M
public 
int 
Disputas 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Vitorias 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Derrotas 
{ 
get !
;! "
set# &
;& '
}( )
}"" 
}## Å
4D:\Daniel\PMII\RpgApi\Models\PersonagemHabilidade.cs
	namespace 	
RpgApi
 
. 
Models 
{ 
public 

class  
PersonagemHabilidade %
{		 
public

 
int

 
PersonagemId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 

Personagem 

Personagem $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
HabilidadeId 
{  !
get" %
;% &
set' *
;* +
}, -
public 

Habilidade 

Habilidade $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ı
'D:\Daniel\PMII\RpgApi\Models\Usuario.cs
	namespace 	
RpgApi
 
. 
Models 
{ 
public 

class 
Usuario 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Username		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
byte

 
[

 
]

 
PasswordHash

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
byte 
[ 
] 
PasswordSalt "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
byte 
[ 
] 
Foto 
{ 
get  
;  !
set" %
;% &
}' (
public 
double 
? 
Latitude 
{  !
get" %
;% &
set' *
;* +
}, -
public 
double 
? 
	Longitude  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 

DataAcesso #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
	NotMapped	 
] 
public 
string 
PasswordString $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
< 

Personagem 
> 
Personagens  +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
string 
Perfil 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
	NotMapped	 
] 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ™!
 D:\Daniel\PMII\RpgApi\Program.cs
var

 
builder

 
=

 
WebApplication

 
.

 
CreateBuilder

 *
(

* +
args

+ /
)

/ 0
;

0 1
builder 
. 
Services 
. 
AddDbContext 
< 
DataContext )
>) *
(* +
options+ 2
=>3 5
{ 
options 
. 
UseSqlServer 
( 
builder  
.  !
Configuration! .
.. /
GetConnectionString/ B
(B C
$strC Q
)Q R
)R S
;S T
} 
) 
; 
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. 
AddAuthentication "
(" #
JwtBearerDefaults# 4
.4 5 
AuthenticationScheme5 I
)I J
. 
AddJwtBearer 
( 
options 
=> 
{ 
options 
. %
TokenValidationParameters )
=* +
new, /%
TokenValidationParameters0 I
{ 	$
ValidateIssuerSigningKey $
=% &
true' +
,+ ,
IssuerSigningKey 
= 
new " 
SymmetricSecurityKey# 7
(7 8
Encoding8 @
.@ A
ASCIIA F
. 
GetBytes 
( 
builder !
.! "
Configuration" /
./ 0

GetSection0 :
(: ;
$str; T
)T U
.U V
ValueV [
)[ \
)\ ]
,] ^
ValidateIssuer 
= 
false "
," #
ValidateAudience 
= 
false $
} 	
;	 

} 
) 
; 
builder!! 
.!! 
Services!! 
.!! #
AddEndpointsApiExplorer!! (
(!!( )
)!!) *
;!!* +
builder"" 
."" 
Services"" 
."" 
AddSwaggerGen"" 
("" 
)""  
;""  !
builder$$ 
.$$ 
Services$$ 
.$$ 
AddControllers$$ 
($$  
)$$  !
.$$! "
AddNewtonsoftJson$$" 3
($$3 4
options$$4 ;
=>$$< >
options%% 
.%% 
SerializerSettings%% 
.%% !
ReferenceLoopHandling%% 4
=%%5 6

Newtonsoft%%7 A
.%%A B
Json%%B F
.%%F G!
ReferenceLoopHandling%%G \
.%%\ ]
Ignore%%] c
)&& 
;&& 
builder(( 
.(( 
Services(( 
.(( 
TryAddSingleton((  
<((  ! 
IHttpContextAccessor((! 5
,((5 6
HttpContextAccessor((7 J
>((J K
(((K L
)((L M
;((M N
var** 
app** 
=** 	
builder**
 
.** 
Build** 
(** 
)** 
;** 
if-- 
(-- 
app-- 
.-- 
Environment-- 
.-- 
IsDevelopment-- !
(--! "
)--" #
)--# $
{.. 
app// 
.// 

UseSwagger// 
(// 
)// 
;// 
app00 
.00 
UseSwaggerUI00 
(00 
)00 
;00 
}11 
app33 
.33 
UseHttpsRedirection33 
(33 
)33 
;33 
app55 
.55 
UseAuthentication55 
(55 
)55 
;55 
app66 
.66 
UseAuthorization66 
(66 
)66 
;66 
app88 
.88 
MapControllers88 
(88 
)88 
;88 
app:: 
.:: 
Run:: 
(:: 
):: 	
;::	 
É
+D:\Daniel\PMII\RpgApi\Utils\Criptografia.cs
	namespace 	
RpgApi
 
. 
Utils 
{ 
public 

class 
Criptografia 
{		 
public

 
static

 
void

 
CriarPasswordHash

 ,
(

, -
string

- 3
password

4 <
,

< =
out

> A
byte

B F
[

F G
]

G H
hash

I M
,

M N
out

O R
byte

S W
[

W X
]

X Y
salt

Z ^
)

^ _
{ 	
using 
( 
var 
hmac 
= 
new !
System" (
.( )
Security) 1
.1 2
Cryptography2 >
.> ?

HMACSHA512? I
(I J
)J K
)K L
{ 
salt 
= 
hmac 
. 
Key 
;  
hash 
= 
hmac 
. 
ComputeHash '
(' (
System( .
.. /
Text/ 3
.3 4
Encoding4 <
.< =
UTF8= A
.A B
GetBytesB J
(J K
passwordK S
)S T
)T U
;U V
} 
} 	
public 
static 
bool !
VerificarPasswordHash 0
(0 1
string1 7
password8 @
,@ A
byteB F
[F G
]G H
hashI M
,M N
byteO S
[S T
]T U
saltV Z
)Z [
{ 	
using 
( 
var 
hmac 
= 
new !
System" (
.( )
Security) 1
.1 2
Cryptography2 >
.> ?

HMACSHA512? I
(I J
saltJ N
)N O
)O P
{ 
var 
computedHash  
=! "
hmac# '
.' (
ComputeHash( 3
(3 4
System4 :
.: ;
Text; ?
.? @
Encoding@ H
.H I
UTF8I M
.M N
GetBytesN V
(V W
passwordW _
)_ `
)` a
;a b
for 
( 
int 
i 
= 
$num 
; 
i  !
<" #
computedHash$ 0
.0 1
Length1 7
;7 8
i9 :
++: <
)< =
{ 
if 
( 
computedHash $
[$ %
i% &
]& '
!=( *
hash+ /
[/ 0
i0 1
]1 2
)2 3
{ 
return 
false $
;$ %
} 
} 
return 
true 
; 
}   
}!! 	
}&& 
}'' ó
(D:\Daniel\PMII\RpgApi\WeatherForecast.cs
	namespace 	
RpgApi
 
; 
public 
class 
WeatherForecast 
{ 
public 

DateTime 
Date 
{ 
get 
; 
set  #
;# $
}% &
public 

int 
TemperatureC 
{ 
get !
;! "
set# &
;& '
}( )
public		 

int		 
TemperatureF		 
=>		 
$num		 !
+		" #
(		$ %
int		% (
)		( )
(		) *
TemperatureC		* 6
/		7 8
$num		9 ?
)		? @
;		@ A
public 

string 
Summary 
{ 
get 
;  
set! $
;$ %
}& '
} 